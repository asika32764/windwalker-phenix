"use strict";!function(){var e=window.PhoenixSwitch={name:"phoenix-switch",template:'\n<label class="phoenix-switch" :for="idName" :class="[size ? \'switch-\' + size : \'\']">\n    <input :id="idName + \'-unchecked\'" :name="name" type="hidden"\n        :value="falseValue"\n        :disabled="disabled"\n    />\n    <input type="checkbox" :name="name" :id="idName" class="form-control" :class="classes"\n        :true-value="trueValue" :false-value="falseValue" :disabled="disabled"\n        :value="trueValue"\n        :checked="currentValue == trueValue"\n        @change="changed($event)">\n    <span\n        class="switch-slider"\n        :class="[\'slider-\' + shape, color ? \'btn-\' + color : \'btn-default\']"\n    ></span>\n</label>\n    ',data:function(){return{idName:"",currentValue:null}},props:{id:String,classes:String,value:[String,Number],name:String,disabled:Boolean,trueValue:{type:String,default:"1"},falseValue:{type:String,default:"0"},size:{type:String,default:"default"},color:{type:String,default:"primary"},shape:{type:String,default:"square"}},created:function(){if(null==this.name)throw new Error('[Phoenix Switch] You must provide "name" attribute.');this.idName=this.id||"input-"+this.getDashedName(),this.currentValue=this.value},methods:{getDashedName:function(){return this.name.replace(/\[/g,"-").replace(/]/,"")},changed:function(e){this.currentValue=e.srcElement.checked?this.trueValue:this.falseValue}},watch:{currentValue:function(){this.$emit("input",this.currentValue)},value:function(){this.currentValue=this.value}}};void 0!==window.Vue&&window.Vue.component("phoenix-switch",e)}();