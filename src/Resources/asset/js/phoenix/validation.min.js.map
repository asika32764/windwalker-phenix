{"version":3,"sources":["validation.min.js"],"names":["$","plugin","handlers","defaultOptions","events","scroll","enabled","offset","duration","PhoenixValidation","element","options","extend","this","STATE_SUCCESS","STATE_FAIL","STATE_NONE","STATE_EMPTY","form","validators","theme","inputs","find","registerDefaultValidators","registerEvents","prototype","addField","input","add","validateAll","self","inValid","each","i","validate","push","target","is","parents","attr","animate","scrollTop","top","length","className","validator","$input","showResponse","hasClass","prop","toLowerCase","val","match","handler","help","notice","state","Phoenix","Theme","showValidateResponse","trigger","type","removeResponse","$element","removeValidateResponse","addValidator","name","on","event","stopPropagation","preventDefault","fn","data","username","value","RegExp","test","password","numeric","email","punycode","toASCII","url","alnum","color","creditcard","ip","jQuery"],"mappings":"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","file":"validation.min.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later;\n */\n\n/**\n * PhoenixValidation\n */\n;(function($) {\n  \"use strict\";\n\n  /**\n   * Plugin name.\n   *\n   * @type {string}\n   */\n  var plugin = 'validation';\n\n  /**\n   * Default handlers\n   *\n   * @type {Object}\n   */\n  var handlers = {};\n\n  var defaultOptions = {\n    events: ['change'],\n    scroll: {\n      enabled: true,\n      offset: -100,\n      duration: 1000\n    }\n  };\n\n  /**\n   * Class init.\n   *\n   * @param {jQuery} element\n   * @param {Object} options\n   * @constructor\n   */\n  var PhoenixValidation = function(element, options) {\n    options = $.extend({}, defaultOptions, options);\n\n    /**\n     * Validate success.\n     *\n     * @type {string}\n     */\n    this.STATE_SUCCESS = 'success';\n\n    /**\n     * Validate fail.\n     *\n     * @type {string}\n     */\n    this.STATE_FAIL = 'fail';\n\n    /**\n     * Pass or required with value.\n     *\n     * @type {string}\n     */\n    this.STATE_NONE = 'none';\n\n    /**\n     * Required with no value.\n     *\n     * @type {string}\n     */\n    this.STATE_EMPTY = 'empty';\n\n    this.form = element || $;\n    this.options = options;\n    this.validators = [];\n    this.theme = {};\n    this.inputs = this.form.find('input, select, textarea, div.input-list-container');\n\n    this.registerDefaultValidators();\n    this.registerEvents();\n  };\n\n  PhoenixValidation.prototype = {\n\n    /**\n     * Add field.\n     *\n     * @param {*} input\n     * @returns {PhoenixValidation}\n     */\n    addField: function(input) {\n      this.inputs = this.inputs.add(input);\n\n      return this;\n    },\n\n    /**\n     * Validate All.\n     *\n     * @returns {boolean}\n     */\n    validateAll: function() {\n      var self = this, inValid = [];\n      var scroll = self.options.scroll.enabled;\n\n      this.inputs.each(function(i) {\n        if (!self.validate(this)) {\n          inValid.push(this);\n\n          // Scroll\n          if (scroll) {\n            // Find displayed element\n            var target = $(this);\n\n            if (!target.is(':visible')) {\n              target = target.parents('#' + target.attr('id') + '-control');\n            }\n\n            $('html, body').animate({\n              scrollTop: target.offset().top + self.options.scroll.offset\n            }, self.options.scroll.duration);\n\n            scroll = false;\n          }\n        }\n      });\n\n      return inValid.length <= 0;\n    },\n\n    /**\n     * Validate.\n     *\n     * @param {jQuery} input\n     * @returns {boolean}\n     */\n    validate: function(input) {\n      var $input = $(input), tagName, className, validator;\n\n      if ($input.attr('disabled')) {\n        this.showResponse(this.STATE_NONE, $input);\n\n        return true;\n      }\n\n      if ($input.attr('type') == 'radio' || $input.attr('type') == 'checkbox') {\n        return true;\n      }\n\n      if ($input.attr('required') || $input.hasClass('required')) {\n        // Handle radio & checkboxes\n        if ($input.prop(\"tagName\").toLowerCase() === 'div' && $input.hasClass('input-list-container')) {\n          if (!$input.find('input:checked').length) {\n            this.showResponse(this.STATE_EMPTY, $input);\n\n            return false;\n          }\n        }\n\n        // Handle all fields and checkbox\n        else if (!$input.val() || ($input.attr('type') === 'checkbox' && !$input.is(':checked'))) {\n          this.showResponse(this.STATE_EMPTY, $input);\n\n          return false;\n        }\n      }\n\n      // Is value exists, validate this type.\n      className = $input.attr('class');\n\n      if (className) {\n        validator = className.match(/validate-([a-zA-Z0-9\\_|-]+)/);\n      }\n\n      // Empty value and no validator config, set response to none.\n      if (!$input.val() || !validator) {\n        this.showResponse(this.STATE_NONE, $input);\n\n        return true;\n      }\n\n      validator = this.validators[validator[1]];\n\n      if (!validator || !validator.handler) {\n        this.showResponse(this.STATE_NONE, $input);\n\n        return true;\n      }\n\n      if (!validator.handler($input.val(), $input)) {\n        var help = validator.options.notice;\n\n        if (typeof  help == 'function') {\n          help = help($input, this);\n        }\n\n        this.showResponse(this.STATE_FAIL, $input, help);\n\n        return false;\n      }\n\n      this.showResponse(this.STATE_SUCCESS, $input);\n\n      return true;\n    },\n\n    /**\n     * Show response on input.\n     *\n     * @param {string} state\n     * @param {jQuery} $input\n     * @param {string} help\n     *\n     * @returns {PhoenixValidation}\n     */\n    showResponse: function(state, $input, help) {\n      Phoenix.Theme.showValidateResponse(this, state, $input, help);\n\n      $input.trigger({\n        type: 'phoenix.validate.' + state,\n        input: $input,\n        state: state,\n        help: help\n      });\n\n      return this;\n    },\n\n    /**\n     * Remove responses.\n     *\n     * @param {jQuery} $element\n     *\n     * @returns {PhoenixValidation}\n     */\n    removeResponse: function($element) {\n      Phoenix.Theme.removeValidateResponse($element);\n\n      return this;\n    },\n\n    /**\n     * Add validator handler.\n     *\n     * @param name\n     * @param validator\n     * @param options\n     * @returns {PhoenixValidation}\n     */\n    addValidator: function(name, validator, options) {\n      options = options || {};\n\n      this.validators[name] = {\n        handler: validator,\n        options: options\n      };\n\n      return this;\n    },\n\n    /**\n     * Register events.\n     */\n    registerEvents: function() {\n      var self = this;\n\n      this.form.on('submit', function(event) {\n        if (!self.validateAll()) {\n          event.stopPropagation();\n          event.preventDefault();\n\n          return false;\n        }\n\n        return true;\n      });\n\n      $.each(this.options.events, function() {\n        self.inputs.on(this, function() {\n          self.validate(this);\n        });\n      });\n    },\n\n    /**\n     * Register default validators.\n     */\n    registerDefaultValidators: function() {\n      var self = this;\n\n      $.each(handlers, function(i) {\n        self.addValidator(i, this);\n      });\n    }\n  };\n\n  /**\n   * Push to plugins.\n   *\n   * @param   {Object} options\n   *\n   * @returns {PhoenixValidation}\n   */\n  $.fn[plugin] = function(options) {\n    if (!this.data('phoenix.' + plugin)) {\n      this.data('phoenix.' + plugin, new PhoenixValidation(this, options));\n    }\n\n    return this.data('phoenix.' + plugin);\n  };\n\n  handlers.username = function(value, element) {\n    var regex = new RegExp(\"[\\<|\\>|\\\"|\\'|\\%|\\;|\\(|\\)|\\&]\", \"i\");\n    return !regex.test(value);\n  };\n\n  handlers.password = function(value, element) {\n    var regex = /^\\S[\\S ]{2,98}\\S$/;\n    return regex.test(value);\n  };\n\n  handlers.numeric = function(value, element) {\n    var regex = /^(\\d|-)?(\\d|,)*\\.?\\d*$/;\n    return regex.test(value);\n  };\n\n  handlers.email = function(value, element) {\n    value = punycode.toASCII(value);\n    var regex = /^[a-zA-Z0-9.!#$%&â€™*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return regex.test(value);\n  };\n\n  handlers.url = function(value, element) {\n    value = punycode.toASCII(value);\n    var regex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i;\n    return regex.test(value);\n  };\n\n  handlers.alnum = function(value, element) {\n    var regex = /^[a-zA-Z0-9]*$/;\n    return regex.test(value);\n  };\n\n  handlers.color = function(value, element) {\n    var regex = /^#(?:[0-9a-f]{3}){1,2}$/;\n    return regex.test(value);\n  };\n\n  /**\n   * @see  http://www.virtuosimedia.com/dev/php/37-tested-php-perl-and-javascript-regular-expressions\n   */\n  handlers.creditcard = function(value, element) {\n    var regex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*$/;\n    return regex.test(value);\n  };\n\n  handlers.ip = function(value, element) {\n    var regex = /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/;\n    return regex.test(value);\n  };\n\n})(jQuery);\n"]}