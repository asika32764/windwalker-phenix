{"version":3,"sources":["list-dependent.js"],"names":["$","nope","value","ele","dep","ListDependent","ajax","url","value_field","source","text_field","first_option","default_value","initial_load","empty_mark","hooks","before_request","after_request","$element","dependent","options","element","extend","constructor","defaultOptions","bindEvents","changeList","val","on","event","currentTarget","initial","ajaxUpdate","sourceUpdate","beforeHook","updateListElements","parseInt","console","log","afterHook","data","get","done","response","success","error","message","fail","always","items","self","textField","valueField","empty","unshift","each","option","attr","attributes","index","append","trigger","before","call","after","fn","pluginName","jQuery"],"mappings":"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","file":"list-dependent.js","sourcesContent":["/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2017 {ORGANIZATION}. All rights reserved.\r\n * @license    GNU General Public License version 2 or later.\r\n */\r\n\r\n;(function($) {\r\n  \"use strict\";\r\n\r\n  const nope = (value, ele, dep) => {};\r\n\r\n  /**\r\n   * Class init.\r\n   * @param {jQuery}        $element\r\n   * @param {jQuery|string} dependent\r\n   * @param {Object}        options\r\n   * @constructor\r\n   */\r\n  class ListDependent {\r\n    static get pluginName() { return 'listDependent' }\r\n    static get defaultOptions() {\r\n      return {\r\n        ajax: {\r\n          url: null,\r\n          value_field: 'value'\r\n        },\r\n        source: null,\r\n        text_field: 'title',\r\n        value_field: 'id',\r\n        first_option: null,\r\n        default_value: null,\r\n        initial_load: true,\r\n        empty_mark: '__EMPTY__',\r\n        hooks: {\r\n          before_request: nope,\r\n          after_request: nope\r\n        }\r\n      };\r\n    }\r\n\r\n    constructor($element, dependent, options) {\r\n      this.element = $element;\r\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\r\n      this.dependent = $(dependent);\r\n\r\n      this.bindEvents();\r\n\r\n      if (this.options.initial_load) {\r\n        this.changeList(this.dependent.val(), true);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Bind events.\r\n     */\r\n    bindEvents() {\r\n      this.dependent.on('change', (event) => {\r\n        this.changeList($(event.currentTarget).val());\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Update the list elements.\r\n     *\r\n     * @param {*}    value\r\n     * @param {bool} initial\r\n     */\r\n    changeList(value, initial = null) {\r\n      value = value || this.dependent.val();\r\n\r\n      // Empty mark\r\n      if (value === '') {\r\n        value = this.options.empty_mark;\r\n      }\r\n\r\n      if (this.options.ajax.url) {\r\n        this.ajaxUpdate(value);\r\n      } else if (this.options.source) {\r\n        this.sourceUpdate(value, initial);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Update list by source.\r\n     *\r\n     * @param {string} value\r\n     * @param {bool}   initial\r\n     */\r\n    sourceUpdate(value, initial = null) {\r\n      const source = this.options.source;\r\n\r\n      this.beforeHook(value, this.element, this.dependent);\r\n\r\n      if (source[value]) {\r\n        this.updateListElements(source[value]);\r\n      } else {\r\n        this.updateListElements([]);\r\n\r\n        if (!initial && value !== '' && parseInt(value) !== 0) {\r\n          console.log('List for value: ' + value + ' not found.');\r\n        }\r\n      }\r\n\r\n      this.afterHook(value, this.element, this.dependent);\r\n    }\r\n\r\n    /**\r\n     * Do ajax.\r\n     *\r\n     * @param {string} value\r\n     */\r\n    ajaxUpdate(value) {\r\n      const data = {};\r\n      data[this.options.ajax.value_field] = value;\r\n\r\n      this.beforeHook(value, this.element, this.dependent);\r\n\r\n      $.get(this.options.ajax.url, data)\r\n        .done(response => {\r\n          if (response.success) {\r\n            this.updateListElements(response.data);\r\n          } else {\r\n            console.error(response.message);\r\n          }\r\n        }).fail(response => {\r\n        console.error(response.message);\r\n      }).always(() => {\r\n        this.afterHook(value, this.element, this.dependent);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Update list elements.\r\n     *\r\n     * @param {Array} items\r\n     */\r\n    updateListElements(items) {\r\n      const self = this;\r\n      const textField = this.options.text_field;\r\n      const valueField = this.options.value_field;\r\n      self.element.empty();\r\n\r\n      if (this.options.first_option) {\r\n        items.unshift({});\r\n        items[0][textField] = this.options.first_option[textField];\r\n        items[0][valueField] = this.options.first_option[valueField];\r\n      }\r\n\r\n      $.each(items, function() {\r\n        const value = this[valueField];\r\n        const option = $('<option>' + this[textField] + '</option>');\r\n        option.attr('value', value);\r\n\r\n        if (this.attributes) {\r\n          $.each(this.attributes, function(index) {\r\n            option.attr(index, this);\r\n          });\r\n        }\r\n\r\n        if (self.options.default_value == value) {\r\n          option.attr('selected', 'selected');\r\n        }\r\n\r\n        self.element.append(option);\r\n      });\r\n\r\n      self.element.trigger('chosen:updated');\r\n      self.element.trigger('change');\r\n    }\r\n\r\n    /**\r\n     * Before hook.\r\n     *\r\n     * @param {string} value\r\n     * @param {jQuery} element\r\n     * @param {jQuery} dependent\r\n     * @returns {*}\r\n     */\r\n    beforeHook(value, element, dependent) {\r\n      const before = this.options.hooks.before_request;\r\n\r\n      return before.call(this, value, element, dependent);\r\n    }\r\n\r\n    /**\r\n     * After hook.\r\n     *\r\n     * @param {string} value\r\n     * @param {jQuery} element\r\n     * @param {jQuery} dependent\r\n     * @returns {*}\r\n     */\r\n    afterHook(value, element, dependent) {\r\n      const after = this.options.hooks.after_request;\r\n\r\n      return after.call(this, value, element, dependent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Push plugins.\r\n   *\r\n   * @param {jQuery} dependent\r\n   * @param {Object} options\r\n   *\r\n   * @returns {*}\r\n   */\r\n  $.fn[ListDependent.pluginName] = function(dependent, options) {\r\n    if (!$.data(this, \"phoenix.\" + ListDependent.pluginName)) {\r\n      $.data(this, \"phoenix.\" + ListDependent.pluginName, new ListDependent(this, dependent, options));\r\n    }\r\n\r\n    return $.data(this, \"phoenix.\" + ListDependent.pluginName);\r\n  };\r\n})(jQuery);\r\n"]}