{"version":3,"sources":["crypto.min.js"],"names":["Phoenix","Crypto","base64Encode","string","btoa","base64Decode","atob","encrypt","key","data","self","this","code","split","map","c","i","charCodeAt","keyCharAt","join","decrypt","String","fromCharCode","Math","floor","length","uuid4","b","a","random","toString","replace","safe_add","x","y","lsw","md5_cmn","q","s","t","num","cnt","md5_ff","d","md5_gg","md5_hh","md5_ii","binl_md5","len","olda","oldb","oldc","oldd","binl2rstr","input","output","rstr2binl","undefined","rstr2hex","hex_tab","charAt","str2rstr_utf8","decodeURIComponent","encodeURIComponent","raw_md5","raw_hmac_md5","k","hash","bkey","ipad","opad","concat","rstr_hmac_md5","md5","raw","define","amd","module","exports"],"mappings":"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","file":"crypto.min.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\nvar Phoenix;\n\n/**\n * Phoenix.Crypto\n */\n(function(Phoenix) {\n  \"use strict\";\n\n  Phoenix.Crypto = {\n    /**\n     * Base64 encode.\n     *\n     * @param {string} string\n     *\n     * @returns {string}\n     */\n    base64Encode: function(string) {\n      return btoa(string);\n    },\n\n    /**\n     * Base64 decode.\n     *\n     * @param {string} string\n     *\n     * @returns {string}\n     */\n    base64Decode: function(string) {\n      return atob(string);\n    },\n\n    /**\n     * XOR Cipher encrypt.\n     *\n     * @param {string} key\n     * @param {string} data\n     */\n    encrypt: function(key, data) {\n      var self = this;\n\n      var code = data.split('').map(function(c, i) {\n        return c.charCodeAt(0) ^ self.keyCharAt(key, i);\n      }).join(',');\n\n      return this.base64Encode(code);\n    },\n\n    /**\n     * XOR Cipher decrypt.\n     *\n     * @param {string} key\n     * @param {string} data\n     *\n     * @returns {string}\n     */\n    decrypt: function(key, data) {\n      var self = this;\n\n      data = this.base64Decode(data);\n\n      data = data.split(',');\n\n      return data.map(function(c, i) {\n        return String.fromCharCode(c ^ self.keyCharAt(key, i));\n      }).join(\"\");\n    },\n\n    /**\n     * Key char at.\n     *\n     * @param {string} key\n     * @param {Number} i\n     *\n     * @returns {Number}\n     */\n    keyCharAt: function(key, i) {\n      return key.charCodeAt(Math.floor(i % key.length));\n    },\n\n    /**\n     * UUID v4\n     *\n     * @see  https://gist.github.com/jed/982883\n     *\n     * @returns {string}\n     */\n    uuid4: function() {\n      return (function b(a) {\n        return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b)\n      })();\n    }\n  };\n\n  /**\n   * Javascript-MD5\n   *\n   * @link  https://github.com/blueimp/JavaScript-MD5\n   */\n  (function(Crypto) {\n    /*\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n     * to work around bugs in some JS interpreters.\n     */\n    function safe_add(x, y) {\n      var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n      var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n      return (msw << 16) | (lsw & 0xFFFF)\n    }\n\n    /*\n     * Bitwise rotate a 32-bit number to the left.\n     */\n    function bit_rol(num, cnt) {\n      return (num << cnt) | (num >>> (32 - cnt))\n    }\n\n    /*\n     * These functions implement the four basic operations the algorithm uses.\n     */\n    function md5_cmn(q, a, b, x, s, t) {\n      return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)\n    }\n\n    function md5_ff(a, b, c, d, x, s, t) {\n      return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)\n    }\n\n    function md5_gg(a, b, c, d, x, s, t) {\n      return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)\n    }\n\n    function md5_hh(a, b, c, d, x, s, t) {\n      return md5_cmn(b ^ c ^ d, a, b, x, s, t)\n    }\n\n    function md5_ii(a, b, c, d, x, s, t) {\n      return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)\n    }\n\n    /*\n     * Calculate the MD5 of an array of little-endian words, and a bit length.\n     */\n    function binl_md5(x, len) {\n      /* append padding */\n      x[len >> 5] |= 0x80 << (len % 32)\n      x[(((len + 64) >>> 9) << 4) + 14] = len\n\n      var i\n      var olda\n      var oldb\n      var oldc\n      var oldd\n      var a = 1732584193\n      var b = -271733879\n      var c = -1732584194\n      var d = 271733878\n\n      for (i = 0; i < x.length; i += 16) {\n        olda = a\n        oldb = b\n        oldc = c\n        oldd = d\n\n        a = md5_ff(a, b, c, d, x[i], 7, -680876936)\n        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)\n        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)\n        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)\n        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)\n        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)\n        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)\n        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)\n        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)\n        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)\n        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)\n        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)\n        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)\n        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)\n        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)\n        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)\n        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)\n        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)\n        b = md5_gg(b, c, d, a, x[i], 20, -373897302)\n        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)\n        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)\n        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)\n        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)\n        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)\n        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)\n        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)\n        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)\n        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)\n        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)\n        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)\n        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)\n        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)\n        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)\n        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)\n        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)\n        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)\n        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)\n        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)\n        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)\n        d = md5_hh(d, a, b, c, x[i], 11, -358537222)\n        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)\n        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)\n        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)\n        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)\n        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)\n        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n        a = md5_ii(a, b, c, d, x[i], 6, -198630844)\n        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)\n        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)\n        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)\n        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)\n        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)\n        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)\n        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)\n        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)\n        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)\n        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)\n        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)\n        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)\n        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)\n        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)\n        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n        a = safe_add(a, olda)\n        b = safe_add(b, oldb)\n        c = safe_add(c, oldc)\n        d = safe_add(d, oldd)\n      }\n      return [a, b, c, d]\n    }\n\n    /*\n     * Convert an array of little-endian words to a string\n     */\n    function binl2rstr(input) {\n      var i\n      var output = ''\n      for (i = 0; i < input.length * 32; i += 8) {\n        output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF)\n      }\n      return output\n    }\n\n    /*\n     * Convert a raw string to an array of little-endian words\n     * Characters >255 have their high-byte silently ignored.\n     */\n    function rstr2binl(input) {\n      var i\n      var output = []\n      output[(input.length >> 2) - 1] = undefined\n      for (i = 0; i < output.length; i += 1) {\n        output[i] = 0\n      }\n      for (i = 0; i < input.length * 8; i += 8) {\n        output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32)\n      }\n      return output\n    }\n\n    /*\n     * Calculate the MD5 of a raw string\n     */\n    function rstr_md5(s) {\n      return binl2rstr(binl_md5(rstr2binl(s), s.length * 8))\n    }\n\n    /*\n     * Calculate the HMAC-MD5, of a key and some data (raw strings)\n     */\n    function rstr_hmac_md5(key, data) {\n      var i\n      var bkey = rstr2binl(key)\n      var ipad = []\n      var opad = []\n      var hash\n      ipad[15] = opad[15] = undefined\n      if (bkey.length > 16) {\n        bkey = binl_md5(bkey, key.length * 8)\n      }\n      for (i = 0; i < 16; i += 1) {\n        ipad[i] = bkey[i] ^ 0x36363636\n        opad[i] = bkey[i] ^ 0x5C5C5C5C\n      }\n      hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)\n      return binl2rstr(binl_md5(opad.concat(hash), 512 + 128))\n    }\n\n    /*\n     * Convert a raw string to a hex string\n     */\n    function rstr2hex(input) {\n      var hex_tab = '0123456789abcdef'\n      var output = ''\n      var x\n      var i\n      for (i = 0; i < input.length; i += 1) {\n        x = input.charCodeAt(i)\n        output += hex_tab.charAt((x >>> 4) & 0x0F) +\n          hex_tab.charAt(x & 0x0F)\n      }\n      return output\n    }\n\n    /*\n     * Encode a string as utf-8\n     */\n    function str2rstr_utf8(input) {\n      return decodeURIComponent(encodeURIComponent(input))\n    }\n\n    /*\n     * Take string arguments and return either raw or hex encoded strings\n     */\n    function raw_md5(s) {\n      return rstr_md5(str2rstr_utf8(s))\n    }\n\n    function hex_md5(s) {\n      return rstr2hex(raw_md5(s))\n    }\n\n    function raw_hmac_md5(k, d) {\n      return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))\n    }\n\n    function hex_hmac_md5(k, d) {\n      return rstr2hex(raw_hmac_md5(k, d))\n    }\n\n    function md5(string, key, raw) {\n      if (!key) {\n        if (!raw) {\n          return hex_md5(string)\n        }\n        return raw_md5(string)\n      }\n      if (!raw) {\n        return hex_hmac_md5(key, string)\n      }\n      return raw_hmac_md5(key, string)\n    }\n\n    if (typeof define === 'function' && define.amd) {\n      define(function() {\n        return md5\n      })\n    }\n    else if (typeof module === 'object' && module.exports) {\n      module.exports = md5\n    }\n    else {\n      Crypto.md5 = md5\n    }\n  })(Phoenix.Crypto);\n})(Phoenix || (Phoenix = {}));\n"]}