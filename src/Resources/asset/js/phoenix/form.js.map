{"version":3,"sources":["form.js"],"names":["PhoenixForm","form","PhoenixFormElement","PhoenixJQueryPlugin","$form","options","$","extend","constructor","defaultOptions","bindEvents","data","find","on","e","trigger","currentTarget","button","$button","action","target","query","url","queries","method","customMethod","methodInput","length","append","val","input","each","key","value","attr","submit","post","window","jQuery"],"mappings":"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","file":"form.js","sourcesContent":["/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n($ => {\r\n  class PhoenixForm extends PhoenixJQueryPlugin {\r\n    static get is() { return 'Form'; }\r\n\r\n    static get proxies() {\r\n      return {\r\n        form: 'createPlugin'\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Plugin name.\r\n     * @returns {string}\r\n     */\r\n    static get pluginName() { return 'form' }\r\n\r\n    static get pluginClass() { return PhoenixFormElement }\r\n\r\n    /**\r\n     * Default options.\r\n     * @returns {Object}\r\n     */\r\n    static get defaultOptions() { return {} }\r\n  }\r\n\r\n  class PhoenixFormElement {\r\n    /**\r\n     * Constructor.\r\n     * @param {jQuery} $form\r\n     * @param {Object} options\r\n     */\r\n    constructor($form, options) {\r\n      options = $.extend(true, {}, this.constructor.defaultOptions, options);\r\n\r\n      this.form = $form;\r\n      this.options = options;\r\n\r\n      this.bindEvents();\r\n    }\r\n\r\n    bindEvents() {\r\n      if (this.form.data('toolbar')) {\r\n        $(this.form.data('toolbar')).find('*[data-action]').on('click', (e) => {\r\n          this.form.trigger('phoenix.submit', e.currentTarget);\r\n        });\r\n      }\r\n\r\n      this.form.on('phoenix.submit', (e, button) => {\r\n        const $button = $(button);\r\n        const action = $button.data('action');\r\n        const target = $button.data('target') || null;\r\n        const query = $button.data('query') || {};\r\n        query['task'] = $button.data('task') || null;\r\n\r\n        this[action](target, query);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Make a request.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     * @param  {string} method\r\n     * @param  {string} customMethod\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    submit(url, queries, method, customMethod) {\r\n      const form = this.form;\r\n\r\n      if (customMethod) {\r\n        let methodInput = form.find('input[name=\"_method\"]');\r\n\r\n        if (!methodInput.length) {\r\n          methodInput = $('<input name=\"_method\" type=\"hidden\">');\r\n\r\n          form.append(methodInput);\r\n        }\r\n\r\n        methodInput.val(customMethod);\r\n      }\r\n\r\n      // Set queries into form.\r\n      if (queries) {\r\n        let input;\r\n\r\n        $.each(queries, function(key, value) {\r\n          input = form.find('input[name=\"' + key + '\"]');\r\n\r\n          if (!input.length) {\r\n            input = $('<input name=\"' + key + '\" type=\"hidden\">');\r\n\r\n            form.append(input);\r\n          }\r\n\r\n          input.val(value);\r\n        });\r\n      }\r\n\r\n      if (url) {\r\n        form.attr('action', url);\r\n      }\r\n\r\n      if (method) {\r\n        form.attr('method', method);\r\n      }\r\n\r\n      form.submit();\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Make a GET request.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     * @param  {string} customMethod\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    get(url, queries, customMethod) {\r\n      return this.submit(url, queries, 'GET', customMethod);\r\n    }\r\n\r\n    /**\r\n     * Post form.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     * @param  {string} customMethod\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    post(url, queries, customMethod) {\r\n      customMethod = customMethod || 'POST';\r\n\r\n      return this.submit(url, queries, 'POST', customMethod);\r\n    }\r\n\r\n    /**\r\n     * Make a PUT request.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    put(url, queries) {\r\n      return this.post(url, queries, 'PUT');\r\n    }\r\n\r\n    /**\r\n     * Make a PATCH request.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    patch(url, queries) {\r\n      return this.post(url, queries, 'PATCH');\r\n    }\r\n\r\n    /**\r\n     * Make a DELETE request.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    sendDelete(url, queries) {\r\n      return this['delete'](url, queries);\r\n    }\r\n\r\n    /**\r\n     * Make a DELETE request.\r\n     *\r\n     * @param  {string} url\r\n     * @param  {Object} queries\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    delete(url, queries) {\r\n      return this.post(url, queries, 'DELETE');\r\n    }\r\n  }\r\n\r\n  window.PhoenixForm = PhoenixForm;\r\n})(jQuery);\r\n"]}