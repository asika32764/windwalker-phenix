{"version":3,"sources":["validation.js"],"names":["$","handlers","PhoenixValidation","PhoenixValidationElement","validation","PhoenixJQueryPlugin","events","scroll","enabled","offset","duration","element","options","phoenix","STATE_SUCCESS","STATE_FAIL","STATE_NONE","STATE_EMPTY","form","extend","constructor","defaultOptions","validators","theme","inputs","find","registerDefaultValidators","registerEvents","input","add","self","inValid","each","validate","push","target","is","parents","attr","animate","scrollTop","top","length","$input","className","validator","showResponse","hasClass","prop","toLowerCase","val","match","handler","help","notice","state","trigger","type","$element","name","on","event","validateAll","stopPropagation","preventDefault","hasOwnProperty","addValidator","username","value","regex","RegExp","test","password","numeric","email","punycode","toASCII","url","alnum","color","creditcard","ip","window","jQuery"],"mappings":";;;;;;;;;;AAAA;;;;;;;AAOA;;;AAGA,CAAC,CAAC,UAASA,CAAT,EAAY;AACZ;;AAEA;;;;;;AAKA,MAAMC,WAAW,EAAjB;;AAEA;;;;;;;;AAVY,MAiBNC,iBAjBM;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0BAkBM;AAAE,eAAO,YAAP;AAAqB;AAlB7B;AAAA;AAAA,0BAoBc;AAAE,eAAO,YAAP;AAAqB;AApBrC;AAAA;AAAA,0BAsBe;AAAE,eAAOC,wBAAP;AAAiC;AAtBlD;AAAA;AAAA,0BAwBW;AACnB,eAAO;AACLC,sBAAY;AADP,SAAP;AAGD;AA5BS;;AAAA;AAAA,IAiBoBC,mBAjBpB;;AAAA,MA+BNF,wBA/BM;AAAA;AAAA;AAAA,0BAgCkB;AAC1B,eAAO;AACLG,kBAAQ,CAAC,QAAD,CADH;AAELC,kBAAQ;AACNC,qBAAS,IADH;AAENC,oBAAQ,CAAC,GAFH;AAGNC,sBAAU;AAHJ;AAFH,SAAP;AAQD;AAzCS;;AA2CV,sCAAYC,OAAZ,EAAqBC,OAArB,EAA8BC,OAA9B,EAAuC;AAAA;;AACrC;;;;;AAKA,WAAKC,aAAL,GAAqB,SAArB;;AAEA;;;;;AAKA,WAAKC,UAAL,GAAkB,MAAlB;;AAEA;;;;;AAKA,WAAKC,UAAL,GAAkB,MAAlB;;AAEA;;;;;AAKA,WAAKC,WAAL,GAAmB,OAAnB;;AAEA,WAAKC,IAAL,GAAYP,WAAWX,CAAvB;AACA,WAAKa,OAAL,GAAeA,OAAf;AACA,WAAKD,OAAL,GAAeZ,EAAEmB,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,KAAKC,WAAL,CAAiBC,cAApC,EAAoDT,OAApD,CAAf;AACA,WAAKU,UAAL,GAAkB,EAAlB;AACA,WAAKrB,QAAL,GAAgB,EAAhB;AACA,WAAKsB,KAAL,GAAa,EAAb;AACA,WAAKC,MAAL,GAAc,KAAKN,IAAL,CAAUO,IAAV,CAAe,mDAAf,CAAd;;AAEA,WAAKC,yBAAL;AACA,WAAKC,cAAL;AACD;;AAED;;;;;;;;AApFU;AAAA;AAAA,+BA0FDC,KA1FC,EA0FM;AACd,aAAKJ,MAAL,GAAc,KAAKA,MAAL,CAAYK,GAAZ,CAAgBD,KAAhB,CAAd;;AAEA,eAAO,IAAP;AACD;;AAED;;;;;;AAhGU;AAAA;AAAA,oCAqGI;AACZ,YAAME,OAAO,IAAb;AAAA,YAAmBC,UAAU,EAA7B;AACA,YAAIxB,SAASuB,KAAKlB,OAAL,CAAaL,MAAb,CAAoBC,OAAjC;;AAEA,aAAKgB,MAAL,CAAYQ,IAAZ,CAAiB,YAAW;AAC1B,cAAI,CAACF,KAAKG,QAAL,CAAc,IAAd,CAAL,EAA0B;AACxBF,oBAAQG,IAAR,CAAa,IAAb;;AAEA;AACA,gBAAI3B,MAAJ,EAAY;AACV;AACA,kBAAI4B,SAASnC,EAAE,IAAF,CAAb;;AAEA,kBAAI,CAACmC,OAAOC,EAAP,CAAU,UAAV,CAAL,EAA4B;AAC1BD,yBAASA,OAAOE,OAAP,CAAe,MAAMF,OAAOG,IAAP,CAAY,IAAZ,CAAN,GAA0B,UAAzC,CAAT;AACD;;AAEDtC,gBAAE,YAAF,EAAgBuC,OAAhB,CAAwB;AACtBC,2BAAWL,OAAO1B,MAAP,GAAgBgC,GAAhB,GAAsBX,KAAKlB,OAAL,CAAaL,MAAb,CAAoBE;AAD/B,eAAxB,EAEGqB,KAAKlB,OAAL,CAAaL,MAAb,CAAoBG,QAFvB;;AAIAH,uBAAS,KAAT;AACD;AACF;AACF,SApBD;;AAsBA,eAAOwB,QAAQW,MAAR,IAAkB,CAAzB;AACD;;AAED;;;;;;;AAlIU;AAAA;AAAA,+BAwIDd,KAxIC,EAwIM;AACd,YAAIe,SAAS3C,EAAE4B,KAAF,CAAb;AAAA,YAAuBgB,kBAAvB;AAAA,YAAkCC,kBAAlC;;AAEA,YAAIF,OAAOL,IAAP,CAAY,UAAZ,CAAJ,EAA6B;AAC3B,eAAKQ,YAAL,CAAkB,KAAK9B,UAAvB,EAAmC2B,MAAnC;;AAEA,iBAAO,IAAP;AACD;;AAED,YAAIA,OAAOL,IAAP,CAAY,MAAZ,MAAwB,OAAxB,IAAmCK,OAAOL,IAAP,CAAY,MAAZ,MAAwB,UAA/D,EAA2E;AACzE,iBAAO,IAAP;AACD;;AAED,YAAIK,OAAOL,IAAP,CAAY,UAAZ,KAA2BK,OAAOI,QAAP,CAAgB,UAAhB,CAA/B,EAA4D;AAC1D;AACA,cAAIJ,OAAOK,IAAP,CAAY,SAAZ,EAAuBC,WAAvB,OAAyC,KAAzC,IAAkDN,OAAOI,QAAP,CAAgB,sBAAhB,CAAtD,EAA+F;AAC7F,gBAAI,CAACJ,OAAOlB,IAAP,CAAY,eAAZ,EAA6BiB,MAAlC,EAA0C;AACxC,mBAAKI,YAAL,CAAkB,KAAK7B,WAAvB,EAAoC0B,MAApC;;AAEA,qBAAO,KAAP;AACD;AACF;;AAED;AARA,eASK,IAAI,CAACA,OAAOO,GAAP,EAAD,IAAkBP,OAAOL,IAAP,CAAY,MAAZ,MAAwB,UAAxB,IAAsC,CAACK,OAAOP,EAAP,CAAU,UAAV,CAA7D,EAAqF;AACxF,mBAAKU,YAAL,CAAkB,KAAK7B,WAAvB,EAAoC0B,MAApC;;AAEA,qBAAO,KAAP;AACD;AACF;;AAED;AACAC,oBAAYD,OAAOL,IAAP,CAAY,OAAZ,CAAZ;;AAEA,YAAIM,SAAJ,EAAe;AACbC,sBAAYD,UAAUO,KAAV,CAAgB,4BAAhB,CAAZ;AACD;;AAED;AACA,YAAI,CAACR,OAAOO,GAAP,EAAD,IAAiB,CAACL,SAAtB,EAAiC;AAC/B,eAAKC,YAAL,CAAkB,KAAK9B,UAAvB,EAAmC2B,MAAnC;;AAEA,iBAAO,IAAP;AACD;;AAEDE,oBAAY,KAAKvB,UAAL,CAAgBuB,UAAU,CAAV,CAAhB,CAAZ;;AAEA,YAAI,CAACA,SAAD,IAAc,CAACA,UAAUO,OAA7B,EAAsC;AACpC,eAAKN,YAAL,CAAkB,KAAK9B,UAAvB,EAAmC2B,MAAnC;;AAEA,iBAAO,IAAP;AACD;;AAED,YAAI,CAACE,UAAUO,OAAV,CAAkBT,OAAOO,GAAP,EAAlB,EAAgCP,MAAhC,CAAL,EAA8C;AAC5C,cAAIU,OAAOR,UAAUjC,OAAV,CAAkB0C,MAA7B;;AAEA,cAAI,OAAQD,IAAR,KAAiB,UAArB,EAAiC;AAC/BA,mBAAOA,KAAKV,MAAL,EAAa,IAAb,CAAP;AACD;;AAED,eAAKG,YAAL,CAAkB,KAAK/B,UAAvB,EAAmC4B,MAAnC,EAA2CU,IAA3C;;AAEA,iBAAO,KAAP;AACD;;AAED,aAAKP,YAAL,CAAkB,KAAKhC,aAAvB,EAAsC6B,MAAtC;;AAEA,eAAO,IAAP;AACD;;AAED;;;;;;;;;;AA9MU;AAAA;AAAA,mCAuNGY,KAvNH,EAuNUZ,MAvNV,EAuN+B;AAAA,YAAbU,IAAa,uEAAN,IAAM;;AACvC,aAAKxC,OAAL,CAAa2C,OAAb,CAAqB,qBAArB,EAA4C,EAACD,YAAD,EAAQZ,cAAR,EAAgBU,UAAhB,EAAsBjD,YAAY,IAAlC,EAA5C;;AAEAuC,eAAOa,OAAP,CAAe;AACbC,gBAAM,sBAAsBF,KADf;AAEb3B,iBAAOe,MAFM;AAGbY,iBAAOA,KAHM;AAIbF,gBAAMA;AAJO,SAAf;;AAOA,eAAO,IAAP;AACD;;AAED;;;;;;;;AApOU;AAAA;AAAA,qCA2OKK,QA3OL,EA2Oe;AACvB,aAAK7C,OAAL,CAAa2C,OAAb,CAAqB,mBAArB,EAA0C,EAACE,kBAAD,EAA1C;;AAEA,eAAO,IAAP;AACD;;AAED;;;;;;;;;AAjPU;AAAA;AAAA,mCAyPGC,IAzPH,EAyPSd,SAzPT,EAyPoBjC,OAzPpB,EAyP6B;AACrCA,kBAAUA,WAAW,EAArB;;AAEA,aAAKU,UAAL,CAAgBqC,IAAhB,IAAwB;AACtBP,mBAASP,SADa;AAEtBjC,mBAASA;AAFa,SAAxB;;AAKA,eAAO,IAAP;AACD;;AAED;;;;AApQU;AAAA;AAAA,uCAuQO;AACf,YAAMkB,OAAO,IAAb;;AAEA,aAAKZ,IAAL,CAAU0C,EAAV,CAAa,QAAb,EAAuB,UAASC,KAAT,EAAgB;AACrC,cAAI,CAAC/B,KAAKgC,WAAL,EAAL,EAAyB;AACvBD,kBAAME,eAAN;AACAF,kBAAMG,cAAN;;AAEA,mBAAO,KAAP;AACD;;AAED,iBAAO,IAAP;AACD,SATD;;AAWAhE,UAAEgC,IAAF,CAAO,KAAKpB,OAAL,CAAaN,MAApB,EAA4B,YAAW;AACrCwB,eAAKN,MAAL,CAAYoC,EAAZ,CAAe,IAAf,EAAqB,YAAW;AAC9B9B,iBAAKG,QAAL,CAAc,IAAd;AACD,WAFD;AAGD,SAJD;AAKD;;AAED;;;;AA5RU;AAAA;AAAA,kDA+RkB;AAC1B,aAAK,IAAI0B,IAAT,IAAiB1D,QAAjB,EAA2B;AACzB,cAAIA,SAASgE,cAAT,CAAwBN,IAAxB,CAAJ,EAAmC;AACjC,iBAAKO,YAAL,CAAkBP,IAAlB,EAAwB1D,SAAS0D,IAAT,CAAxB;AACD;AACF;AACF;AArSS;;AAAA;AAAA;;AAwSZ1D,WAASkE,QAAT,GAAoB,UAASC,KAAT,EAAgBzD,OAAhB,EAAyB;AAC3C,QAAM0D,QAAQ,IAAIC,MAAJ,CAAW,8BAAX,EAA2C,GAA3C,CAAd;AACA,WAAO,CAACD,MAAME,IAAN,CAAWH,KAAX,CAAR;AACD,GAHD;;AAKAnE,WAASuE,QAAT,GAAoB,UAASJ,KAAT,EAAgBzD,OAAhB,EAAyB;AAC3C,QAAM0D,QAAQ,mBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKAnE,WAASwE,OAAT,GAAmB,UAASL,KAAT,EAAgBzD,OAAhB,EAAyB;AAC1C,QAAM0D,QAAQ,wBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKAnE,WAASyE,KAAT,GAAiB,UAASN,KAAT,EAAgBzD,OAAhB,EAAyB;AACxCyD,YAAQO,SAASC,OAAT,CAAiBR,KAAjB,CAAR;AACA,QAAMC,QAAQ,yEAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAJD;;AAMAnE,WAAS4E,GAAT,GAAe,UAAST,KAAT,EAAgBzD,OAAhB,EAAyB;AACtCyD,YAAQO,SAASC,OAAT,CAAiBR,KAAjB,CAAR;AACA,QAAMC,QAAQ,meAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAJD;;AAMAnE,WAAS6E,KAAT,GAAiB,UAASV,KAAT,EAAgBzD,OAAhB,EAAyB;AACxC,QAAM0D,QAAQ,gBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKAnE,WAAS8E,KAAT,GAAiB,UAASX,KAAT,EAAgBzD,OAAhB,EAAyB;AACxC,QAAM0D,QAAQ,yBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKA;;;AAGAnE,WAAS+E,UAAT,GAAsB,UAASZ,KAAT,EAAgBzD,OAAhB,EAAyB;AAC7C,QAAM0D,QAAQ,0NAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKAnE,WAASgF,EAAT,GAAc,UAASb,KAAT,EAAgBzD,OAAhB,EAAyB;AACrC,QAAM0D,QAAQ,gGAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKAc,SAAOhF,iBAAP,GAA2BA,iBAA3B;AAED,CA5VA,EA4VEiF,MA5VF","file":"validation.js","sourcesContent":["/**\r\n * Part of Phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later;\r\n */\r\n\r\n/**\r\n * PhoenixValidation\r\n */\r\n;(function($) {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * Default handlers\r\n   *\r\n   * @type {Object}\r\n   */\r\n  const handlers = {};\r\n\r\n  /**\r\n   * Class init.\r\n   *\r\n   * @param {jQuery} element\r\n   * @param {Object} options\r\n   * @constructor\r\n   */\r\n  class PhoenixValidation extends PhoenixJQueryPlugin {\r\n    static get is() { return 'Validation' }\r\n\r\n    static get pluginName() { return 'validation' }\r\n\r\n    static get pluginClass() { return PhoenixValidationElement }\r\n\r\n    static get proxies() {\r\n      return {\r\n        validation: 'createPlugin'\r\n      };\r\n    }\r\n  }\r\n\r\n  class PhoenixValidationElement {\r\n    static get defaultOptions() {\r\n      return {\r\n        events: ['change'],\r\n        scroll: {\r\n          enabled: true,\r\n          offset: -100,\r\n          duration: 1000\r\n        }\r\n      }\r\n    }\r\n\r\n    constructor(element, options, phoenix) {\r\n      /**\r\n       * Validate success.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.STATE_SUCCESS = 'success';\r\n\r\n      /**\r\n       * Validate fail.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.STATE_FAIL = 'fail';\r\n\r\n      /**\r\n       * Pass or required with value.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.STATE_NONE = 'none';\r\n\r\n      /**\r\n       * Required with no value.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.STATE_EMPTY = 'empty';\r\n\r\n      this.form = element || $;\r\n      this.phoenix = phoenix;\r\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\r\n      this.validators = [];\r\n      this.handlers = {};\r\n      this.theme = {};\r\n      this.inputs = this.form.find('input, select, textarea, div.input-list-container');\r\n\r\n      this.registerDefaultValidators();\r\n      this.registerEvents();\r\n    }\r\n\r\n    /**\r\n     * Add field.\r\n     *\r\n     * @param {*} input\r\n     * @returns {PhoenixValidationElement}\r\n     */\r\n    addField(input) {\r\n      this.inputs = this.inputs.add(input);\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Validate All.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    validateAll() {\r\n      const self = this, inValid = [];\r\n      let scroll = self.options.scroll.enabled;\r\n\r\n      this.inputs.each(function() {\r\n        if (!self.validate(this)) {\r\n          inValid.push(this);\r\n\r\n          // Scroll\r\n          if (scroll) {\r\n            // Find displayed element\r\n            let target = $(this);\r\n\r\n            if (!target.is(':visible')) {\r\n              target = target.parents('#' + target.attr('id') + '-control');\r\n            }\r\n\r\n            $('html, body').animate({\r\n              scrollTop: target.offset().top + self.options.scroll.offset\r\n            }, self.options.scroll.duration);\r\n\r\n            scroll = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      return inValid.length <= 0;\r\n    }\r\n\r\n    /**\r\n     * Validate.\r\n     *\r\n     * @param {jQuery} input\r\n     * @returns {boolean}\r\n     */\r\n    validate(input) {\r\n      let $input = $(input), className, validator;\r\n\r\n      if ($input.attr('disabled')) {\r\n        this.showResponse(this.STATE_NONE, $input);\r\n\r\n        return true;\r\n      }\r\n\r\n      if ($input.attr('type') === 'radio' || $input.attr('type') === 'checkbox') {\r\n        return true;\r\n      }\r\n\r\n      if ($input.attr('required') || $input.hasClass('required')) {\r\n        // Handle radio & checkboxes\r\n        if ($input.prop(\"tagName\").toLowerCase() === 'div' && $input.hasClass('input-list-container')) {\r\n          if (!$input.find('input:checked').length) {\r\n            this.showResponse(this.STATE_EMPTY, $input);\r\n\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // Handle all fields and checkbox\r\n        else if (!$input.val() || ($input.attr('type') === 'checkbox' && !$input.is(':checked'))) {\r\n          this.showResponse(this.STATE_EMPTY, $input);\r\n\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Is value exists, validate this type.\r\n      className = $input.attr('class');\r\n\r\n      if (className) {\r\n        validator = className.match(/validate-([a-zA-Z0-9_|-]+)/);\r\n      }\r\n\r\n      // Empty value and no validator config, set response to none.\r\n      if (!$input.val() || !validator) {\r\n        this.showResponse(this.STATE_NONE, $input);\r\n\r\n        return true;\r\n      }\r\n\r\n      validator = this.validators[validator[1]];\r\n\r\n      if (!validator || !validator.handler) {\r\n        this.showResponse(this.STATE_NONE, $input);\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!validator.handler($input.val(), $input)) {\r\n        let help = validator.options.notice;\r\n\r\n        if (typeof  help === 'function') {\r\n          help = help($input, this);\r\n        }\r\n\r\n        this.showResponse(this.STATE_FAIL, $input, help);\r\n\r\n        return false;\r\n      }\r\n\r\n      this.showResponse(this.STATE_SUCCESS, $input);\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Show response on input.\r\n     *\r\n     * @param {string}      state\r\n     * @param {jQuery}      $input\r\n     * @param {string|null} help\r\n     *\r\n     * @returns {PhoenixValidationElement}\r\n     */\r\n    showResponse(state, $input, help = null) {\r\n      this.phoenix.trigger('validation.response', {state, $input, help, validation: this});\r\n\r\n      $input.trigger({\r\n        type: 'phoenix.validate.' + state,\r\n        input: $input,\r\n        state: state,\r\n        help: help\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Remove responses.\r\n     *\r\n     * @param {jQuery} $element\r\n     *\r\n     * @returns {PhoenixValidationElement}\r\n     */\r\n    removeResponse($element) {\r\n      this.phoenix.trigger('validation.remove', {$element});\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Add validator handler.\r\n     *\r\n     * @param name\r\n     * @param validator\r\n     * @param options\r\n     * @returns {PhoenixValidation}\r\n     */\r\n    addValidator(name, validator, options) {\r\n      options = options || {};\r\n\r\n      this.validators[name] = {\r\n        handler: validator,\r\n        options: options\r\n      };\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Register events.\r\n     */\r\n    registerEvents() {\r\n      const self = this;\r\n\r\n      this.form.on('submit', function(event) {\r\n        if (!self.validateAll()) {\r\n          event.stopPropagation();\r\n          event.preventDefault();\r\n\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n      $.each(this.options.events, function() {\r\n        self.inputs.on(this, function() {\r\n          self.validate(this);\r\n        });\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Register default validators.\r\n     */\r\n    registerDefaultValidators() {\r\n      for (let name in handlers) {\r\n        if (handlers.hasOwnProperty(name)) {\r\n          this.addValidator(name, handlers[name]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handlers.username = function(value, element) {\r\n    const regex = new RegExp(\"[\\<|\\>|\\\"|\\'|\\%|\\;|\\(|\\)|\\&]\", \"i\");\r\n    return !regex.test(value);\r\n  };\r\n\r\n  handlers.password = function(value, element) {\r\n    const regex = /^\\S[\\S ]{2,98}\\S$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  handlers.numeric = function(value, element) {\r\n    const regex = /^(\\d|-)?(\\d|,)*\\.?\\d*$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  handlers.email = function(value, element) {\r\n    value = punycode.toASCII(value);\r\n    const regex = /^[a-zA-Z0-9.!#$%&â€™*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  handlers.url = function(value, element) {\r\n    value = punycode.toASCII(value);\r\n    const regex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i;\r\n    return regex.test(value);\r\n  };\r\n\r\n  handlers.alnum = function(value, element) {\r\n    const regex = /^[a-zA-Z0-9]*$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  handlers.color = function(value, element) {\r\n    const regex = /^#(?:[0-9a-f]{3}){1,2}$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  /**\r\n   * @see  http://www.virtuosimedia.com/dev/php/37-tested-php-perl-and-javascript-regular-expressions\r\n   */\r\n  handlers.creditcard = function(value, element) {\r\n    const regex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  handlers.ip = function(value, element) {\r\n    const regex = /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  window.PhoenixValidation = PhoenixValidation;\r\n\r\n})(jQuery);\r\n"]}