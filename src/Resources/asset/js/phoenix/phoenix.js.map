{"version":3,"sources":["phoenix.js"],"names":["PhoenixCore","options","$","extend","constructor","defaultOptions","_listeners","plugin","Array","isArray","forEach","use","p","PhoenixPlugin","Error","name","install","trigger","uninstall","event","handler","undefined","push","args","r","listeners","listener","message","callback","confirmed","confirm","msg","type","messageContainer","selector","Phoenix","Theme","renderMessage","removeMessages","url","time","window","setInterval","XMLHttpRequest","e","open","send","self","fn","data","instance","ele","phoenix","is","toLowerCase","createProxies","resetProxies","this","created","ready","proxies","hasOwnProperty","origin","Object","defineProperties","get","set","value","PhoenixJQueryPlugin","mainSelector","pluginName","pluginClass","jQuery","PhoenixLegacy","UI","formInited","gridInited","on","method","Grid"],"mappings":"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","file":"phoenix.js","sourcesContent":["/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n($ => {\r\n  class PhoenixCore {\r\n    /**\r\n     * Default options.\r\n     * @returns {Object}\r\n     */\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    constructor(options = {}) {\r\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\r\n      this._listeners = {};\r\n    }\r\n\r\n    use(plugin) {\r\n      if (Array.isArray(plugin)) {\r\n        plugin.forEach(p => this.use(p));\r\n        return this;\r\n      }\r\n\r\n      if (!plugin instanceof PhoenixPlugin) {\r\n        throw new Error('Plugin must instance of : ' + PhoenixPlugin.name);\r\n      }\r\n\r\n      plugin.install(this);\r\n\r\n      this.trigger('plugin.installed', plugin);\r\n\r\n      return this;\r\n    }\r\n\r\n    detach(plugin) {\r\n      if (!plugin instanceof PhoenixPlugin) {\r\n        throw new Error('Plugin must instance of : ' + PhoenixPlugin.name);\r\n      }\r\n\r\n      plugin.uninstall(this);\r\n\r\n      this.trigger('plugin.uninstalled', plugin);\r\n\r\n      return this;\r\n    }\r\n\r\n    on(event, handler) {\r\n      if (this._listeners[event] === undefined) {\r\n        this._listeners[event] = [];\r\n      }\r\n\r\n      this._listeners[event].push(handler);\r\n\r\n      return this;\r\n    }\r\n\r\n    off(event) {\r\n      delete this._listeners[event];\r\n\r\n      return this;\r\n    }\r\n\r\n    trigger(event, args) {\r\n      const r = [];\r\n      this.listeners(event).forEach(listener => {\r\n        r.push(listener(args));\r\n      });\r\n\r\n      return r;\r\n    }\r\n\r\n    listeners(event) {\r\n      return this._listeners[event] === undefined ? [] : this._listeners[event];\r\n    }\r\n\r\n    /**\r\n     * Confirm popup.\r\n     *\r\n     * TODO: Move to core.\r\n     *\r\n     * @param {string}   message\r\n     * @param {Function} callback\r\n     */\r\n    confirm(message, callback) {\r\n      message = message || 'Are you sure?';\r\n\r\n      const confirmed = confirm(message);\r\n\r\n      callback(confirmed);\r\n\r\n      return confirmed;\r\n    }\r\n\r\n    /**\r\n     * Add message.\r\n     *\r\n     * TODO: Move to core.\r\n     *\r\n     * @param {string} msg\r\n     * @param {string} type\r\n     *\r\n     * @returns {PhoenixForm}\r\n     */\r\n    addMessage(msg, type) {\r\n      const messageContainer = $(this.options.selector.message);\r\n\r\n      Phoenix.Theme.renderMessage(messageContainer, msg, type);\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Remove all messages.\r\n     *\r\n     * TODO: Move to core.\r\n     *\r\n     * @returns {PhoenixForm}\r\n     */\r\n    removeMessages() {\r\n      const messageContainer = $(this.options.selector.message);\r\n\r\n      Phoenix.Theme.removeMessages(messageContainer);\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Keep alive.\r\n     *\r\n     * TODO: Move to core.\r\n     *\r\n     * @param {string} url\r\n     * @param {Number} time\r\n     *\r\n     * @return {number}\r\n     */\r\n    keepAlive(url, time) {\r\n      return window.setInterval(function () {\r\n        let r;\r\n\r\n        try {\r\n          r = new XMLHttpRequest;\r\n        }\r\n        catch (e) {\r\n          // Nothing\r\n        }\r\n\r\n        if (r) {\r\n          r.open('GET', url, true);\r\n          r.send(null);\r\n        }\r\n      }, time);\r\n    }\r\n\r\n    plugin(name, plugin) {\r\n      const self = this;\r\n      $.fn[name] = function (...args) {\r\n        if (!this.data('phoenix.' + name)) {\r\n          const instance = new plugin(this, ...args);\r\n          this.data('phoenix.' + name, instance);\r\n          self.trigger('jquery.plugin.created', {name: name, ele: this, instance: instance});\r\n        }\r\n\r\n        const instance = this.data('phoenix.' + name);\r\n\r\n        self.trigger('jquery.plugin.get', {name: name, ele: this, instance: instance});\r\n\r\n        return instance;\r\n      };\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class PhoenixPlugin {\r\n    static get is() {\r\n      throw new Error('Please add \"is\" property to Phoenix Plugin: '.this.constructor.name);\r\n    }\r\n\r\n    static get proxies() {\r\n      return {};\r\n    }\r\n\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    get options() {\r\n      return this.phoenix.options[this.constructor.is.toLowerCase()];\r\n    }\r\n\r\n    static install(phoenix) {\r\n      const self = new this(phoenix);\r\n\r\n      this.createProxies(phoenix, self);\r\n    }\r\n\r\n    static uninstall(phoenix) {\r\n      const self = new this(phoenix);\r\n\r\n      this.resetProxies(phoenix, self);\r\n    }\r\n\r\n    constructor(phoenix) {\r\n      this.phoenix = phoenix;\r\n\r\n      const name = this.constructor.is.toLowerCase();\r\n\r\n      // Merge to global options\r\n      this.phoenix.options[name] = $.extend(\r\n        true,\r\n        this.phoenix.options[name],\r\n        this.constructor.defaultOptions,\r\n        this.phoenix.options[name]\r\n      );\r\n\r\n      // Created hook\r\n      this.created();\r\n\r\n      // DOM Ready hook\r\n      $(() => this.ready());\r\n\r\n      // Phoenix onload hook\r\n      // todo: add loaded\r\n    }\r\n\r\n    created() {\r\n      //\r\n    }\r\n\r\n    ready() {\r\n      //\r\n    }\r\n\r\n    loaded() {\r\n      //\r\n    }\r\n\r\n    static createProxies(phoenix, plugin) {\r\n      if (plugin.constructor.proxies === undefined) {\r\n        return this;\r\n      }\r\n\r\n      this.resetProxies(phoenix, plugin);\r\n\r\n      phoenix[plugin.constructor.is] = plugin;\r\n\r\n      const proxies = plugin.constructor.proxies;\r\n\r\n      for (let name in proxies) {\r\n        if (!proxies.hasOwnProperty(name)) {\r\n          continue;\r\n        }\r\n\r\n        const origin = proxies[name];\r\n\r\n        if (phoenix[name] !== undefined) {\r\n          throw new Error(`Property: ${name} has exists in Phoenix instance.`);\r\n        }\r\n\r\n        if (typeof origin === 'function') {\r\n          phoenix[name] = origin;\r\n        } else if (plugin[origin] !== undefined) {\r\n          if (typeof plugin[origin] === 'function') {\r\n            phoenix[name] = function (...args) {\r\n              return plugin[origin](...args);\r\n            };\r\n          } else {\r\n            Object.defineProperties(phoenix, name, {\r\n              get: () => plugin[origin],\r\n              set: value => {\r\n                plugin[origin] = value;\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          throw new Error(`Proxy property: \"${origin}\" not found in Plugin: ${plugin.constructor.name}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    static resetProxies(phoenix, plugin) {\r\n      const name = typeof plugin === 'string' ? plugin : plugin.constructor.is;\r\n\r\n      if (phoenix[name]) {\r\n        plugin = phoenix[name];\r\n      }\r\n\r\n      if (plugin.constructor.proxies === undefined) {\r\n        return;\r\n      }\r\n\r\n      for (let name in plugin.constructor.proxies) {\r\n        delete phoenix[name];\r\n      }\r\n\r\n      delete phoenix[plugin.constructor.is];\r\n    }\r\n  }\r\n\r\n  class PhoenixJQueryPlugin extends PhoenixPlugin {\r\n    /**\r\n     * Plugin name.\r\n     * @returns {string|null}\r\n     */\r\n    static get pluginName() {\r\n      throw new Error('Please provide a plugin name.');\r\n    }\r\n\r\n    static get pluginClass() {\r\n      throw new Error('Please provide a class as plugin instance.');\r\n    }\r\n\r\n    static install(phoenix) {\r\n      super.install(phoenix);\r\n\r\n      phoenix.plugin(this.pluginName, this.pluginClass);\r\n    }\r\n\r\n    createPlugin(selector, options = {}, ...args) {\r\n      options.mainSelector = selector;\r\n\r\n      return $(selector)[this.constructor.pluginName](options, this.phoenix, ...args);\r\n    }\r\n  }\r\n\r\n  window.Phoenix = new PhoenixCore();\r\n  window.PhoenixPlugin = PhoenixPlugin;\r\n  window.PhoenixJQueryPlugin = PhoenixJQueryPlugin;\r\n})(jQuery);\r\n\r\n(($) => {\r\n  class PhoenixLegacy extends PhoenixPlugin {\r\n    static get is() {\r\n      return 'Legacy';\r\n    }\r\n\r\n    static install(phoenix) {\r\n      super.install(phoenix);\r\n\r\n      phoenix.Theme = phoenix.UI;\r\n    }\r\n\r\n    constructor(phoenix) {\r\n      super(phoenix);\r\n\r\n      let formInited = false;\r\n      let gridInited = false;\r\n\r\n      phoenix.on('jquery.plugin.created', event => {\r\n        // Legacy Form polyfill\r\n        if (!formInited && event.name === 'form') {\r\n          ['delete', 'get', 'patch', 'post', 'put', 'sendDelete', 'submit'].forEach((method) => {\r\n            phoenix[method] = (...args) => event.instance[method](...args);\r\n          });\r\n\r\n          formInited = true;\r\n        }\r\n\r\n        // Legacy Grid polyfill\r\n        if (!gridInited && event.name === 'grid') {\r\n          ['toggleFilter', 'sort', 'checkRow', 'updateRow', 'doTask', 'batch', 'copyRow', 'deleteList', 'deleteRow',\r\n            'toggleAll', 'countChecked', 'getChecked', 'hasChecked', 'reorderAll', 'reorder']\r\n            .forEach((method) => {\r\n              phoenix.Grid[method] = (...args) => event.instance[method](...args);\r\n            });\r\n\r\n          gridInited = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    ready() {\r\n      super.ready();\r\n    }\r\n  }\r\n\r\n  window.PhoenixLegacy = PhoenixLegacy;\r\n})(jQuery);\r\n"]}