{"version":3,"sources":["switch.js"],"names":["PhoenixSwitch","window","name","template","data","idName","currentValue","props","id","String","classes","value","disabled","Boolean","trueValue","default","falseValue","size","type","color","shape","created","Error","getDashedName","methods","replace","changed","$event","srcElement","checked","watch","$emit","Vue","component"],"mappings":";;AAAA;;;;;;;AAOA,CAAC,YAAM;AACL,MAAMA,gBAAgBC,OAAOD,aAAP,GAAuB;AAC3CE,UAAM,gBADqC;AAE3CC,wqBAF2C;AAmB3CC,QAnB2C,kBAmBpC;AACL,aAAO;AACLC,gBAAQ,EADH;AAELC,sBAAc;AAFT,OAAP;AAID,KAxB0C;;AAyB3CC,WAAO;AACLC,UAAIC,MADC;AAELC,eAASD,MAFJ;AAGLE,aAAO,IAHF;AAILT,YAAMO,MAJD;AAKLG,gBAAUC,OALL;AAMLC,iBAAW;AACTC,iBAAS;AADA,OANN;AASLC,kBAAY;AACVD,iBAAS;AADC,OATP;AAYLE,YAAM;AACJC,cAAMT,MADF;AAEJM,iBAAS;AAFL,OAZD;AAgBLI,aAAO;AACLD,cAAMT,MADD;AAELM,iBAAS;AAFJ,OAhBF;AAoBLK,aAAO;AACLF,cAAMT,MADD;AAELM,iBAAS;AAFJ;AApBF,KAzBoC;AAkD3CM,WAlD2C,qBAkDjC;AACR,UAAI,KAAKnB,IAAL,IAAa,IAAb,IAAqB,KAAKM,EAAL,KAAY,IAArC,EAA2C;AACzC,cAAM,IAAIc,KAAJ,CAAU,6DAAV,CAAN;AACD;;AAED,WAAKjB,MAAL,GAAc,KAAKG,EAAL,IAAW,WAAW,KAAKe,aAAL,EAApC;;AAEA,WAAKjB,YAAL,GAAoB,KAAKK,KAAzB;AACD,KA1D0C;;AA2D3Ca,aAAS;AACPD,mBADO,2BACS;AACd,eAAO,KAAKrB,IAAL,CAAUuB,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,EAA8BA,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAP;AACD,OAHM;AAIPC,aAJO,mBAICC,MAJD,EAIS;AACd,aAAKrB,YAAL,GAAoBqB,OAAOC,UAAP,CAAkBC,OAAlB,GAA4B,KAAKf,SAAjC,GAA6C,KAAKE,UAAtE;AACD;AANM,KA3DkC;AAmE3Cc,WAAO;AACLxB,kBADK,0BACU;AACb,aAAKyB,KAAL,CAAW,OAAX,EAAoB,KAAKzB,YAAzB;AACD,OAHI;AAKLK,WALK,mBAKG;AACN,aAAKL,YAAL,GAAoB,KAAKK,KAAzB;AACD;AAPI;AAnEoC,GAA7C;;AA8EA,MAAI,OAAOV,OAAO+B,GAAd,KAAsB,WAA1B,EAAuC;AACrC/B,WAAO+B,GAAP,CAAWC,SAAX,CAAqB,gBAArB,EAAuCjC,aAAvC;AACD;AACF,CAlFD","file":"switch.js","sourcesContent":["/**\n * Part of phoenix project.\n *\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\n * @license    __LICENSE__\n */\n\n(() => {\n  const PhoenixSwitch = window.PhoenixSwitch = {\n    name: 'phoenix-switch',\n    template: `\n<label class=\"phoenix-switch\" :for=\"idName\" :class=\"[size ? 'switch-' + size : '']\">\n    <input :id=\"idName + '-unchecked'\" :name=\"name\" type=\"hidden\"\n        :value=\"falseValue\"\n        :disabled=\"disabled\"\n    />\n    <input type=\"checkbox\" :name=\"name\" :id=\"idName\" class=\"form-control\" :class=\"classes\"\n        :true-value=\"trueValue\" :false-value=\"falseValue\" :disabled=\"disabled\"\n        :value=\"trueValue\"\n        :checked=\"currentValue == trueValue\"\n        @change=\"changed($event)\">\n    <span\n        class=\"switch-slider\"\n        :class=\"['slider-' + shape, color ? 'btn-' + color : 'btn-default']\"\n    ></span>\n</label>\n    `,\n    data() {\n      return {\n        idName: '',\n        currentValue: null\n      }\n    },\n    props: {\n      id: String,\n      classes: String,\n      value: null,\n      name: String,\n      disabled: Boolean,\n      trueValue: {\n        default: '1'\n      },\n      falseValue: {\n        default: '0'\n      },\n      size: {\n        type: String,\n        default: 'default'\n      },\n      color: {\n        type: String,\n        default: 'primary'\n      },\n      shape: {\n        type: String,\n        default: 'square'\n      }\n    },\n    created() {\n      if (this.name == null && this.id === null) {\n        throw new Error('[Phoenix Switch] You must provide \"name\" or \"id\" attribute.');\n      }\n\n      this.idName = this.id || 'input-' + this.getDashedName();\n\n      this.currentValue = this.value;\n    },\n    methods: {\n      getDashedName() {\n        return this.name.replace(/\\[/g, '-').replace(/]/, '');\n      },\n      changed($event) {\n        this.currentValue = $event.srcElement.checked ? this.trueValue : this.falseValue;\n      }\n    },\n    watch: {\n      currentValue() {\n        this.$emit('input', this.currentValue);\n      },\n\n      value() {\n        this.currentValue = this.value;\n      }\n    }\n  };\n\n  if (typeof window.Vue !== 'undefined') {\n    window.Vue.component('phoenix-switch', PhoenixSwitch);\n  }\n})();\n"]}