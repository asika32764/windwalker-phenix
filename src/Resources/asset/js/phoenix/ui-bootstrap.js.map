{"version":3,"sources":["ui-bootstrap.js"],"names":["$","PhoenixUIBootstrap3","validation","state","$input","help","$control","parents","first","self","removeValidateResponse","STATE_NONE","icon","color","STATE_SUCCESS","STATE_EMPTY","STATE_FAIL","setTimeout","addValidateResponse","addClass","feedback","prepend","attr","helpElement","tagName","prop","toLowerCase","append","parent","$element","find","remove","removeClass","msg","type","message","messageContainer","i","length","PhoenixUI","window","jQuery"],"mappings":"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","file":"ui-bootstrap.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\n(($) => {\n  \"use strict\";\n\n  /**\n   * Bootstrap Theme\n   */\n  class PhoenixUIBootstrap3 extends PhoenixUI {\n    /**\n     * Show Validation response.\n     *\n     * @param {PhoenixValidation} validation\n     * @param {string}            state\n     * @param {jQuery}            $input\n     * @param {string}            help\n     */\n    showValidateResponse(validation, state, $input, help) {\n      const $control = $input.parents('.form-group').first();\n      const self = this;\n\n      this.removeValidateResponse($control);\n\n      if (state != validation.STATE_NONE) {\n        let icon, color;\n\n        switch (state) {\n          case validation.STATE_SUCCESS:\n            color = 'success';\n            icon = 'fa fa-check';\n            break;\n\n          case validation.STATE_EMPTY:\n            color = 'error';\n            icon = 'fa fa-remove fa-times';\n            break;\n\n          case validation.STATE_FAIL:\n            color = 'warning';\n            icon = 'fa fa-warning fa-exclamation-triangle';\n            break;\n        }\n\n        // Delay 100 to make sure addClass after removeClass\n        setTimeout(function() {\n          self.addValidateResponse($control, $input, icon, color, help);\n        }, 100);\n      }\n    }\n\n    /**\n     * Add validate effect to input, just override this method to fit other templates.\n     *\n     * @param {jQuery} $control\n     * @param {jQuery} $input\n     * @param {string} icon\n     * @param {string} color\n     * @param {string} help\n     */\n    addValidateResponse($control, $input, icon, color, help) {\n      $control.addClass('has-' + color + ' has-feedback');\n\n      const feedback = $('<span class=\"' + icon + ' form-control-feedback\" aria-hidden=\"true\"></span>');\n      $control.prepend(feedback);\n\n      if ($control.attr('data-' + color + '-message')) {\n        help = $control.attr('data-' + color + '-message');\n      }\n\n      if ($input.attr('data-' + color + '-message')) {\n        help = $input.attr('data-' + color + '-message');\n      }\n\n      if (help) {\n        const helpElement = $('<small class=\"help-block\">' + help + '</small>');\n\n        const tagName = $input.prop('tagName').toLowerCase();\n\n        if (tagName === 'div') {\n          $input.append(helpElement);\n        }\n        else {\n          $input.parent().append(helpElement);\n        }\n      }\n    }\n\n    /**\n     * Remove validation response.\n     *\n     * @param {jQuery} $element\n     */\n    removeValidateResponse($element) {\n      $element.find('.form-control-feedback').remove();\n      $element.removeClass('has-error')\n        .removeClass('has-success')\n        .removeClass('has-warning')\n        .removeClass('has-feedback');\n\n      $element.find('.help-block').remove();\n    }\n\n    /**\n     * Render message.\n     *\n     * @param {string|Array} msg\n     * @param {string}       type\n     */\n    renderMessage(msg, type) {\n      type = type || 'info';\n\n      let message = this.messageContainer.find('div.alert.alert-' + type);\n      let i;\n\n      if (!message.length) {\n        message = $('<div class=\"alert alert-' + type + '\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"></div>');\n        this.messageContainer.append(message);\n      }\n\n      if (typeof msg === 'string') {\n        msg = [msg];\n      }\n\n      for (i in msg) {\n        message.append('<p>' + msg[i] + '</p>');\n      }\n    }\n  }\n\n  window.PhoenixUIBootstrap3 = PhoenixUIBootstrap3;\n\n})(jQuery);\n"]}