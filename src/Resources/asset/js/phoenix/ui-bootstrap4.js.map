{"version":3,"sources":["ui-bootstrap4.js"],"names":["$","PhoenixUIBootstrap4","validation","state","$input","help","$control","parents","first","$form","self","hasClass","removeValidateResponse","STATE_NONE","icon","color","STATE_SUCCESS","STATE_EMPTY","STATE_FAIL","setTimeout","addValidateResponse","type","addClass","find","attr","feedback","helpElement","options","feedbackContainer","tagName","prop","toLowerCase","append","parent","$element","remove","removeClass","msg","message","messageContainer","i","length","messageSelector","PhoenixUI","window","jQuery"],"mappings":"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","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\n(($) => {\n  \"use strict\";\n\n  /**\n   * Bootstrap Theme\n   */\n  class PhoenixUIBootstrap4 extends PhoenixUI {\n    static get defaultOptions() {\n      return {\n        messageSelector: '.message-wrap',\n        feedbackContainer: 'tooltip'\n      };\n    }\n\n    /**\n     * Show Validation response.\n     *\n     * @param {PhoenixValidation} validation\n     * @param {string}            state\n     * @param {jQuery}            $input\n     * @param {string}            help\n     */\n    showValidateResponse(validation, state, $input, help) {\n      const $control = $input.parents('.form-group').first();\n      const $form = $input.parents('form');\n      const self = this;\n\n      // Add class to form\n      if (!$form.hasClass('was-validated')) {\n        // $form.addClass('was-validated');\n      }\n\n      this.removeValidateResponse($control);\n\n      if (state != validation.STATE_NONE) {\n        let icon, color;\n\n        switch (state) {\n          case validation.STATE_SUCCESS:\n            color = 'success';\n            icon = 'fa fa-check';\n            break;\n\n          case validation.STATE_EMPTY:\n            color = 'error';\n            icon = 'fa fa-remove fa-times';\n            break;\n\n          case validation.STATE_FAIL:\n            color = 'warning';\n            icon = 'fa fa-warning fa-exclamation-triangle';\n            break;\n        }\n\n        // Delay 100 to make sure addClass after removeClass\n        setTimeout(function() {\n          self.addValidateResponse($control, $input, icon, color, help);\n        }, 100);\n      }\n    }\n\n    /**\n     * Add validate effect to input, just override this method to fit other templates.\n     *\n     * @param {jQuery} $control\n     * @param {jQuery} $input\n     * @param {string} icon\n     * @param {string} type\n     * @param {string} help\n     */\n    addValidateResponse($control, $input, icon, type, help) {\n      let color;\n\n      color = type === 'success' ? 'valid' : 'invalid';\n\n      $control.addClass(`has-${color}`);\n      $control.find('.form-control')\n        .addClass(`is-${color}`);\n      $control.find('.form-check-input')\n        .addClass(`is-${color}`);\n\n      if ($control.attr(`data-${type}-message`)) {\n        help = $control.attr(`data-${type}-message`);\n      }\n\n      if ($input.attr(`data-${type}-message`)) {\n        help = $input.attr(`data-${type}-message`);\n      }\n\n      if (help) {\n        const feedback = `<span class=\"${icon}\" aria-hidden=\"true\"></span>`;\n        const helpElement = $(`<small class=\"${color}-${this.options.feedbackContainer} form-control-${this.options.feedbackContainer}\">${feedback} ${help}</small>`);\n\n        const tagName = $input.prop('tagName').toLowerCase();\n\n        if (tagName === 'div') {\n          $input.append(helpElement);\n        } else {\n          $input.parent().append(helpElement);\n        }\n      }\n    }\n\n    /**\n     * Remove validation response.\n     *\n     * @param {jQuery} $element\n     */\n    removeValidateResponse($element) {\n      $element.find(`.form-control-${this.options.feedbackContainer}`).remove();\n      $element\n        .removeClass('has-invalid')\n        .removeClass('has-valid');\n      $element.find('.form-control')\n        .removeClass('is-invalid')\n        .removeClass('is-valid');\n    }\n\n    /**\n     * Render message.\n     *\n     * @param {string|Array} msg\n     * @param {string}       type\n     */\n    renderMessage(msg, type) {\n      type = type || 'info';\n\n      let message = this.messageContainer.find('div.alert.alert-' + type);\n      let i;\n\n      if (!message.length) {\n        message = $('<div class=\"alert alert-' + type + '\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"></div>');\n        this.messageContainer.append(message);\n      }\n\n      if (typeof msg === 'string') {\n        msg = [msg];\n      }\n\n      for (i in msg) {\n        message.append('<p>' + msg[i] + '</p>');\n      }\n    }\n  }\n\n  window.PhoenixUIBootstrap4 = PhoenixUIBootstrap4;\n\n})(jQuery);\n"],"file":"ui-bootstrap4.js"}