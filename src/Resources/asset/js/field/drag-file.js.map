{"version":3,"sources":["drag-file.js"],"names":["$","swal","window","title","message","alert","Phoenix","plugin","$element","$options","on","e","$self","currentTarget","files","limit","attr","sizeLimit","placeholder","accepted","split","map","v","trim","filter","length","indexOf","substr","text","__","preventDefault","fileSize","Array","prototype","forEach","call","file","checkFileType","size","name","next","find","html","addClass","removeClass","trigger","fileExt","pop","allow","type","compareMimeType","join","Error","mime","accepted2","mime2"],"mappings":";;;;;;;;AAAA;;;;;;AAOA;AACAA,CAAC,CAAC,YAAM;AACN;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,IAAe,SAASA,IAAT,CAAcE,KAAd,EAAqC;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;AAC/DC,IAAAA,KAAK,CAACF,KAAK,GAAG,KAAR,GAAgBC,OAAjB,CAAL;AACD,GAFD;;AAIAE,EAAAA,OAAO,CAACC,MAAR,CAAe,UAAf;AAAA;AAAA;AACE,oBAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AAAA;;AAAA;;AAC9BD,MAAAA,QAAQ,CAACE,EAAT,CAAY,QAAZ,EAAsB,UAAAC,CAAC,EAAI;AACvB,YAAMC,KAAK,GAAGZ,CAAC,CAACW,CAAC,CAACE,aAAH,CAAf,CADuB,CAGvB;;AACA,YAAMC,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASE,KAAvB;AACA,YAAMC,KAAK,GAAGH,KAAK,CAACI,IAAN,CAAW,gBAAX,CAAd;AACA,YAAMC,SAAS,GAAGL,KAAK,CAACI,IAAN,CAAW,eAAX,CAAlB;AACA,YAAIE,WAAW,GAAGN,KAAK,CAACI,IAAN,CAAW,aAAX,CAAlB;AACA,YAAMG,QAAQ,GAAG,CAACP,KAAK,CAACI,IAAN,CAAW,QAAX,KAAwBJ,KAAK,CAACI,IAAN,CAAW,eAAX,CAAxB,IAAuD,EAAxD,EACdI,KADc,CACR,GADQ,EAEdC,GAFc,CAEV,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,SAFS,EAGdC,MAHc,CAGP,UAAAF,CAAC;AAAA,iBAAIA,CAAC,CAACG,MAAF,GAAW,CAAf;AAAA,SAHM,EAIdJ,GAJc,CAIV,UAAAC,CAAC,EAAI;AACR,cAAIA,CAAC,CAACI,OAAF,CAAU,GAAV,MAAmB,CAAC,CAApB,IAAyBJ,CAAC,CAAC,CAAD,CAAD,KAAS,GAAtC,EAA2C;AACzC,mBAAOA,CAAC,CAACK,MAAF,CAAS,CAAT,CAAP;AACD;;AAED,iBAAOL,CAAP;AACD,SAVc,CAAjB;AAYA,YAAIM,IAAJ;;AAEA,YAAI,CAACV,WAAL,EAAkB;AAChB,cAAIN,KAAK,CAACI,IAAN,CAAW,UAAX,CAAJ,EAA4B;AAC1BE,YAAAA,WAAW,GAAGZ,OAAO,CAACuB,EAAR,CAAW,mDAAX,CAAd;AACD,WAFD,MAEO;AACLX,YAAAA,WAAW,GAAGZ,OAAO,CAACuB,EAAR,CAAW,iDAAX,CAAd;AACD;AACF,SA5BsB,CA8BvB;;;AACA,YAAId,KAAK,IAAID,KAAK,CAACW,MAAN,GAAeV,KAA5B,EAAmC;AACjCd,UAAAA,IAAI,CAACK,OAAO,CAACuB,EAAR,CAAW,gDAAX,EAA6Dd,KAA7D,CAAD,EAAsE,EAAtE,EAA0E,SAA1E,CAAJ;AACAJ,UAAAA,CAAC,CAACmB,cAAF;AACA;AACD,SAnCsB,CAqCvB;;;AACA,YAAIC,QAAQ,GAAG,CAAf;AACAC,QAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BrB,KAA7B,EAAoC,UAAAsB,IAAI,EAAI;AAC1C,UAAA,KAAI,CAACC,aAAL,CAAmBlB,QAAnB,EAA6BiB,IAA7B;;AAEAL,UAAAA,QAAQ,IAAIK,IAAI,CAACE,IAAjB;AACD,SAJD;;AAMA,YAAIrB,SAAS,IAAKc,QAAQ,GAAG,IAAX,GAAkB,IAAnB,GAA2Bd,SAA5C,EAAuD;AACrDhB,UAAAA,IAAI,CACFK,OAAO,CAACuB,EAAR,CACE,+CADF,EAEEZ,SAAS,GAAG,CAAZ,GAAiBA,SAAS,GAAG,IAAb,GAAqB,IAArC,GAA4CA,SAAS,GAAG,IAF1D,CADE,EAKF,EALE,EAMF,SANE,CAAJ;AAQAN,UAAAA,CAAC,CAACmB,cAAF;AACA;AACD;;AAED,YAAIhB,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AACpBG,UAAAA,IAAI,+EACMtB,OAAO,CAACuB,EAAR,CAAW,uCAAX,EAAoDf,KAAK,CAACW,MAA1D,CADN,CAAJ;AAED,SAHD,MAGO,IAAIX,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AAC7BG,UAAAA,IAAI,gDAAuCd,KAAK,CAAC,CAAD,CAAL,CAASyB,IAAhD,CAAJ;AACD,SAFM,MAEA;AACLX,UAAAA,IAAI,kDAAyCV,WAAzC,CAAJ;AACD,SAjEsB,CAmEvB;;;AACAN,QAAAA,KAAK,CAAC4B,IAAN,CAAW,oBAAX,EAAiCC,IAAjC,CAAsC,MAAtC,EAA8CC,IAA9C,CAAmDd,IAAnD;AACD,OArEH,EAsEGlB,EAtEH,CAsEM,UAtEN,EAsEkB,UAAAC,CAAC,EAAI;AACnBX,QAAAA,CAAC,CAACW,CAAC,CAACE,aAAH,CAAD,CAAmB8B,QAAnB,CAA4B,OAA5B;AACD,OAxEH,EAyEGjC,EAzEH,CAyEM,WAzEN,EAyEmB,UAAAC,CAAC,EAAI;AACpBX,QAAAA,CAAC,CAACW,CAAC,CAACE,aAAH,CAAD,CAAmB+B,WAAnB,CAA+B,OAA/B;AACD,OA3EH,EA4EGlC,EA5EH,CA4EM,MA5EN,EA4Ec,UAAAC,CAAC,EAAI;AACfX,QAAAA,CAAC,CAACW,CAAC,CAACE,aAAH,CAAD,CAAmB+B,WAAnB,CAA+B,OAA/B;AACD,OA9EH,EA+EGC,OA/EH,CA+EW,QA/EX;AAgFD;;AAlFH;AAAA;AAAA,oCAoFgB1B,QApFhB,EAoF0BiB,IApF1B,EAoFgC;AAAA;;AAC5B,YAAMU,OAAO,GAAGV,IAAI,CAACG,IAAL,CAAUnB,KAAV,CAAgB,GAAhB,EAAqB2B,GAArB,EAAhB;;AAEA,YAAI5B,QAAQ,CAACM,MAAb,EAAqB;AACnB,cAAIuB,KAAK,GAAG,KAAZ;AAEA7B,UAAAA,QAAQ,CAACe,OAAT,CAAiB,UAACe,IAAD,EAAU;AACzB,gBAAID,KAAJ,EAAW;AACT;AACD;;AAED,gBAAIC,IAAI,CAACvB,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC5B,kBAAI,MAAI,CAACwB,eAAL,CAAqBD,IAArB,EAA2Bb,IAAI,CAACa,IAAhC,CAAJ,EAA2C;AACzCD,gBAAAA,KAAK,GAAG,IAAR;AACD;AACF,aAJD,MAIO;AACL,kBAAIC,IAAI,KAAKH,OAAb,EAAsB;AACpBE,gBAAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF,WAdD;;AAgBA,cAAI,CAACA,KAAL,EAAY;AACV/C,YAAAA,IAAI,CACFK,OAAO,CAACuB,EAAR,CAAW,uDAAX,CADE,EAEFvB,OAAO,CAACuB,EAAR,CAAW,4DAAX,EAAyEV,QAAQ,CAACgC,IAAT,CAAc,IAAd,CAAzE,CAFE,EAGF,SAHE,CAAJ;AAKA,kBAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF;AACF;AAnHH;AAAA;AAAA,sCAqHkBjC,QArHlB,EAqH4BkC,IArH5B,EAqHkC;AAC9B,YAAMC,SAAS,GAAGnC,QAAQ,CAACC,KAAT,CAAe,GAAf,CAAlB;AACA,YAAMmC,KAAK,GAAGF,IAAI,CAACjC,KAAL,CAAW,GAAX,CAAd;;AAEA,YAAIkC,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AACxB,iBAAOA,SAAS,CAAC,CAAD,CAAT,KAAiBC,KAAK,CAAC,CAAD,CAA7B;AACD;;AAED,eAAOpC,QAAQ,KAAKkC,IAApB;AACD;AA9HH;;AAAA;AAAA;AAgID,CAtIA,CAAD","sourcesContent":["/**\n * Part of afb project.\n *\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\n * @license    __LICENSE__\n */\n\n// Custom file input\n$(() => {\n  // Polyfill sweetalert\n  const swal = window.swal || function swal(title, message = null) {\n    alert(title + ' / ' + message);\n  };\n\n  Phoenix.plugin('dragFile', class {\n    constructor($element, $options) {\n      $element.on('change', e => {\n          const $self = $(e.currentTarget);\n\n          //get the file name\n          const files = $self[0].files;\n          const limit = $self.attr('data-max-files');\n          const sizeLimit = $self.attr('data-max-size');\n          let placeholder = $self.attr('placeholder');\n          const accepted = ($self.attr('accept') || $self.attr('data-accepted') || '')\n            .split(',')\n            .map(v => v.trim())\n            .filter(v => v.length > 0)\n            .map(v => {\n              if (v.indexOf('/') === -1 && v[0] === '.') {\n                return v.substr(1);\n              }\n\n              return v;\n            });\n\n          let text;\n\n          if (!placeholder) {\n            if ($self.attr('multiple')) {\n              placeholder = Phoenix.__('phoenix.form.field.drag.file.placeholder.multiple');\n            } else {\n              placeholder = Phoenix.__('phoenix.form.field.drag.file.placeholder.single');\n            }\n          }\n\n          // Files limit\n          if (limit && files.length > limit) {\n            swal(Phoenix.__('phoenix.form.field.drag.file.message.max.files', limit), '', 'warning');\n            e.preventDefault();\n            return;\n          }\n\n          // Files size\n          let fileSize = 0;\n          Array.prototype.forEach.call(files, file => {\n            this.checkFileType(accepted, file);\n\n            fileSize += file.size;\n          });\n\n          if (sizeLimit && (fileSize / 1024 / 1024) > sizeLimit) {\n            swal(\n              Phoenix.__(\n                'phoenix.form.field.drag.file.message.max.size',\n                sizeLimit < 1 ? (sizeLimit * 1024) + 'KB' : sizeLimit + 'MB'\n              ),\n              '',\n              'warning'\n            );\n            e.preventDefault();\n            return;\n          }\n\n          if (files.length > 1) {\n            text = `<span class=\"fa fa-files fa-copy\"></span> \n                    ${Phoenix.__('phoenix.form.field.drag.file.selected', files.length)}`;\n          } else if (files.length === 1) {\n            text = `<span class=\"fa fa-file\"></span> ${files[0].name}`;\n          } else {\n            text = `<span class=\"fa fa-upload\"></span> ${placeholder}`;\n          }\n\n          //replace the \"Choose a file\" label\n          $self.next('.custom-file-label').find('span').html(text);\n        })\n        .on('dragover', e => {\n          $(e.currentTarget).addClass('hover');\n        })\n        .on('dragleave', e => {\n          $(e.currentTarget).removeClass('hover');\n        })\n        .on('drop', e => {\n          $(e.currentTarget).removeClass('hover');\n        })\n        .trigger('change');\n    }\n\n    checkFileType(accepted, file) {\n      const fileExt = file.name.split('.').pop();\n\n      if (accepted.length) {\n        let allow = false;\n\n        accepted.forEach((type) => {\n          if (allow) {\n            return;\n          }\n\n          if (type.indexOf('/') !== -1) {\n            if (this.compareMimeType(type, file.type)) {\n              allow = true;\n            }\n          } else {\n            if (type === fileExt) {\n              allow = true;\n            }\n          }\n        });\n\n        if (!allow) {\n          swal(\n            Phoenix.__('phoenix.form.field.drag.file.message.unaccepted.files'),\n            Phoenix.__('phoenix.form.field.drag.file.message.unaccepted.files.desc', accepted.join(', ')),\n            'warning'\n          );\n          throw new Error('Not accepted file ext');\n        }\n      }\n    }\n\n    compareMimeType(accepted, mime) {\n      const accepted2 = accepted.split('/');\n      const mime2 = mime.split('/');\n\n      if (accepted2[1] === '*') {\n        return accepted2[0] === mime2[0];\n      }\n\n      return accepted === mime;\n    }\n  });\n});\n"],"file":"drag-file.js"}