{"version":3,"sources":["theme/bootstrap.min.js"],"names":["Phoenix","$","Theme","showValidateResponse","validation","state","$input","help","$control","parents","first","self","this","removeValidateResponse","STATE_NONE","icon","color","STATE_SUCCESS","STATE_EMPTY","STATE_FAIL","setTimeout","addValidateResponse","addClass","feedback","prepend","attr","helpElement","prop","toLowerCase","append","parent","$element","find","remove","removeClass","renderMessage","messageContainer","msg","type","i","message","length","removeMessages","children","each","toggleFilter","container","button","showClass","hideClass","iconShowClass","iconHideClass","hasClass","hide","show","jQuery"],"mappings":"AAOA,IAAIA,SACJ,SAAUA,EAASC,GACjB,aAKAD,EAAQE,OASNC,qBAAsB,SAASC,EAAYC,EAAOC,EAAQC,GACxD,IAAIC,EAAWF,EAAOG,QAAQ,eAAeC,QACzCC,EAAOC,KAIX,GAFAA,KAAKC,uBAAuBL,GAExBH,GAASD,EAAWU,WAAY,CAClC,IAAIC,EAAMC,EAEV,OAAQX,GACN,KAAKD,EAAWa,cACdD,EAAQ,UACRD,EAAO,cACP,MAEF,KAAKX,EAAWc,YACdF,EAAQ,QACRD,EAAO,wBACP,MAEF,KAAKX,EAAWe,WACdH,EAAQ,UACRD,EAAO,gBAKXK,WAAW,WACTT,EAAKU,oBAAoBb,EAAUF,EAAQS,EAAMC,EAAOT,IACvD,OAaPc,oBAAqB,SAASb,EAAUF,EAAQS,EAAMC,EAAOT,GAC3DC,EAASc,SAAS,OAASN,EAAQ,iBAEnC,IAAIO,EAAWtB,EAAE,gBAAkBc,EAAO,sDAW1C,GAVAP,EAASgB,QAAQD,GAEbf,EAASiB,KAAK,QAAUT,EAAQ,cAClCT,EAAOC,EAASiB,KAAK,QAAUT,EAAQ,aAGrCV,EAAOmB,KAAK,QAAUT,EAAQ,cAChCT,EAAOD,EAAOmB,KAAK,QAAUT,EAAQ,aAGnCT,EAAM,CACR,IAAImB,EAAczB,EAAE,6BAA+BM,EAAO,YAI1C,QAFFD,EAAOqB,KAAK,WAAWC,cAGnCtB,EAAOuB,OAAOH,GAGdpB,EAAOwB,SAASD,OAAOH,KAU7Bb,uBAAwB,SAASkB,GAC/BA,EAASC,KAAK,0BAA0BC,SACxCF,EAASG,YAAY,aAClBA,YAAY,eACZA,YAAY,eACZA,YAAY,gBAEfH,EAASC,KAAK,eAAeC,UAU/BE,cAAe,SAASC,EAAkBC,EAAKC,GAC7CA,EAAOA,GAAQ,OAEf,IACEC,EADEC,EAAUJ,EAAiBJ,KAAK,mBAAqBM,GAYzD,IAAKC,KATAC,EAAQC,SACXD,EAAUvC,EAAE,2BAA6BqC,EAAO,wFAChDF,EAAiBP,OAAOW,IAGP,iBAARH,IACTA,GAAOA,IAGCA,EACRG,EAAQX,OAAO,MAAQQ,EAAIE,GAAK,SASpCG,eAAgB,SAASN,GACRA,EAAiBO,WAEvBC,KAAK,WACZhC,KAAKqB,YAUTY,aAAc,SAASC,EAAWC,GAChC,IAAIC,EAAYD,EAAOtB,KAAK,oBAAsB,cAC9CwB,EAAYF,EAAOtB,KAAK,oBAAsB,cAE9CV,EAAOgC,EAAOf,KAAK,2BACnBkB,EAAgBnC,EAAKU,KAAK,oBAAsB,iBAChD0B,EAAgBpC,EAAKU,KAAK,oBAAsB,mBAEhDqB,EAAUM,SAAS,UACrBL,EAAOb,YAAYc,GAAW1B,SAAS2B,GACvCH,EAAUO,KAAK,QACfP,EAAUZ,YAAY,SAEtBnB,EAAKmB,YAAYgB,GAAe5B,SAAS6B,KAGzCJ,EAAOb,YAAYe,GAAW3B,SAAS0B,GACvCF,EAAUQ,KAAK,QACfR,EAAUxB,SAAS,SAEnBP,EAAKmB,YAAYiB,GAAe7B,SAAS4B,MAtKjD,CA2KGlD,UAAYA,YAAeuD","file":"bootstrap.min.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\nvar Phoenix;\n(function(Phoenix, $) {\n  \"use strict\";\n\n  /**\n   * Bootstrap Theme\n   */\n  Phoenix.Theme = {\n    /**\n     * Show Validation response.\n     *\n     * @param {PhoenixValidation} validation\n     * @param {string}            state\n     * @param {jQuery}            $input\n     * @param {string}            help\n     */\n    showValidateResponse: function(validation, state, $input, help) {\n      var $control = $input.parents('.form-group').first();\n      var self = this;\n\n      this.removeValidateResponse($control);\n\n      if (state != validation.STATE_NONE) {\n        var icon, color;\n\n        switch (state) {\n          case validation.STATE_SUCCESS:\n            color = 'success';\n            icon = 'fa fa-check';\n            break;\n\n          case validation.STATE_EMPTY:\n            color = 'error';\n            icon = 'fa fa-remove fa-times';\n            break;\n\n          case validation.STATE_FAIL:\n            color = 'warning';\n            icon = 'fa fa-warning';\n            break;\n        }\n\n        // Delay 100 to make sure addClass after removeClass\n        setTimeout(function() {\n          self.addValidateResponse($control, $input, icon, color, help);\n        }, 100);\n      }\n    },\n\n    /**\n     * Add validate effect to input, just override this method to fit other templates.\n     *\n     * @param {jQuery} $control\n     * @param {jQuery} $input\n     * @param {string} icon\n     * @param {string} color\n     * @param {string} help\n     */\n    addValidateResponse: function($control, $input, icon, color, help) {\n      $control.addClass('has-' + color + ' has-feedback');\n\n      var feedback = $('<span class=\"' + icon + ' form-control-feedback\" aria-hidden=\"true\"></span>');\n      $control.prepend(feedback);\n\n      if ($control.attr('data-' + color + '-message')) {\n        help = $control.attr('data-' + color + '-message');\n      }\n\n      if ($input.attr('data-' + color + '-message')) {\n        help = $input.attr('data-' + color + '-message');\n      }\n\n      if (help) {\n        var helpElement = $('<small class=\"help-block\">' + help + '</small>');\n\n        var tagName = $input.prop('tagName').toLowerCase();\n\n        if (tagName === 'div') {\n          $input.append(helpElement);\n        }\n        else {\n          $input.parent().append(helpElement);\n        }\n      }\n    },\n\n    /**\n     * Remove validation response.\n     *\n     * @param {jQuery} $element\n     */\n    removeValidateResponse: function($element) {\n      $element.find('.form-control-feedback').remove();\n      $element.removeClass('has-error')\n        .removeClass('has-success')\n        .removeClass('has-warning')\n        .removeClass('has-feedback');\n\n      $element.find('.help-block').remove();\n    },\n\n    /**\n     * Render message.\n     *\n     * @param {jQuery}       messageContainer\n     * @param {string|Array} msg\n     * @param {string}       type\n     */\n    renderMessage: function(messageContainer, msg, type) {\n      type = type || 'info';\n\n      var message = messageContainer.find('div.alert.alert-' + type),\n        i;\n\n      if (!message.length) {\n        message = $('<div class=\"alert alert-' + type + '\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"></div>');\n        messageContainer.append(message);\n      }\n\n      if (typeof msg === 'string') {\n        msg = [msg];\n      }\n\n      for (i in msg) {\n        message.append('<p>' + msg[i] + '</p>');\n      }\n    },\n\n    /**\n     * Remove all messages.\n     *\n     * @param {jQuery} messageContainer\n     */\n    removeMessages: function(messageContainer) {\n      var messages = messageContainer.children();\n\n      messages.each(function() {\n        this.remove();\n      });\n    },\n\n    /**\n     * Toggle filter bar.\n     *\n     * @param {jQuery} container\n     * @param {jQuery} button\n     */\n    toggleFilter: function(container, button) {\n      var showClass = button.attr('data-class-show') || 'btn-primary';\n      var hideClass = button.attr('data-class-hide') || 'btn-default';\n\n      var icon = button.find('span.filter-button-icon');\n      var iconShowClass = icon.attr('data-class-show') || 'fa fa-angle-up';\n      var iconHideClass = icon.attr('data-class-hide') || 'fa fa-angle-down';\n\n      if (container.hasClass('shown')) {\n        button.removeClass(showClass).addClass(hideClass);\n        container.hide('fast');\n        container.removeClass('shown');\n\n        icon.removeClass(iconShowClass).addClass(iconHideClass);\n      }\n      else {\n        button.removeClass(hideClass).addClass(showClass);\n        container.show('fast');\n        container.addClass('shown');\n\n        icon.removeClass(iconHideClass).addClass(iconShowClass);\n      }\n    }\n  };\n\n})(Phoenix || (Phoenix = {}), jQuery);\n"]}