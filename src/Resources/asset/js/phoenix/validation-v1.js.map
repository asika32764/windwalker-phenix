{"version":3,"sources":["validation-v1.js"],"names":["$","handlers","PhoenixValidationV1","PhoenixValidationV1Element","validation","PhoenixJQueryPlugin","events","scroll","enabled","offset","duration","element","options","phoenix","STATE_SUCCESS","STATE_FAIL","STATE_NONE","STATE_EMPTY","form","extend","constructor","defaultOptions","validators","theme","inputs","find","registerDefaultValidators","registerEvents","input","add","filter","i","e","self","inValid","each","validate","push","target","is","parents","attr","animate","scrollTop","top","length","$input","className","validator","showResponse","hasClass","prop","toLowerCase","setCustomValidity","val","Array","isArray","match","handler","help","notice","state","trigger","type","$element","name","on","event","validateAll","stopPropagation","preventDefault","hasOwnProperty","addValidator","username","value","regex","RegExp","test","password","numeric","email","punycode","toASCII","url","alnum","color","creditcard","ip","window","jQuery"],"mappings":"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","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later;\n */\n\n/**\n * PhoenixValidation\n */\n;(function($) {\n  \"use strict\";\n\n  /**\n   * Default handlers\n   *\n   * @type {Object}\n   */\n  const handlers = {};\n\n  /**\n   * Class init.\n   *\n   * @param {jQuery} element\n   * @param {Object} options\n   * @constructor\n   */\n  class PhoenixValidationV1 extends PhoenixJQueryPlugin {\n    static get is() { return 'Validation' }\n\n    static get pluginName() { return 'validation' }\n\n    static get pluginClass() { return PhoenixValidationV1Element }\n\n    static get proxies() {\n      return {\n        validation: 'createPlugin'\n      };\n    }\n  }\n\n  class PhoenixValidationV1Element {\n    static get defaultOptions() {\n      return {\n        events: ['change'],\n        scroll: {\n          enabled: true,\n          offset: -100,\n          duration: 1000\n        }\n      }\n    }\n\n    constructor(element, options, phoenix) {\n      /**\n       * Validate success.\n       *\n       * @type {string}\n       */\n      this.STATE_SUCCESS = 'success';\n\n      /**\n       * Validate fail.\n       *\n       * @type {string}\n       */\n      this.STATE_FAIL = 'fail';\n\n      /**\n       * Pass or required with value.\n       *\n       * @type {string}\n       */\n      this.STATE_NONE = 'none';\n\n      /**\n       * Required with no value.\n       *\n       * @type {string}\n       */\n      this.STATE_EMPTY = 'empty';\n\n      this.form = element || $;\n      this.phoenix = phoenix;\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\n      this.validators = [];\n      this.handlers = {};\n      this.theme = {};\n      this.inputs = this.form.find('input, select, textarea, div.input-list-container');\n\n      this.registerDefaultValidators();\n      this.registerEvents();\n    }\n\n    /**\n     * Add field.\n     *\n     * @param {*} input\n     * @returns {PhoenixValidationElement}\n     */\n    addField(input) {\n      this.inputs = this.inputs.add(input);\n\n      return this;\n    }\n\n    removeField(input) {\n      this.inputs = this.inputs.filter((i, e) => input !== e);\n\n      return this;\n    }\n\n    /**\n     * Validate All.\n     *\n     * @returns {boolean}\n     */\n    validateAll() {\n      const self = this, inValid = [];\n      let scroll = self.options.scroll.enabled;\n\n      this.inputs.each(function() {\n        if (!self.validate(this)) {\n          inValid.push(this);\n\n          // Scroll\n          if (scroll) {\n            // Find displayed element\n            let target = $(this);\n\n            if (!target.is(':visible')) {\n              target = target.parents('#' + target.attr('id') + '-control, [data-form-group]');\n            }\n\n            $('html, body').animate({\n              scrollTop: target.offset().top + self.options.scroll.offset\n            }, self.options.scroll.duration);\n\n            scroll = false;\n          }\n        }\n      });\n\n      return inValid.length <= 0;\n    }\n\n    /**\n     * Validate.\n     *\n     * @param {jQuery} input\n     * @returns {boolean}\n     */\n    validate(input) {\n      let $input = $(input), className, validator;\n\n      if ($input.attr('disabled')) {\n        this.showResponse(this.STATE_NONE, $input);\n\n        return true;\n      }\n\n\n      if ($input.attr('required') || $input.hasClass('required')) {\n        // Single Radio & Checkbox\n        if (($input.attr('type') === 'radio' || $input.attr('type') === 'checkbox') && !$input.is(':checked')) {\n          this.showResponse(this.STATE_EMPTY, $input);\n          return false;\n        } else if ($input.prop(\"tagName\").toLowerCase() === 'div' && $input.hasClass('input-list-container')) {\n          // Input List (Radios & Checkboxes)\n          if (!$input.find('input:checked').length) {\n            // Set as :invalid\n            $input.find('input').each(function () {\n              this.setCustomValidity('Please select at least one.');\n            });\n\n            this.showResponse(this.STATE_EMPTY, $input);\n\n            return false;\n          } else {\n            // Set as :valid\n            $input.find('input').each(function () {\n              this.setCustomValidity('');\n            });\n\n            this.showResponse(this.STATE_SUCCESS, $input);\n          }\n        }\n\n        // Handle all fields and checkbox\n        else if (!$input.val() || (Array.isArray($input.val()) && $input.val().length === 0)) {\n          this.showResponse(this.STATE_EMPTY, $input);\n\n          return false;\n        }\n      }\n\n      // Is value exists, validate this type.\n      className = $input.attr('class');\n\n      if (className) {\n        validator = className.match(/validate-([a-zA-Z0-9_|-]+)/);\n      }\n\n      // Empty value and no validator config, set response to none.\n      if (!$input.val() || !validator) {\n        this.showResponse(this.STATE_NONE, $input);\n\n        return true;\n      }\n\n      validator = this.validators[validator[1]];\n\n      if (!validator || !validator.handler) {\n        this.showResponse(this.STATE_SUCCESS, $input);\n\n        return true;\n      }\n\n      if (!validator.handler($input.val(), $input)) {\n        let help = validator.options.notice;\n\n        if (typeof  help === 'function') {\n          help = help($input, this);\n        }\n\n        // Set failure value as :invalid\n        $input[0].setCustomValidity('Input is invalid.');\n        this.showResponse(this.STATE_FAIL, $input, help);\n\n        return false;\n      }\n\n      this.showResponse(this.STATE_SUCCESS, $input);\n\n      return true;\n    }\n\n    /**\n     * Show response on input.\n     *\n     * @param {string}      state\n     * @param {jQuery}      $input\n     * @param {string|null} help\n     *\n     * @returns {PhoenixValidationElement}\n     */\n    showResponse(state, $input, help = null) {\n      this.phoenix.trigger('validation.response', {state, $input, help, validation: this});\n\n      $input.trigger({\n        type: 'phoenix.validate.' + state,\n        input: $input,\n        state: state,\n        help: help\n      });\n\n      return this;\n    }\n\n    /**\n     * Remove responses.\n     *\n     * @param {jQuery} $element\n     *\n     * @returns {PhoenixValidationElement}\n     */\n    removeResponse($element) {\n      this.phoenix.trigger('validation.remove', {$element});\n\n      return this;\n    }\n\n    /**\n     * Add validator handler.\n     *\n     * @param name\n     * @param validator\n     * @param options\n     * @returns {PhoenixValidation}\n     */\n    addValidator(name, validator, options) {\n      options = options || {};\n\n      this.validators[name] = {\n        handler: validator,\n        options: options\n      };\n\n      return this;\n    }\n\n    /**\n     * Register events.\n     */\n    registerEvents() {\n      const self = this;\n\n      this.form.on('submit', event => {\n        if (!this.validateAll()) {\n          event.stopPropagation();\n          event.preventDefault();\n\n          return false;\n        }\n\n        this.form.trigger('phoenix.validate.success');\n\n        return true;\n      });\n\n      $.each(this.options.events, function() {\n        self.inputs.on(this, function() {\n          self.validate(this);\n        });\n      });\n    }\n\n    /**\n     * Register default validators.\n     */\n    registerDefaultValidators() {\n      for (let name in handlers) {\n        if (handlers.hasOwnProperty(name)) {\n          this.addValidator(name, handlers[name]);\n        }\n      }\n    }\n  }\n\n  handlers.username = function(value, element) {\n    const regex = new RegExp(\"[\\<|\\>|\\\"|\\'|\\%|\\;|\\(|\\)|\\&]\", \"i\");\n    return !regex.test(value);\n  };\n\n  handlers.password = function(value, element) {\n    const regex = /^\\S[\\S ]{2,98}\\S$/;\n    return regex.test(value);\n  };\n\n  handlers.numeric = function(value, element) {\n    const regex = /^(\\d|-)?(\\d|,)*\\.?\\d*$/;\n    return regex.test(value);\n  };\n\n  handlers.email = function(value, element) {\n    value = punycode.toASCII(value);\n    const regex = /^[a-zA-Z0-9.!#$%&â€™*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return regex.test(value);\n  };\n\n  handlers.url = function(value, element) {\n    value = punycode.toASCII(value);\n    const regex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i;\n    return regex.test(value);\n  };\n\n  handlers.alnum = function(value, element) {\n    const regex = /^[a-zA-Z0-9]*$/;\n    return regex.test(value);\n  };\n\n  handlers.color = function(value, element) {\n    const regex = /^#(?:[0-9a-f]{3}){1,2}$/;\n    return regex.test(value);\n  };\n\n  /**\n   * @see  http://www.virtuosimedia.com/dev/php/37-tested-php-perl-and-javascript-regular-expressions\n   */\n  handlers.creditcard = function(value, element) {\n    const regex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*$/;\n    return regex.test(value);\n  };\n\n  handlers.ip = function(value, element) {\n    const regex = /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/;\n    return regex.test(value);\n  };\n\n  window.PhoenixValidationV1 = PhoenixValidationV1;\n\n})(jQuery);\n"],"file":"validation-v1.js"}