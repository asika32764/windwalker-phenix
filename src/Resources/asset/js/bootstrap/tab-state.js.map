{"version":3,"sources":["tab-state.js"],"names":["LoadTab","$element","time","tabButtons","find","storageKey","hashCode","location","href","bindEvents","setTimeout","switchTab","on","window","localStorage","setItem","$","e","currentTarget","attr","$el","tab","length","getItem","hasTab","removeItem","parent","removeClass","tabhref","activateTab","seperatorIndex","indexOf","singular","substring","plural","text","hash","word","i","charCodeAt"],"mappings":";;;;;;AAAA;;;;;;;AAOA;;;;;;AAMA,CAAC,YAAM;AACL;;AADK,MAGCA,OAHD;AAIH;;;;;;;;AAQA,qBAAYC,QAAZ,EAAsBC,IAAtB,EAA4B;AAAA;;AAAA;;AAC1BA,aAAOA,QAAQ,GAAf;;AAEA,WAAKD,QAAL,GAAgBA,QAAhB;AACA,WAAKE,UAAL,GAAkBF,SAASG,IAAT,CAAc,sBAAd,CAAlB;AACA,WAAKC,UAAL,GAAkB,cAAc,KAAKC,QAAL,CAAcC,SAASC,IAAvB,CAAhC;;AAEA,WAAKC,UAAL;;AAEAC,iBAAW,YAAM;AACf,cAAKC,SAAL;AACD,OAFD,EAEGT,IAFH;AAGD;;AAED;;;;;AA1BG;AAAA;AAAA,mCA6BU;AAAA;;AACX,aAAKC,UAAL,CAAgBS,EAAhB,CAAmB,OAAnB,EAA4B,aAAK;AAC/B;AACAC,iBAAOC,YAAP,CAAoBC,OAApB,CAA4B,OAAKV,UAAjC,EAA6CW,EAAEC,EAAEC,aAAJ,EAAmBC,IAAnB,CAAwB,MAAxB,CAA7C;AACD,SAHD;AAID;;AAED;;;;;;AApCG;AAAA;AAAA,kCAyCSX,IAzCT,EAyCe;AAChB,YAAMY,MAAM,KAAKnB,QAAL,CAAcG,IAAd,kCAAkDI,IAAlD,QAAZ;AACAY,YAAIC,GAAJ,CAAQ,MAAR;AACD;;AAED;;;;;;;;AA9CG;AAAA;AAAA,6BAqDIb,IArDJ,EAqDU;AACX,eAAO,KAAKP,QAAL,CAAcG,IAAd,kCAAkDI,IAAlD,SAA4Dc,MAAnE;AACD;;AAED;;;;;;AAzDG;AAAA;AAAA,kCA8DS;AACV,YAAIR,aAAaS,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpC;AACA,cAAI,CAAC,KAAKC,MAAL,CAAYV,aAAaS,OAAb,CAAqB,KAAKlB,UAA1B,CAAZ,CAAL,EAAyD;AACvDS,yBAAaW,UAAb,CAAwB,KAAKpB,UAA7B;AACA,mBAAO,IAAP;AACD;;AAED;AACA,eAAKJ,QAAL,CAAcG,IAAd,CAAmB,sBAAnB,EAA2CsB,MAA3C,GAAoDC,WAApD,CAAgE,QAAhE;;AAEA,cAAMC,UAAUd,aAAaS,OAAb,CAAqB,KAAKlB,UAA1B,CAAhB;;AAEA;AACA,eAAKwB,WAAL,CAAiBD,OAAjB;;AAEA;AACA,cAAME,iBAAiBF,QAAQG,OAAR,CAAgB,GAAhB,CAAvB;;AAEA,cAAID,mBAAmB,CAAC,CAAxB,EAA2B;AACzB,gBAAME,WAAWJ,QAAQK,SAAR,CAAkB,CAAlB,EAAqBH,cAArB,CAAjB;AACA,gBAAMI,SAASF,WAAW,GAA1B;;AAEA,iBAAKH,WAAL,CAAiBK,MAAjB;AACD;AACF;AACF;;AAED;;;;;;;;AA1FG;AAAA;AAAA,+BAiGMC,IAjGN,EAiGY;AACb,YAAIC,OAAO,CAAX;AACA,YAAIC,aAAJ;;AAEA,YAAIF,KAAKb,MAAL,KAAgB,CAApB,EAAuB;AACrB,iBAAOc,IAAP;AACD;;AAED,aAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIH,KAAKb,MAAzB,EAAiCgB,GAAjC,EAAsC;AACpCD,iBAAOF,KAAKI,UAAL,CAAgBD,CAAhB,CAAP;AACAF,iBAAQ,CAACA,QAAQ,CAAT,IAAcA,IAAf,GAAuBC,IAA9B;AACAD,iBAAOA,OAAOA,IAAd,CAHoC,CAGhB;AACrB;;AAED,eAAOA,IAAP;AACD;AAhHE;;AAAA;AAAA;;AAmHLvB,SAAOb,OAAP,GAAiBA,OAAjB;AACD,CApHD","file":"tab-state.js","sourcesContent":["/**\r\n * Part of Phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later;\r\n */\r\n\r\n/**\r\n * JavaScript behavior to allow selected tab to be remained after save or page reload\r\n * keeping state in localstorage\r\n *\r\n * @see  https://github.com/joomla/joomla-cms/blob/staging/media/system/js/tabs-state.js\r\n */\r\n(() => {\r\n  'use strict';\r\n\r\n  class LoadTab {\r\n    /**\r\n     * Class init.\r\n     *\r\n     * @param {jQuery} $element\r\n     * @param {Number} time\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor($element, time) {\r\n      time = time || 100;\r\n\r\n      this.$element = $element;\r\n      this.tabButtons = $element.find('a[data-toggle=\"tab\"]');\r\n      this.storageKey = 'tab-href-' + this.hashCode(location.href);\r\n\r\n      this.bindEvents();\r\n\r\n      setTimeout(() => {\r\n        this.switchTab();\r\n      }, time);\r\n    }\r\n\r\n    /**\r\n     * Bind events.\r\n     */\r\n    bindEvents() {\r\n      this.tabButtons.on('click', e => {\r\n        // Store the selected tab href in localstorage\r\n        window.localStorage.setItem(this.storageKey, $(e.currentTarget).attr('href'));\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Active tab.\r\n     *\r\n     * @param {string} href\r\n     */\r\n    activateTab(href) {\r\n      const $el = this.$element.find(`a[data-toggle=\"tab\"][href*=\"${href}\"]`);\r\n      $el.tab('show');\r\n    }\r\n\r\n    /**\r\n     * Has tab.\r\n     *\r\n     * @param {string} href\r\n     *\r\n     * @returns {*}\r\n     */\r\n    hasTab(href) {\r\n      return this.$element.find(`a[data-toggle=\"tab\"][href*=\"${href}\"]`).length;\r\n    }\r\n\r\n    /**\r\n     * Switch tab.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    switchTab() {\r\n      if (localStorage.getItem('tab-href')) {\r\n        // When moving from tab area to a different view\r\n        if (!this.hasTab(localStorage.getItem(this.storageKey))) {\r\n          localStorage.removeItem(this.storageKey);\r\n          return true;\r\n        }\r\n\r\n        // Clean default tabs\r\n        this.$element.find('a[data-toggle=\"tab\"]').parent().removeClass('active');\r\n\r\n        const tabhref = localStorage.getItem(this.storageKey);\r\n\r\n        // Add active attribute for selected tab indicated by url\r\n        this.activateTab(tabhref);\r\n\r\n        // Check whether internal tab is selected (in format <tabname>-<id>)\r\n        const seperatorIndex = tabhref.indexOf('-');\r\n\r\n        if (seperatorIndex !== -1) {\r\n          const singular = tabhref.substring(0, seperatorIndex);\r\n          const plural = singular + 's';\r\n\r\n          this.activateTab(plural);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Hash code.\r\n     *\r\n     * @param {String} text\r\n     *\r\n     * @returns {number}\r\n     */\r\n    hashCode(text) {\r\n      let hash = 0;\r\n      let word;\r\n\r\n      if (text.length === 0) {\r\n        return hash;\r\n      }\r\n\r\n      for (let i = 0; i < text.length; i++) {\r\n        word = text.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + word;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n      }\r\n\r\n      return hash;\r\n    }\r\n  }\r\n\r\n  window.LoadTab = LoadTab;\r\n})();\r\n"]}