{"version":3,"sources":["ajax.min.js"],"names":["Phoenix","$","Ajax","config","customMethod","data","headers","GET","POST","PUT","PATCH","DELETE","HEAD","OPTIONS","_global","get","url","options","this","request","post","put","patch","sendDelete","delete","head","sendRequest","method","extend","type","toUpperCase","indexOf","_method","ajax","clone","jQuery"],"mappings":"AAOA,IAAIA,SACJ,SAAUC,EAAGD,GACX,cA0MSA,UAAYA,aAxMbE,MACND,EAAGA,EAEHE,QACEC,cAAc,GAGhBC,QAEAC,SACEC,OACAC,QACAC,OACAC,SACAC,UACAC,QACAC,WACAC,YAaFC,IAAK,SAASC,EAAKX,EAAMC,EAASW,GAChC,OAAOC,KAAKC,QAAQ,MAAOH,EAAKX,EAAMC,EAASW,IAajDG,KAAM,SAASJ,EAAKX,EAAMC,EAASW,GACjC,OAAOC,KAAKC,QAAQ,OAAQH,EAAKX,EAAMC,EAASW,IAalDI,IAAK,SAASL,EAAKX,EAAMC,EAASW,GAChC,OAAOC,KAAKC,QAAQ,MAAOH,EAAKX,EAAMC,EAASW,IAajDK,MAAO,SAASN,EAAKX,EAAMC,EAASW,GAClC,OAAOC,KAAKC,QAAQ,QAASH,EAAKX,EAAMC,EAASW,IAanDM,WAAY,SAASP,EAAKX,EAAMC,EAASW,GACvC,OAAOC,KAAa,OAAEF,EAAKX,EAAMC,EAASW,IAa5CO,OAAU,SAASR,EAAKX,EAAMC,EAASW,GACrC,OAAOC,KAAKC,QAAQ,SAAUH,EAAKX,EAAMC,EAASW,IAapDQ,KAAM,SAAST,EAAKX,EAAMC,EAASW,GACjC,OAAOC,KAAKC,QAAQ,OAAQH,EAAKX,EAAMC,EAASW,IAalDA,QAAS,SAASD,EAAKX,EAAMC,EAASW,GACpC,OAAOC,KAAKC,QAAQ,UAAWH,EAAKX,EAAMC,EAASW,IAcrDS,YAAa,SAASC,EAAQX,EAAKX,EAAMC,EAASW,GAChD,OAAOC,KAAKC,QAAQQ,EAAQX,EAAKX,EAAMC,EAASW,IAclDE,QAAS,SAASQ,EAAQX,EAAKX,EAAMC,EAASW,GAC5CA,EAAUA,MACVX,EAAUA,MACVD,EAAOA,MAGY,iBAFnBW,EAAMA,GAAO,MAIXA,GADAC,EAAUD,GACIA,KAGhBC,EAAQZ,KAAuB,iBAATA,EAAoBA,EAAOJ,EAAE2B,QAAO,KAAUV,KAAKb,KAAMY,EAAQZ,KAAMA,GAC7FY,EAAQY,KAAOF,EAAOG,eAAiB,MACvC,IAAID,EAAOZ,EAAQY,KAUnB,OAR+C,KAA1C,OAAQ,OAAOE,QAAQd,EAAQY,OAAgBX,KAAKf,OAAOC,eAC9DE,EAAQ,0BAA4BW,EAAQY,KAC5CZ,EAAQZ,KAAK2B,QAAUf,EAAQY,KAC/BZ,EAAQY,KAAO,QAGjBZ,EAAQX,QAAUL,EAAE2B,QAAO,KAAUV,KAAKZ,QAAQQ,QAASI,KAAKZ,QAAQuB,GAAOZ,EAAQX,QAASA,GAEzFY,KAAKjB,EAAEgC,KAAKjB,EAAKC,IAU1Bb,aAAc,WACZ,IAAI8B,EAAQjC,EAAE2B,QAAO,KAAUV,MAI/B,OAFAgB,EAAM/B,OAAOC,cAAe,EAErB8B,IAvMb,CA2MGC","file":"ajax.min.js","sourcesContent":["/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later.\r\n */\r\n\r\nvar Phoenix;\r\n(function($, Phoenix) {\r\n  \"use strict\";\r\n\r\n  Phoenix.Ajax = {\r\n    $: $,\r\n\r\n    config: {\r\n      customMethod: false,\r\n    },\r\n\r\n    data: {},\r\n\r\n    headers: {\r\n      GET: {},\r\n      POST: {},\r\n      PUT: {},\r\n      PATCH: {},\r\n      DELETE: {},\r\n      HEAD: {},\r\n      OPTIONS: {},\r\n      _global: {}\r\n    },\r\n\r\n    /**\r\n     * Send a GET request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    get: function(url, data, headers, options) {\r\n      return this.request('GET', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a POST request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    post: function(url, data, headers, options) {\r\n      return this.request('POST', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a PUT request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    put: function(url, data, headers, options) {\r\n      return this.request('PUT', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a PATCH request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    patch: function(url, data, headers, options) {\r\n      return this.request('PATCH', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a DELETE request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    sendDelete: function(url, data, headers, options) {\r\n      return this['delete'](url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a DELETE request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    'delete': function(url, data, headers, options) {\r\n      return this.request('DELETE', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a HEAD request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    head: function(url, data, headers, options) {\r\n      return this.request('HEAD', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send a OPTIONS request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    options: function(url, data, headers, options) {\r\n      return this.request('OPTIONS', url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send request.\r\n     *\r\n     * @param {string} method\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    sendRequest: function(method, url, data, headers, options) {\r\n      return this.request(method, url, data, headers, options);\r\n    },\r\n\r\n    /**\r\n     * Send request.\r\n     *\r\n     * @param {string} method\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    request: function(method, url, data, headers, options) {\r\n      options = options || {};\r\n      headers = headers || {};\r\n      data = data || {};\r\n      url = url || '';\r\n\r\n      if (typeof url === 'object') {\r\n        options = url;\r\n        url = options.url;\r\n      }\r\n\r\n      options.data = typeof data === 'string' ? data : $.extend(true, {}, this.data, options.data, data);\r\n      options.type = method.toUpperCase() || 'GET';\r\n      var type = options.type;\r\n\r\n      if (['POST', 'GET'].indexOf(options.type) === -1 && this.config.customMethod) {\r\n        headers['X-HTTP-Method-Override'] = options.type;\r\n        options.data._method = options.type;\r\n        options.type = 'POST';\r\n      }\r\n\r\n      options.headers = $.extend(true, {}, this.headers._global, this.headers[type], options.headers, headers);\r\n\r\n      return this.$.ajax(url, options);\r\n    },\r\n\r\n    /**\r\n     * Set custom method with _method parameter.\r\n     *\r\n     * This method will return a clone of this object to help us send request once.\r\n     *\r\n     * @returns {Ajax}\r\n     */\r\n    customMethod: function() {\r\n      var clone = $.extend(true, {}, this);\r\n\r\n      clone.config.customMethod = true;\r\n\r\n      return clone;\r\n    }\r\n  };\r\n\r\n})(jQuery, Phoenix || (Phoenix = {}));\r\n"]}