{"version":3,"sources":["router.min.js"],"names":["Phoenix","Router","routes","add","route","url","this","undefined","Error","Uri"],"mappings":"AAOA,IAAIA,SAKJ,SAAUA,GACR,aAEAA,EAAQC,QACNC,UAUAC,IAAK,SAASC,EAAOC,GAGnB,OAFAC,KAAKJ,OAAOE,GAASC,EAEdC,MAUTF,MAAO,SAASA,GACd,QAA2BG,IAAvBD,KAAKJ,OAAOE,GACd,MAAM,IAAII,MAAM,WAAaJ,EAAQ,eAGvC,OAAOE,KAAKJ,OAAOE,KAIvBJ,EAAQS,OApCV,CAqCGT,UAAYA","file":"router.min.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\nvar Phoenix;\n\n/**\n * Phoenix.Router\n */\n(function(Phoenix) {\n  \"use strict\";\n\n  Phoenix.Router = {\n    routes: {},\n\n    /**\n     * Add a route.\n     *\n     * @param route\n     * @param url\n     *\n     * @returns {Phoenix.Router}\n     */\n    add: function(route, url) {\n      this.routes[route] = url;\n\n      return this;\n    },\n\n    /**\n     * Get route.\n     *\n     * @param route\n     *\n     * @returns {String}\n     */\n    route: function(route) {\n      if (this.routes[route] === undefined) {\n        throw new Error('Route: \"' + route + '\" not found');\n      }\n\n      return this.routes[route];\n    }\n  };\n\n  Phoenix.Uri = {};\n})(Phoenix || (Phoenix = {}));\n"]}