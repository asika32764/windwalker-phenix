{"version":3,"sources":["validation.js"],"names":["$","handlers","PhoenixValidation","PhoenixValidationElement","validation","PhoenixJQueryPlugin","events","scroll","enabled","offset","duration","element","options","phoenix","STATE_SUCCESS","STATE_FAIL","STATE_NONE","STATE_EMPTY","form","extend","constructor","defaultOptions","validators","theme","inputs","find","length","attr","registerDefaultValidators","registerEvents","input","registerInputEvents","add","filter","i","e","self","inValid","each","result","validate","push","target","is","parents","animate","scrollTop","top","$input","help","addClass","showResponse","setCustomValidity","validates","split","val","validator","handler","notice","__","checkValidity","state","validity","valueMissing","isDebug","console","warn","key","type","camelTo","trigger","$element","name","on","validateAll","event","stopPropagation","preventDefault","currentTarget","hasOwnProperty","addValidator","str","sep","replace","toLowerCase","username","value","regex","RegExp","test","numeric","email","punycode","toASCII","url","alnum","color","creditcard","ip","window","jQuery"],"mappings":";;;;;;;;;;AAAA;;;;;;;AAOA;;;AAGA,CAAC,CAAC,UAASA,CAAT,EAAY;AACZ;;AAEA;;;;;;AAKA,MAAMC,WAAW,EAAjB;;AAEA;;;;;;;;AAVY,MAiBNC,iBAjBM;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0BAkBM;AAAE,eAAO,YAAP;AAAqB;AAlB7B;AAAA;AAAA,0BAoBc;AAAE,eAAO,YAAP;AAAqB;AApBrC;AAAA;AAAA,0BAsBe;AAAE,eAAOC,wBAAP;AAAiC;AAtBlD;AAAA;AAAA,0BAwBW;AACnB,eAAO;AACLC,sBAAY;AADP,SAAP;AAGD;AA5BS;;AAAA;AAAA,IAiBoBC,mBAjBpB;;AAAA,MA+BNF,wBA/BM;AAAA;AAAA;AAAA,0BAgCkB;AAC1B,eAAO;AACLG,kBAAQ,CAAC,QAAD,CADH;AAELC,kBAAQ;AACNC,qBAAS,IADH;AAENC,oBAAQ,CAAC,GAFH;AAGNC,sBAAU;AAHJ;AAFH,SAAP;AAQD;AAzCS;;AA2CV,sCAAYC,OAAZ,EAAqBC,OAArB,EAA8BC,OAA9B,EAAuC;AAAA;;AACrC;;;;;AAKA,WAAKC,aAAL,GAAqB,SAArB;;AAEA;;;;;AAKA,WAAKC,UAAL,GAAkB,MAAlB;;AAEA;;;;;AAKA,WAAKC,UAAL,GAAkB,MAAlB;;AAEA;;;;;AAKA,WAAKC,WAAL,GAAmB,OAAnB;;AAEA,WAAKC,IAAL,GAAYP,WAAWX,CAAvB;AACA,WAAKa,OAAL,GAAeA,OAAf;AACA,WAAKD,OAAL,GAAeZ,EAAEmB,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,KAAKC,WAAL,CAAiBC,cAApC,EAAoDT,OAApD,CAAf;AACA,WAAKU,UAAL,GAAkB,EAAlB;AACA,WAAKrB,QAAL,GAAgB,EAAhB;AACA,WAAKsB,KAAL,GAAa,EAAb;AACA,WAAKC,MAAL,GAAc,KAAKN,IAAL,CAAUO,IAAV,CAAe,yBAAf,CAAd;;AAEA;AACA,UAAI,KAAKP,IAAL,CAAUQ,MAAd,EAAsB;AACpB,aAAKR,IAAL,CAAUS,IAAV,CAAe,YAAf;AACD;;AAED,WAAKC,yBAAL;AACA,WAAKC,cAAL;AACD;;AAED;;;;;;;;AAzFU;AAAA;AAAA,+BA+FDC,KA/FC,EA+FM;AACd,aAAKC,mBAAL,CAAyBD,KAAzB;;AAEA,aAAKN,MAAL,GAAc,KAAKA,MAAL,CAAYQ,GAAZ,CAAgBF,KAAhB,CAAd;;AAEA,eAAO,IAAP;AACD;AArGS;AAAA;AAAA,kCAuGEA,KAvGF,EAuGS;AACjB,aAAKN,MAAL,GAAc,KAAKA,MAAL,CAAYS,MAAZ,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUL,UAAUK,CAApB;AAAA,SAAnB,CAAd;;AAEA,eAAO,IAAP;AACD;;AAED;;;;;;AA7GU;AAAA;AAAA,oCAkHI;AAAA;;AACZ,YAAMC,OAAO,IAAb;AAAA,YAAmBC,UAAU,EAA7B;AACA,YAAI9B,SAAS6B,KAAKxB,OAAL,CAAaL,MAAb,CAAoBC,OAAjC;;AAEA,aAAKgB,MAAL,CAAYc,IAAZ,CAAiB,UAACJ,CAAD,EAAIJ,KAAJ,EAAc;AAC7B,cAAMS,SAAS,OAAKC,QAAL,CAAcV,KAAd,CAAf;;AAEA,cAAI,CAACS,MAAL,EAAa;AACXF,oBAAQI,IAAR,CAAaX,KAAb;;AAEA;AACA,gBAAIvB,MAAJ,EAAY;AACV;AACA,kBAAImC,SAAS1C,EAAE8B,KAAF,CAAb;;AAEA,kBAAI,CAACY,OAAOC,EAAP,CAAU,UAAV,CAAL,EAA4B;AAC1BD,yBAASA,OAAOE,OAAP,CAAe,MAAMF,OAAOf,IAAP,CAAY,IAAZ,CAAN,GAA0B,6BAAzC,CAAT;AACD;;AAED3B,gBAAE,YAAF,EAAgB6C,OAAhB,CAAwB;AACtBC,2BAAWJ,OAAOjC,MAAP,GAAgBsC,GAAhB,GAAsBX,KAAKxB,OAAL,CAAaL,MAAb,CAAoBE;AAD/B,eAAxB,EAEG2B,KAAKxB,OAAL,CAAaL,MAAb,CAAoBG,QAFvB;;AAIAH,uBAAS,KAAT;AACD;AACF;AACF,SAtBD;;AAwBA,eAAO8B,QAAQX,MAAR,IAAkB,CAAzB;AACD;;AAED;;;;;;;AAjJU;AAAA;AAAA,+BAuJDI,KAvJC,EAuJM;AACd,YAAI,CAACA,KAAL,EAAY;AACV,iBAAO,IAAP;AACD;;AAED,YAAIkB,SAAShD,EAAE8B,KAAF,CAAb;AACA,YAAImB,aAAJ;AACA,YAAIV,SAAS,IAAb;;AAEA,YAAI,KAAKrB,IAAL,CAAUQ,MAAd,EAAsB;AACpB,eAAKR,IAAL,CAAUgC,QAAV,CAAmB,eAAnB;AACD;;AAED;AACA,aAAKC,YAAL,CAAkB,KAAKnC,UAAvB,EAAmCgC,MAAnC;AACAlB,cAAMsB,iBAAN,CAAwB,EAAxB;;AAEA;AACA,YAAMC,YAAY,CAACL,OAAOrB,IAAP,CAAY,eAAZ,KAAgC,EAAjC,EAAqC2B,KAArC,CAA2C,GAA3C,CAAlB;;AAEA,YAAIN,OAAOO,GAAP,OAAiB,EAAjB,IAAuBF,UAAU3B,MAArC,EAA6C;AAC3C,eAAK,IAAIQ,CAAT,IAAcmB,SAAd,EAAyB;AACvB,gBAAMG,YAAY,KAAKlC,UAAL,CAAgB+B,UAAUnB,CAAV,CAAhB,CAAlB;;AAEA,gBAAIsB,aAAa,CAACA,UAAUC,OAAV,CAAkBT,OAAOO,GAAP,EAAlB,EAAgCP,MAAhC,CAAlB,EAA2D;AACzDC,qBAAOO,UAAU5C,OAAV,CAAkB8C,MAAzB;;AAEA,kBAAI,OAAQT,IAAR,KAAiB,UAArB,EAAiC;AAC/BA,uBAAOA,KAAKD,MAAL,EAAa,IAAb,CAAP;AACD;;AAED;AACAlB,oBAAMsB,iBAAN,CAAwB,KAAKvC,OAAL,CAAa8C,EAAb,CAAgB,0CAAhB,CAAxB;;AAEApB,uBAAS,KAAT;;AAEA;AACD;AACF;AACF;;AAED;AACA,YAAIA,MAAJ,EAAY;AACVA,mBAAST,MAAM8B,aAAN,EAAT;AACD;;AAED,YAAIrB,MAAJ,EAAY;AACV,iBAAO,IAAP;AACD;;AAED,YAAMsB,QAAQ/B,MAAMgC,QAApB;;AAEA;AACA,YAAID,MAAME,YAAV,EAAwB;AACtBd,iBAAO,KAAKpC,OAAL,CAAa8C,EAAb,CAAgB,0CAAhB,CAAP;AACA,eAAK9C,OAAL,CAAamD,OAAb,KAAyBC,QAAQC,IAAR,qBAA+BlB,OAAOrB,IAAP,CAAY,MAAZ,CAA/B,qCAAzB,GAAgH,IAAhH;AACA,eAAKwB,YAAL,CAAkB,KAAKlC,WAAvB,EAAoC+B,MAApC,EAA4CC,IAA5C;AACA,iBAAO,KAAP;AACD;;AAED;AACA,aAAK,IAAIkB,GAAT,IAAgBN,KAAhB,EAAuB;AACrB,cAAIA,MAAMM,GAAN,MAAe,IAAnB,EAAyB;AACvB,gBAAMC,OAAOC,QAAQF,GAAR,EAAa,GAAb,CAAb;;AAEAlB,mBAAOD,OAAOrB,IAAP,CAAY,UAAUyC,IAAV,GAAiB,UAA7B,KAA4C,KAAKvD,OAAL,CAAa8C,EAAb,CAAgB,gCAAgCU,QAAQF,GAAR,EAAa,GAAb,CAAhD,CAAnD;;AAEA,iBAAKtD,OAAL,CAAamD,OAAb,KAAyBC,QAAQC,IAAR,qBAA+BlB,OAAOrB,IAAP,CAAY,MAAZ,CAA/B,yBAAsEyC,IAAtE,OAAzB,GAA0G,IAA1G;;AAEA;AACD;AACF;;AAED,aAAKjB,YAAL,CAAkB,KAAKpC,UAAvB,EAAmCiC,MAAnC,EAA2CC,IAA3C;;AAEA,eAAOV,MAAP;AACD;;AAED;;;;;;;;;;AArOU;AAAA;AAAA,mCA8OGsB,KA9OH,EA8OUb,MA9OV,EA8O+B;AAAA,YAAbC,IAAa,uEAAN,IAAM;;AACvC,aAAKpC,OAAL,CAAayD,OAAb,CAAqB,qBAArB,EAA4C,EAACT,YAAD,EAAQb,cAAR,EAAgBC,UAAhB,EAAsB7C,YAAY,IAAlC,EAA5C;;AAEA4C,eAAOsB,OAAP,CAAe;AACbF,gBAAM,sBAAsBP,KADf;AAEb/B,iBAAOkB,MAFM;AAGba,iBAAOA,KAHM;AAIbZ,gBAAMA;AAJO,SAAf;;AAOA,eAAO,IAAP;AACD;;AAED;;;;;;;;AA3PU;AAAA;AAAA,qCAkQKsB,QAlQL,EAkQe;AACvB,aAAK1D,OAAL,CAAayD,OAAb,CAAqB,mBAArB,EAA0C,EAACC,kBAAD,EAA1C;;AAEA,eAAO,IAAP;AACD;;AAED;;;;;;;;;AAxQU;AAAA;AAAA,mCAgRGC,IAhRH,EAgRShB,SAhRT,EAgRoB5C,OAhRpB,EAgR6B;AACrCA,kBAAUA,WAAW,EAArB;;AAEA,aAAKU,UAAL,CAAgBkD,IAAhB,IAAwB;AACtBf,mBAASD,SADa;AAEtB5C,mBAASA;AAFa,SAAxB;;AAKA,eAAO,IAAP;AACD;;AAED;;;;AA3RU;AAAA;AAAA,uCA8RO;AAAA;;AACf,aAAKM,IAAL,CAAUuD,EAAV,CAAa,QAAb,EAAuB,iBAAS;AAC9B,cAAI,CAAC,OAAKC,WAAL,EAAL,EAAyB;AACvBC,kBAAMC,eAAN;AACAD,kBAAME,cAAN;;AAEA,mBAAO,KAAP;AACD;;AAED,iBAAK3D,IAAL,CAAUoD,OAAV,CAAkB,0BAAlB;;AAEA,iBAAO,IAAP;AACD,SAXD;;AAaA,aAAKvC,mBAAL,CAAyB,KAAKP,MAA9B;AACD;AA7SS;AAAA;AAAA,0CA+SUwB,MA/SV,EA+SkB;AAAA;;AAC1BhD,UAAEsC,IAAF,CAAO,KAAK1B,OAAL,CAAaN,MAApB,EAA4B,UAAC4B,CAAD,EAAIyC,KAAJ,EAAc;AACxC3B,iBAAOyB,EAAP,CAAUE,KAAV,EAAiB,UAACxC,CAAD,EAAO;AACtB,mBAAKK,QAAL,CAAcL,EAAE2C,aAAhB;AACD,WAFD;AAGD,SAJD;AAKD;;AAED;;;;AAvTU;AAAA;AAAA,kDA0TkB;AAC1B,aAAK,IAAIN,IAAT,IAAiBvE,QAAjB,EAA2B;AACzB,cAAIA,SAAS8E,cAAT,CAAwBP,IAAxB,CAAJ,EAAmC;AACjC,iBAAKQ,YAAL,CAAkBR,IAAlB,EAAwBvE,SAASuE,IAAT,CAAxB;AACD;AACF;AACF;AAhUS;;AAAA;AAAA;;AAmUZ,WAASH,OAAT,CAAiBY,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,WAAOD,IAAIE,OAAJ,CAAY,iBAAZ,SAAoCD,GAApC,SAA6CE,WAA7C,EAAP;AACD;;AAEDnF,WAASoF,QAAT,GAAoB,UAASC,KAAT,EAAgB3E,OAAhB,EAAyB;AAC3C,QAAM4E,QAAQ,IAAIC,MAAJ,CAAW,8BAAX,EAA2C,GAA3C,CAAd;AACA,WAAO,CAACD,MAAME,IAAN,CAAWH,KAAX,CAAR;AACD,GAHD;;AAKArF,WAASyF,OAAT,GAAmB,UAASJ,KAAT,EAAgB3E,OAAhB,EAAyB;AAC1C,QAAM4E,QAAQ,wBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKArF,WAAS0F,KAAT,GAAiB,UAASL,KAAT,EAAgB3E,OAAhB,EAAyB;AACxC2E,YAAQM,SAASC,OAAT,CAAiBP,KAAjB,CAAR;AACA,QAAMC,QAAQ,yEAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAJD;;AAMArF,WAAS6F,GAAT,GAAe,UAASR,KAAT,EAAgB3E,OAAhB,EAAyB;AACtC2E,YAAQM,SAASC,OAAT,CAAiBP,KAAjB,CAAR;AACA,QAAMC,QAAQ,meAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAJD;;AAMArF,WAAS8F,KAAT,GAAiB,UAAST,KAAT,EAAgB3E,OAAhB,EAAyB;AACxC,QAAM4E,QAAQ,gBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKArF,WAAS+F,KAAT,GAAiB,UAASV,KAAT,EAAgB3E,OAAhB,EAAyB;AACxC,QAAM4E,QAAQ,yBAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKA;;;AAGArF,WAASgG,UAAT,GAAsB,UAASX,KAAT,EAAgB3E,OAAhB,EAAyB;AAC7C,QAAM4E,QAAQ,0NAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKArF,WAASiG,EAAT,GAAc,UAASZ,KAAT,EAAgB3E,OAAhB,EAAyB;AACrC,QAAM4E,QAAQ,gGAAd;AACA,WAAOA,MAAME,IAAN,CAAWH,KAAX,CAAP;AACD,GAHD;;AAKAa,SAAOjG,iBAAP,GAA2BA,iBAA3B;AAED,CAtXA,EAsXEkG,MAtXF","file":"validation.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later;\n */\n\n/**\n * PhoenixValidation\n */\n;(function($) {\n  \"use strict\";\n\n  /**\n   * Default handlers\n   *\n   * @type {Object}\n   */\n  const handlers = {};\n\n  /**\n   * Class init.\n   *\n   * @param {jQuery} element\n   * @param {Object} options\n   * @constructor\n   */\n  class PhoenixValidation extends PhoenixJQueryPlugin {\n    static get is() { return 'Validation' }\n\n    static get pluginName() { return 'validation' }\n\n    static get pluginClass() { return PhoenixValidationElement }\n\n    static get proxies() {\n      return {\n        validation: 'createPlugin'\n      };\n    }\n  }\n\n  class PhoenixValidationElement {\n    static get defaultOptions() {\n      return {\n        events: ['change'],\n        scroll: {\n          enabled: true,\n          offset: -100,\n          duration: 1000\n        }\n      }\n    }\n\n    constructor(element, options, phoenix) {\n      /**\n       * Validate success.\n       *\n       * @type {string}\n       */\n      this.STATE_SUCCESS = 'success';\n\n      /**\n       * Validate fail.\n       *\n       * @type {string}\n       */\n      this.STATE_FAIL = 'fail';\n\n      /**\n       * Pass or required with value.\n       *\n       * @type {string}\n       */\n      this.STATE_NONE = 'none';\n\n      /**\n       * Required with no value.\n       *\n       * @type {string}\n       */\n      this.STATE_EMPTY = 'empty';\n\n      this.form = element || $;\n      this.phoenix = phoenix;\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\n      this.validators = [];\n      this.handlers = {};\n      this.theme = {};\n      this.inputs = this.form.find('input, select, textarea');\n\n      // Stop native validation\n      if (this.form.length) {\n        this.form.attr('novalidate');\n      }\n\n      this.registerDefaultValidators();\n      this.registerEvents();\n    }\n\n    /**\n     * Add field.\n     *\n     * @param {*} input\n     * @returns {PhoenixValidationElement}\n     */\n    addField(input) {\n      this.registerInputEvents(input);\n\n      this.inputs = this.inputs.add(input);\n\n      return this;\n    }\n\n    removeField(input) {\n      this.inputs = this.inputs.filter((i, e) => input !== e);\n\n      return this;\n    }\n\n    /**\n     * Validate All.\n     *\n     * @returns {boolean}\n     */\n    validateAll() {\n      const self = this, inValid = [];\n      let scroll = self.options.scroll.enabled;\n\n      this.inputs.each((i, input) => {\n        const result = this.validate(input);\n\n        if (!result) {\n          inValid.push(input);\n\n          // Scroll\n          if (scroll) {\n            // Find displayed element\n            let target = $(input);\n\n            if (!target.is(':visible')) {\n              target = target.parents('#' + target.attr('id') + '-control, [data-form-group]');\n            }\n\n            $('html, body').animate({\n              scrollTop: target.offset().top + self.options.scroll.offset\n            }, self.options.scroll.duration);\n\n            scroll = false;\n          }\n        }\n      });\n\n      return inValid.length <= 0;\n    }\n\n    /**\n     * Validate.\n     *\n     * @param {jQuery} input\n     * @returns {boolean}\n     */\n    validate(input) {\n      if (!input) {\n        return true;\n      }\n\n      let $input = $(input);\n      let help;\n      let result = true;\n\n      if (this.form.length) {\n        this.form.addClass('was-validated');\n      }\n\n      // Clear state\n      this.showResponse(this.STATE_NONE, $input);\n      input.setCustomValidity('');\n\n      // Check custom validity\n      const validates = ($input.attr('data-validate') || '').split('|');\n\n      if ($input.val() !== '' && validates.length) {\n        for (let i in validates) {\n          const validator = this.validators[validates[i]];\n\n          if (validator && !validator.handler($input.val(), $input)) {\n            help = validator.options.notice;\n\n            if (typeof  help === 'function') {\n              help = help($input, this);\n            }\n\n            // Set failure value as :invalid\n            input.setCustomValidity(this.phoenix.__('phoenix.message.validation.type.mismatch'));\n\n            result = false;\n\n            break;\n          }\n        }\n      }\n\n      // Check native validity\n      if (result) {\n        result = input.checkValidity();\n      }\n\n      if (result) {\n        return true;\n      }\n\n      const state = input.validity;\n\n      // Handle required message.\n      if (state.valueMissing) {\n        help = this.phoenix.__('phoenix.message.validation.value.missing');\n        this.phoenix.isDebug() ? console.warn(`[Debug] Field: ${$input.attr('name')} validity state: value-missing.`) : null;\n        this.showResponse(this.STATE_EMPTY, $input, help);\n        return false;\n      }\n\n      // Handle types message\n      for (let key in state) {\n        if (state[key] === true) {\n          const type = camelTo(key, '-');\n\n          help = $input.attr('data-' + type + '-message') || this.phoenix.__('phoenix.message.validation.' + camelTo(key, '.'));\n\n          this.phoenix.isDebug() ? console.warn(`[Debug] Field: ${$input.attr('name')} validity state: ${type}.`) : null;\n\n          break;\n        }\n      }\n\n      this.showResponse(this.STATE_FAIL, $input, help);\n\n      return result;\n    }\n\n    /**\n     * Show response on input.\n     *\n     * @param {string}      state\n     * @param {jQuery}      $input\n     * @param {string|null} help\n     *\n     * @returns {PhoenixValidationElement}\n     */\n    showResponse(state, $input, help = null) {\n      this.phoenix.trigger('validation.response', {state, $input, help, validation: this});\n\n      $input.trigger({\n        type: 'phoenix.validate.' + state,\n        input: $input,\n        state: state,\n        help: help\n      });\n\n      return this;\n    }\n\n    /**\n     * Remove responses.\n     *\n     * @param {jQuery} $element\n     *\n     * @returns {PhoenixValidationElement}\n     */\n    removeResponse($element) {\n      this.phoenix.trigger('validation.remove', {$element});\n\n      return this;\n    }\n\n    /**\n     * Add validator handler.\n     *\n     * @param name\n     * @param validator\n     * @param options\n     * @returns {PhoenixValidation}\n     */\n    addValidator(name, validator, options) {\n      options = options || {};\n\n      this.validators[name] = {\n        handler: validator,\n        options: options\n      };\n\n      return this;\n    }\n\n    /**\n     * Register events.\n     */\n    registerEvents() {\n      this.form.on('submit', event => {\n        if (!this.validateAll()) {\n          event.stopPropagation();\n          event.preventDefault();\n\n          return false;\n        }\n\n        this.form.trigger('phoenix.validate.success');\n\n        return true;\n      });\n\n      this.registerInputEvents(this.inputs);\n    }\n\n    registerInputEvents($input) {\n      $.each(this.options.events, (i, event) => {\n        $input.on(event, (e) => {\n          this.validate(e.currentTarget);\n        });\n      });\n    }\n\n    /**\n     * Register default validators.\n     */\n    registerDefaultValidators() {\n      for (let name in handlers) {\n        if (handlers.hasOwnProperty(name)) {\n          this.addValidator(name, handlers[name]);\n        }\n      }\n    }\n  }\n\n  function camelTo(str, sep) {\n    return str.replace(/([a-z])([A-Z])/g, `$1${sep}$2`).toLowerCase();\n  }\n\n  handlers.username = function(value, element) {\n    const regex = new RegExp(\"[\\<|\\>|\\\"|\\'|\\%|\\;|\\(|\\)|\\&]\", \"i\");\n    return !regex.test(value);\n  };\n\n  handlers.numeric = function(value, element) {\n    const regex = /^(\\d|-)?(\\d|,)*\\.?\\d*$/;\n    return regex.test(value);\n  };\n\n  handlers.email = function(value, element) {\n    value = punycode.toASCII(value);\n    const regex = /^[a-zA-Z0-9.!#$%&â€™*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return regex.test(value);\n  };\n\n  handlers.url = function(value, element) {\n    value = punycode.toASCII(value);\n    const regex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i;\n    return regex.test(value);\n  };\n\n  handlers.alnum = function(value, element) {\n    const regex = /^[a-zA-Z0-9]*$/;\n    return regex.test(value);\n  };\n\n  handlers.color = function(value, element) {\n    const regex = /^#(?:[0-9a-f]{3}){1,2}$/;\n    return regex.test(value);\n  };\n\n  /**\n   * @see  http://www.virtuosimedia.com/dev/php/37-tested-php-perl-and-javascript-regular-expressions\n   */\n  handlers.creditcard = function(value, element) {\n    const regex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|622((12[6-9]|1[3-9][0-9])|([2-8][0-9][0-9])|(9(([0-1][0-9])|(2[0-5]))))[0-9]{10}|64[4-9][0-9]{13}|65[0-9]{14}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})*$/;\n    return regex.test(value);\n  };\n\n  handlers.ip = function(value, element) {\n    const regex = /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/;\n    return regex.test(value);\n  };\n\n  window.PhoenixValidation = PhoenixValidation;\n\n})(jQuery);\n"]}