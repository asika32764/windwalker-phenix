{"version":3,"sources":["phoenix.js","plugin.js","helper.js","ui.js","router.js","ajax.js","crypto.js","translator.js","legacy.js"],"names":["PhoenixCore","options","$","extend","constructor","defaultOptions","_listeners","waits","wait","resolve","completed","then","trigger","plugin","Array","isArray","forEach","use","p","is","undefined","Error","name","PhoenixPlugin","instance","install","boot","uninstall","event","handler","push","args","r","listeners","listener","data","console","debug","value","document","removeData","type","uri","callback","d","Deferred","promise","when","self","fn","ele","window","jQuery","phoenix","toLowerCase","createProxies","resetProxies","created","ready","on","loaded","proxies","hasOwnProperty","origin","Object","defineProperties","get","set","PhoenixJQueryPlugin","selector","mainSelector","pluginName","pluginClass","PhoenixHelper","confirm","keepAlive","stopKeepAlive","loadScript","aliveHandle","message","confirmed","urls","promises","asset","getScript","url","addUriBase","cache","substr","time","setInterval","clearInterval","PhoenixUI","messageSelector","addMessage","messageContainer","showValidateResponse","validation","state","$input","help","removeValidateResponse","$element","$control","icon","msg","container","button","showClass","attr","hideClass","find","iconShowClass","iconHideClass","hasClass","removeClass","addClass","hide","show","PhoenixRouter","e","route","query","addQuery","param","test","history","pushState","title","params","replaceState","back","forward","num","go","addRoute","PhoenixAjax","config","customMethod","headers","GET","POST","PUT","PATCH","DELETE","HEAD","OPTIONS","_global","request","method","toUpperCase","indexOf","_method","ajax","clone","PhoenixCrypto","string","btoa","atob","key","code","split","map","c","i","charCodeAt","keyCharAt","join","base64Encode","base64Decode","String","fromCharCode","Math","floor","length","b","a","random","toString","replace","encrypt","decrypt","uuid4","md5","Crypto","safe_add","x","y","lsw","msw","bit_rol","cnt","md5_cmn","q","s","t","md5_ff","md5_gg","md5_hh","md5_ii","binl_md5","len","olda","oldb","oldc","oldd","binl2rstr","input","output","rstr2binl","rstr_md5","rstr_hmac_md5","bkey","ipad","opad","hash","concat","rstr2hex","hex_tab","charAt","str2rstr_utf8","decodeURIComponent","encodeURIComponent","raw_md5","hex_md5","raw_hmac_md5","k","hex_hmac_md5","raw","define","amd","module","exports","prototype","PhoenixTranslator","trans","__","addLanguage","keys","text","normalize","sprintf","langs","translate","apply","PhoenixLegacy","Theme","UI","formInited","gridInited","warn","Grid","obj"],"mappings":"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","file":"phoenix.js","sourcesContent":["/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n($ => {\r\n  class PhoenixCore {\r\n    /**\r\n     * Default options.\r\n     * @returns {Object}\r\n     */\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    constructor(options = {}) {\r\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\r\n      this._listeners = {};\r\n      this.waits = [];\r\n\r\n      // Wait dom ready\r\n      this.wait(resolve => {\r\n        $(() => resolve());\r\n      });\r\n\r\n      // Ready\r\n      $(() => {\r\n        this.completed().then(() => this.trigger('loaded'));\r\n      });\r\n    }\r\n\r\n    use(plugin) {\r\n      if (Array.isArray(plugin)) {\r\n        plugin.forEach(p => this.use(p));\r\n        return this;\r\n      }\r\n\r\n      if (plugin.is === undefined) {\r\n        throw new Error(`Plugin: ${plugin.name} must instance of : ${PhoenixPlugin.name}`);\r\n      }\r\n\r\n      const instance = plugin.install(this);\r\n      instance.boot(this);\r\n\r\n      this.trigger('plugin.installed', instance);\r\n\r\n      return this;\r\n    }\r\n\r\n    detach(plugin) {\r\n      if (!plugin instanceof PhoenixPlugin) {\r\n        throw new Error('Plugin must instance of : ' + PhoenixPlugin.name);\r\n      }\r\n\r\n      plugin.uninstall(this);\r\n\r\n      this.trigger('plugin.uninstalled', plugin);\r\n\r\n      return this;\r\n    }\r\n\r\n    on(event, handler) {\r\n      if (this._listeners[event] === undefined) {\r\n        this._listeners[event] = [];\r\n      }\r\n\r\n      this._listeners[event].push(handler);\r\n\r\n      return this;\r\n    }\r\n\r\n    off(event) {\r\n      delete this._listeners[event];\r\n\r\n      return this;\r\n    }\r\n\r\n    trigger(event, args) {\r\n      const r = [];\r\n      this.listeners(event).forEach(listener => {\r\n        r.push(listener(args));\r\n      });\r\n\r\n      if (this.data('windwalker.debug')) {\r\n        console.debug(`[Phoenix Event] ${event}`, args);\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    listeners(event) {\r\n      return this._listeners[event] === undefined ? [] : this._listeners[event];\r\n    }\r\n\r\n    data(name, value) {\r\n      if (value === undefined) {\r\n        return $(document).data(name);\r\n      }\r\n\r\n      $(document).data(name, value);\r\n\r\n      return this;\r\n    }\r\n\r\n    removeData(name) {\r\n      $(document).removeData(name);\r\n\r\n      return this;\r\n    }\r\n\r\n    uri(type) {\r\n      return this.data('phoenix.uri')[type];\r\n    }\r\n\r\n    asset(type) {\r\n      return this.uri('asset')[type];\r\n    }\r\n\r\n    wait(callback) {\r\n      const d = $.Deferred();\r\n\r\n      this.waits.push(d);\r\n\r\n      callback(() => d.resolve());\r\n\r\n      return d;\r\n    }\r\n\r\n    completed() {\r\n      const promise = $.when(...this.waits);\r\n\r\n      this.waits = [];\r\n\r\n      return promise;\r\n    }\r\n\r\n    plugin(name, plugin) {\r\n      const self = this;\r\n      $.fn[name] = function (...args) {\r\n        if (!this.data('phoenix.' + name)) {\r\n          const instance = new plugin(this, ...args);\r\n          this.data('phoenix.' + name, instance);\r\n          self.trigger('jquery.plugin.created', {name: name, ele: this, instance: instance});\r\n        }\r\n\r\n        const instance = this.data('phoenix.' + name);\r\n\r\n        self.trigger('jquery.plugin.get', {name: name, ele: this, instance: instance});\r\n\r\n        return instance;\r\n      };\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  window.PhoenixCore = PhoenixCore;\r\n})(jQuery);\r\n","/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n($ => {\r\n  class PhoenixPlugin {\r\n    static get is() {\r\n      throw new Error('Please add \"is\" property to Phoenix Plugin: ' + this.name);\r\n    }\r\n\r\n    static get proxies() {\r\n      return {};\r\n    }\r\n\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    get options() {\r\n      return this.phoenix.options[this.constructor.is.toLowerCase()];\r\n    }\r\n\r\n    static install(phoenix) {\r\n      const self = new this;\r\n\r\n      this.createProxies(phoenix, self);\r\n      return self;\r\n    }\r\n\r\n    static uninstall(phoenix) {\r\n      const self = new this(phoenix);\r\n\r\n      this.resetProxies(phoenix, self);\r\n    }\r\n\r\n    constructor() {\r\n      //\r\n    }\r\n\r\n    boot(phoenix) {\r\n      this.phoenix = phoenix;\r\n\r\n      const name = this.constructor.is.toLowerCase();\r\n\r\n      // Merge to global options\r\n      this.phoenix.options[name] = $.extend(\r\n        true,\r\n        {},\r\n        this.constructor.defaultOptions,\r\n        this.phoenix.options[name]\r\n      );\r\n\r\n      // Created hook\r\n      this.created();\r\n\r\n      // DOM Ready hook\r\n      $(() => this.ready());\r\n\r\n      // Phoenix onload hook\r\n      this.phoenix.on('loaded', this.loaded);\r\n    }\r\n\r\n    created() {\r\n      //\r\n    }\r\n\r\n    ready() {\r\n      //\r\n    }\r\n\r\n    loaded() {\r\n      //\r\n    }\r\n\r\n    static createProxies(phoenix, plugin) {\r\n      if (plugin.constructor.proxies === undefined) {\r\n        return this;\r\n      }\r\n\r\n      this.resetProxies(phoenix, plugin);\r\n\r\n      phoenix[plugin.constructor.is] = plugin;\r\n\r\n      const proxies = plugin.constructor.proxies;\r\n\r\n      for (let name in proxies) {\r\n        if (!proxies.hasOwnProperty(name)) {\r\n          continue;\r\n        }\r\n\r\n        const origin = proxies[name];\r\n\r\n        if (phoenix[name] !== undefined) {\r\n          throw new Error(`Property: ${name} has exists in Phoenix instance.`);\r\n        }\r\n\r\n        if (typeof origin === 'function') {\r\n          phoenix[name] = origin;\r\n        } else if (plugin[origin] !== undefined) {\r\n          if (typeof plugin[origin] === 'function') {\r\n            phoenix[name] = function (...args) {\r\n              return plugin[origin](...args);\r\n            };\r\n          } else {\r\n            Object.defineProperties(phoenix, name, {\r\n              get: () => plugin[origin],\r\n              set: value => {\r\n                plugin[origin] = value;\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          throw new Error(`Proxy property: \"${origin}\" not found in Plugin: ${plugin.constructor.name}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    static resetProxies(phoenix, plugin) {\r\n      const name = typeof plugin === 'string' ? plugin : plugin.constructor.is;\r\n\r\n      if (phoenix[name]) {\r\n        plugin = phoenix[name];\r\n      }\r\n\r\n      if (plugin.constructor.proxies === undefined) {\r\n        return;\r\n      }\r\n\r\n      for (let name in plugin.constructor.proxies) {\r\n        delete phoenix[name];\r\n      }\r\n\r\n      delete phoenix[plugin.constructor.is];\r\n    }\r\n  }\r\n\r\n  class PhoenixJQueryPlugin extends PhoenixPlugin {\r\n    /**\r\n     * Plugin name.\r\n     * @returns {string|null}\r\n     */\r\n    static get pluginName() {\r\n      throw new Error('Please provide a plugin name.');\r\n    }\r\n\r\n    static get pluginClass() {\r\n      throw new Error('Please provide a class as plugin instance.');\r\n    }\r\n\r\n    static install(phoenix) {\r\n      const instance = super.install(phoenix);\r\n\r\n      phoenix.plugin(this.pluginName, this.pluginClass);\r\n\r\n      return instance;\r\n    }\r\n\r\n    createPlugin(selector, options = {}, ...args) {\r\n      options.mainSelector = selector;\r\n\r\n      return $(selector)[this.constructor.pluginName](options, this.phoenix, ...args);\r\n    }\r\n  }\r\n\r\n  window.PhoenixPlugin = PhoenixPlugin;\r\n  window.PhoenixJQueryPlugin = PhoenixJQueryPlugin;\r\n})(jQuery);\r\n","/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n(($) => {\r\n  class PhoenixHelper extends PhoenixPlugin {\r\n    static get is() { return 'Helper'; }\r\n\r\n    static get proxies() {\r\n      return {\r\n        confirm: 'confirm',\r\n        keepAlive: 'keepAlive',\r\n        stopKeepAlive: 'stopKeepAlive',\r\n        loadScript: 'loadScript'\r\n      };\r\n    }\r\n\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.aliveHandle = null;\r\n    }\r\n\r\n    /**\r\n     * Confirm popup.\r\n     *\r\n     * @param {string}   message\r\n     * @param {Function} callback\r\n     */\r\n    confirm(message, callback) {\r\n      message = message || 'Are you sure?';\r\n\r\n      const confirmed = confirm(message);\r\n\r\n      callback(confirmed);\r\n\r\n      return confirmed;\r\n    }\r\n\r\n    loadScript(urls) {\r\n      if (typeof urls === 'string') {\r\n        urls = [urls];\r\n      }\r\n\r\n      const promises = [];\r\n      const data = {};\r\n      data[this.phoenix.asset('version')] = '1';\r\n\r\n      urls.forEach(url => {\r\n        promises.push(\r\n          $.getScript({\r\n            url: this.addUriBase(url),\r\n            cache: true,\r\n            data\r\n          })\r\n        )\r\n      });\r\n\r\n      return $.when(...promises);\r\n    }\r\n\r\n    addUriBase(uri, type = 'path') {\r\n      if (uri.substr(0, 2) === '/' || uri.substr(0, 4) === 'http') {\r\n        return uri;\r\n      }\r\n\r\n      return this.phoenix.asset(type) + '/' + uri;\r\n    }\r\n\r\n    /**\r\n     * Keep alive.\r\n     *\r\n     * @param {string} url\r\n     * @param {Number} time\r\n     *\r\n     * @return {number}\r\n     */\r\n    keepAlive(url, time) {\r\n      return this.aliveHandle = window.setInterval(() => $.get('/'), time);\r\n    }\r\n\r\n    /**\r\n     * Stop keep alive\r\n     */\r\n    stopKeepAlive() {\r\n      clearInterval(this.aliveHandle);\r\n    }\r\n  }\r\n\r\n  window.PhoenixHelper = PhoenixHelper;\r\n})(jQuery);\r\n","/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n(($) => {\r\n  class PhoenixUI extends PhoenixPlugin {\r\n    static get is() { return 'UI'; }\r\n\r\n    static get defaultOptions() {\r\n      return {\r\n        messageSelector: '.message-wrap'\r\n      };\r\n    }\r\n\r\n    static get proxies() {\r\n      return {\r\n        addMessage: 'renderMessage'\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.aliveHandle = null;\r\n    }\r\n\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.messageContainer = $(this.options.messageSelector);\r\n\r\n      this.phoenix.on('validation.response', event => {\r\n        this.showValidateResponse(event.validation, event.state, event.$input, event.help);\r\n      });\r\n\r\n      this.phoenix.on('validation.remove', event => {\r\n        this.removeValidateResponse(event.$element);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Show Validation response.\r\n     *\r\n     * @param {PhoenixValidation} validation\r\n     * @param {string}            state\r\n     * @param {jQuery}            $input\r\n     * @param {string}            help\r\n     */\r\n    showValidateResponse(validation, state, $input, help) {\r\n      throw new Error('Please implement this method.');\r\n    }\r\n\r\n    /**\r\n     * Add validate effect to input, just override this method to fit other templates.\r\n     *\r\n     * @param {jQuery} $control\r\n     * @param {jQuery} $input\r\n     * @param {string} icon\r\n     * @param {string} type\r\n     * @param {string} help\r\n     */\r\n    addValidateResponse($control, $input, icon, type, help) {\r\n      throw new Error('Please implement this method.');\r\n    }\r\n\r\n    /**\r\n     * Remove validation response.\r\n     *\r\n     * @param {jQuery} $element\r\n     */\r\n    removeValidateResponse($element) {\r\n      throw new Error('Please implement this method.');\r\n    }\r\n\r\n    /**\r\n     * Render message.\r\n     *\r\n     * @param {string|Array} msg\r\n     * @param {string}       type\r\n     */\r\n    renderMessage(msg, type) {\r\n      throw new Error('Please implement this method.');\r\n    }\r\n\r\n    /**\r\n     * Remove all messages.\r\n     */\r\n    removeMessages() {\r\n      throw new Error('Please implement this method.');\r\n    }\r\n\r\n    /**\r\n     * Toggle filter bar.\r\n     *\r\n     * @param {jQuery} container\r\n     * @param {jQuery} button\r\n     */\r\n    toggleFilter(container, button) {\r\n      const showClass = button.attr('data-class-show') || 'btn-primary';\r\n      const hideClass = button.attr('data-class-hide') || 'btn-default';\r\n\r\n      const icon = button.find('span.filter-button-icon');\r\n      const iconShowClass = icon.attr('data-class-show') || 'fa fa-angle-up';\r\n      const iconHideClass = icon.attr('data-class-hide') || 'fa fa-angle-down';\r\n\r\n      if (container.hasClass('shown')) {\r\n        button.removeClass(showClass).addClass(hideClass);\r\n        container.hide('fast');\r\n        container.removeClass('shown');\r\n\r\n        icon.removeClass(iconShowClass).addClass(iconHideClass);\r\n      } else {\r\n        button.removeClass(hideClass).addClass(showClass);\r\n        container.show('fast');\r\n        container.addClass('shown');\r\n\r\n        icon.removeClass(iconHideClass).addClass(iconShowClass);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Confirm popup.\r\n     *\r\n     * TODO: Move to core.\r\n     *\r\n     * @param {string}   message\r\n     * @param {Function} callback\r\n     */\r\n    confirm(message, callback) {\r\n      message = message || 'Are you sure?';\r\n\r\n      const confirmed = confirm(message);\r\n\r\n      callback(confirmed);\r\n\r\n      return confirmed;\r\n    }\r\n\r\n    /**\r\n     * Keep alive.\r\n     *\r\n     * @param {string} url\r\n     * @param {Number} time\r\n     *\r\n     * @return {number}\r\n     */\r\n    keepAlive(url, time) {\r\n      return this.aliveHandle = window.setInterval(() => $.get('/'), time);\r\n    }\r\n\r\n    stopKeepAlive() {\r\n      clearInterval(this.aliveHandle);\r\n    }\r\n  }\r\n\r\n  window.PhoenixUI = PhoenixUI;\r\n})(jQuery);\r\n","/**\r\n * Part of Phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later.\r\n */\r\n\r\n/**\r\n * Phoenix.Router\r\n */\r\n(($) => {\r\n  \"use strict\";\r\n\r\n  class PhoenixRouter extends PhoenixPlugin {\r\n    static get is() { return 'Router' }\r\n\r\n    static get proxies() {\r\n      return {\r\n        addRoute: 'add',\r\n        route: 'route'\r\n      };\r\n    }\r\n\r\n    ready() {\r\n      $(window).on('popstate', (e) => this.phoenix.on('router.popstate', e));\r\n    }\r\n\r\n    /**\r\n     * Add a route.\r\n     *\r\n     * @param route\r\n     * @param url\r\n     *\r\n     * @returns {PhoenixRouter}\r\n     */\r\n    add(route, url) {\r\n      const data = {};\r\n      data[route] = url;\r\n\r\n      this.phoenix.data('phoenix.routes', data);\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Get route.\r\n     *\r\n     * @param route\r\n     * @param query\r\n     * @returns {String|PhoenixRouter}\r\n     */\r\n    route(route, query = null) {\r\n      let url = this.phoenix.data('phoenix.routes')[route];\r\n\r\n      if (url === undefined) {\r\n        throw new Error('Route: \"' + route + '\" not found');\r\n      }\r\n\r\n      return this.addQuery(url, query);\r\n    }\r\n\r\n    addQuery(url, query = null) {\r\n      if (query === null) {\r\n        return url;\r\n      }\r\n\r\n      query = $.param(query);\r\n\r\n      return url + (/\\?/.test(url) ? '&' + query : '?' + query);\r\n    }\r\n\r\n    push(data) {\r\n      if (typeof data === 'string') {\r\n        data = {uri: data};\r\n      }\r\n\r\n      window.history.pushState(\r\n        data.state || null,\r\n        data.title || null,\r\n        data.uri || this.route(data.route, data.params)\r\n      );\r\n\r\n      return this;\r\n    }\r\n\r\n    replace(data) {\r\n      if (typeof data === 'string') {\r\n        data = {uri: data};\r\n      }\r\n\r\n      window.history.replaceState(\r\n        data.state || null,\r\n        data.title || null,\r\n        data.uri || this.route(data.route, data.params)\r\n      );\r\n\r\n      return this;\r\n    }\r\n\r\n    state() {\r\n      return window.history.state;\r\n    }\r\n\r\n    back() {\r\n      window.history.back();\r\n    }\r\n\r\n    forward() {\r\n      window.history.forward();\r\n    }\r\n\r\n    go(num) {\r\n      window.history.go(num);\r\n    }\r\n  }\r\n\r\n  window.PhoenixRouter = PhoenixRouter;\r\n})(jQuery);\r\n","/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later.\r\n */\r\n\r\n(function($) {\r\n  \"use strict\";\r\n\r\n  class PhoenixAjax extends PhoenixPlugin {\r\n    static get is() { return 'Ajax' }\r\n\r\n    static get proxies() {\r\n      return {};\r\n    }\r\n\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.$ = $;\r\n\r\n      this.config = {\r\n        customMethod: false\r\n      };\r\n      \r\n      this.data = {};\r\n      \r\n      this.headers = {\r\n        GET: {},\r\n        POST: {},\r\n        PUT: {},\r\n        PATCH: {},\r\n        DELETE: {},\r\n        HEAD: {},\r\n        OPTIONS: {},\r\n        _global: {}\r\n      }\r\n    }\r\n\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.headers._global['X-CSRF-Token'] = this.phoenix.data('csrf-token');\r\n    }\r\n\r\n    /**\r\n     * Send a GET request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    get(url, data, headers, options) {\r\n      return this.request('GET', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a POST request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    post(url, data, headers, options) {\r\n      return this.request('POST', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a PUT request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    put(url, data, headers, options) {\r\n      return this.request('PUT', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a PATCH request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    patch(url, data, headers, options) {\r\n      return this.request('PATCH', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a DELETE request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    sendDelete(url, data, headers, options) {\r\n      return this['delete'](url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a DELETE request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    'delete'(url, data, headers, options) {\r\n      return this.request('DELETE', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a HEAD request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    head(url, data, headers, options) {\r\n      return this.request('HEAD', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send a OPTIONS request.\r\n     *\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    options(url, data, headers, options) {\r\n      return this.request('OPTIONS', url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send request.\r\n     *\r\n     * @param {string} method\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    sendRequest(method, url, data, headers, options) {\r\n      return this.request(method, url, data, headers, options);\r\n    }\r\n\r\n    /**\r\n     * Send request.\r\n     *\r\n     * @param {string} method\r\n     * @param {string} url\r\n     * @param {Object} data\r\n     * @param {Object} headers\r\n     * @param {Object} options\r\n     *\r\n     * @returns {jqXHR}\r\n     */\r\n    request(method, url, data, headers, options) {\r\n      options = options || {};\r\n      headers = headers || {};\r\n      data = data || {};\r\n      url = url || '';\r\n\r\n      if (typeof url === 'object') {\r\n        options = url;\r\n        url = options.url;\r\n      }\r\n\r\n      options.data = typeof data === 'string' ? data : $.extend(true, {}, this.data, options.data, data);\r\n      options.type = method.toUpperCase() || 'GET';\r\n      var type = options.type;\r\n\r\n      if (['POST', 'GET'].indexOf(options.type) === -1 && this.config.customMethod) {\r\n        headers['X-HTTP-Method-Override'] = options.type;\r\n        options.data._method = options.type;\r\n        options.type = 'POST';\r\n      }\r\n\r\n      options.headers = $.extend(true, {}, this.headers._global, this.headers[type], options.headers, headers);\r\n\r\n      return this.$.ajax(url, options);\r\n    }\r\n\r\n    /**\r\n     * Set custom method with _method parameter.\r\n     *\r\n     * This method will return a clone of this object to help us send request once.\r\n     *\r\n     * @returns {Ajax}\r\n     */\r\n    customMethod() {\r\n      var clone = $.extend(true, {}, this);\r\n\r\n      clone.config.customMethod = true;\r\n\r\n      return clone;\r\n    }\r\n  }\r\n\r\n  window.PhoenixAjax = PhoenixAjax;\r\n\r\n})(jQuery);\r\n","/**\r\n * Part of Phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later.\r\n */\r\n\r\n/**\r\n * PhoenixCrypto\r\n */\r\n(function() {\r\n  \"use strict\";\r\n\r\n  class PhoenixCrypto extends PhoenixPlugin {\r\n    static get is() { return 'Crypto' }\r\n\r\n    static get proxies() {\r\n      return {\r\n        base64Encode: 'base64Encode',\r\n        base64Decode: 'base64Decode',\r\n        encrypt: 'encrypt',\r\n        decrypt: 'decrypt',\r\n        uuid4: 'uuid4',\r\n        md5: 'md5',\r\n      };\r\n    }\r\n\r\n    static get defaultOptions() {\r\n      return {}\r\n    }\r\n\r\n    /**\r\n     * Base64 encode.\r\n     *\r\n     * @param {string} string\r\n     *\r\n     * @returns {string}\r\n     */\r\n    base64Encode(string) {\r\n      return btoa(string);\r\n    }\r\n\r\n    /**\r\n     * Base64 decode.\r\n     *\r\n     * @param {string} string\r\n     *\r\n     * @returns {string}\r\n     */\r\n    base64Decode(string) {\r\n      return atob(string);\r\n    }\r\n\r\n    /**\r\n     * XOR Cipher encrypt.\r\n     *\r\n     * @param {string} key\r\n     * @param {string} data\r\n     */\r\n    encrypt(key, data) {\r\n      const code = data.split('').map((c, i) => c.charCodeAt(0) ^ this.keyCharAt(key, i)).join(',');\r\n\r\n      return this.base64Encode(code);\r\n    }\r\n\r\n    /**\r\n     * XOR Cipher decrypt.\r\n     *\r\n     * @param {string} key\r\n     * @param {string} data\r\n     *\r\n     * @returns {string}\r\n     */\r\n    decrypt(key, data) {\r\n      data = this.base64Decode(data);\r\n\r\n      data = data.split(',');\r\n\r\n      return data.map((c, i) => String.fromCharCode(c ^ this.keyCharAt(key, i))).join(\"\");\r\n    }\r\n\r\n    /**\r\n     * Key char at.\r\n     *\r\n     * @param {string} key\r\n     * @param {Number} i\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    keyCharAt(key, i) {\r\n      return key.charCodeAt(Math.floor(i % key.length));\r\n    }\r\n\r\n    /**\r\n     * UUID v4\r\n     *\r\n     * @see  https://gist.github.com/jed/982883\r\n     *\r\n     * @returns {string}\r\n     */\r\n    uuid4() {\r\n      return (function b(a) {\r\n        return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b)\r\n      })();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Javascript-MD5\r\n   *\r\n   * @link  https://github.com/blueimp/JavaScript-MD5\r\n   */\r\n  (function(Crypto) {\r\n    /*\r\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n     * to work around bugs in some JS interpreters.\r\n     */\r\n    function safe_add(x, y) {\r\n      var lsw = (x & 0xFFFF) + (y & 0xFFFF)\r\n      var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\r\n      return (msw << 16) | (lsw & 0xFFFF)\r\n    }\r\n\r\n    /*\r\n     * Bitwise rotate a 32-bit number to the left.\r\n     */\r\n    function bit_rol(num, cnt) {\r\n      return (num << cnt) | (num >>> (32 - cnt))\r\n    }\r\n\r\n    /*\r\n     * These functions implement the four basic operations the algorithm uses.\r\n     */\r\n    function md5_cmn(q, a, b, x, s, t) {\r\n      return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)\r\n    }\r\n\r\n    function md5_ff(a, b, c, d, x, s, t) {\r\n      return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)\r\n    }\r\n\r\n    function md5_gg(a, b, c, d, x, s, t) {\r\n      return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)\r\n    }\r\n\r\n    function md5_hh(a, b, c, d, x, s, t) {\r\n      return md5_cmn(b ^ c ^ d, a, b, x, s, t)\r\n    }\r\n\r\n    function md5_ii(a, b, c, d, x, s, t) {\r\n      return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)\r\n    }\r\n\r\n    /*\r\n     * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n     */\r\n    function binl_md5(x, len) {\r\n      /* append padding */\r\n      x[len >> 5] |= 0x80 << (len % 32);\r\n      x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n\r\n      var i;\r\n      var olda;\r\n      var oldb;\r\n      var oldc;\r\n      var oldd;\r\n      var a = 1732584193;\r\n      var b = -271733879;\r\n      var c = -1732584194;\r\n      var d = 271733878;\r\n\r\n      for (i = 0; i < x.length; i += 16) {\r\n        olda = a;\r\n        oldb = b;\r\n        oldc = c;\r\n        oldd = d;\r\n\r\n        a = md5_ff(a, b, c, d, x[i], 7, -680876936);\r\n        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n\r\n        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n        b = md5_gg(b, c, d, a, x[i], 20, -373897302);\r\n        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\r\n        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n        d = md5_hh(d, a, b, c, x[i], 11, -358537222);\r\n        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n\r\n        a = md5_ii(a, b, c, d, x[i], 6, -198630844);\r\n        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n\r\n        a = safe_add(a, olda);\r\n        b = safe_add(b, oldb);\r\n        c = safe_add(c, oldc);\r\n        d = safe_add(d, oldd);\r\n      }\r\n      return [a, b, c, d]\r\n    }\r\n\r\n    /*\r\n     * Convert an array of little-endian words to a string\r\n     */\r\n    function binl2rstr(input) {\r\n      var i;\r\n      var output = '';\r\n      for (i = 0; i < input.length * 32; i += 8) {\r\n        output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF)\r\n      }\r\n      return output\r\n    }\r\n\r\n    /*\r\n     * Convert a raw string to an array of little-endian words\r\n     * Characters >255 have their high-byte silently ignored.\r\n     */\r\n    function rstr2binl(input) {\r\n      var i;\r\n      var output = [];\r\n      output[(input.length >> 2) - 1] = undefined;\r\n      for (i = 0; i < output.length; i += 1) {\r\n        output[i] = 0\r\n      }\r\n      for (i = 0; i < input.length * 8; i += 8) {\r\n        output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32)\r\n      }\r\n      return output\r\n    }\r\n\r\n    /*\r\n     * Calculate the MD5 of a raw string\r\n     */\r\n    function rstr_md5(s) {\r\n      return binl2rstr(binl_md5(rstr2binl(s), s.length * 8))\r\n    }\r\n\r\n    /*\r\n     * Calculate the HMAC-MD5, of a key and some data (raw strings)\r\n     */\r\n    function rstr_hmac_md5(key, data) {\r\n      var i;\r\n      var bkey = rstr2binl(key);\r\n      var ipad = [];\r\n      var opad = [];\r\n      var hash;\r\n      ipad[15] = opad[15] = undefined;\r\n      if (bkey.length > 16) {\r\n        bkey = binl_md5(bkey, key.length * 8)\r\n      }\r\n      for (i = 0; i < 16; i += 1) {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n      }\r\n      hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\r\n      return binl2rstr(binl_md5(opad.concat(hash), 512 + 128))\r\n    }\r\n\r\n    /*\r\n     * Convert a raw string to a hex string\r\n     */\r\n    function rstr2hex(input) {\r\n      var hex_tab = '0123456789abcdef';\r\n      var output = '';\r\n      var x;\r\n      var i;\r\n      for (i = 0; i < input.length; i += 1) {\r\n        x = input.charCodeAt(i);\r\n        output += hex_tab.charAt((x >>> 4) & 0x0F) +\r\n          hex_tab.charAt(x & 0x0F)\r\n      }\r\n      return output\r\n    }\r\n\r\n    /*\r\n     * Encode a string as utf-8\r\n     */\r\n    function str2rstr_utf8(input) {\r\n      return decodeURIComponent(encodeURIComponent(input))\r\n    }\r\n\r\n    /*\r\n     * Take string arguments and return either raw or hex encoded strings\r\n     */\r\n    function raw_md5(s) {\r\n      return rstr_md5(str2rstr_utf8(s))\r\n    }\r\n\r\n    function hex_md5(s) {\r\n      return rstr2hex(raw_md5(s))\r\n    }\r\n\r\n    function raw_hmac_md5(k, d) {\r\n      return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))\r\n    }\r\n\r\n    function hex_hmac_md5(k, d) {\r\n      return rstr2hex(raw_hmac_md5(k, d))\r\n    }\r\n\r\n    function md5(string, key, raw) {\r\n      if (!key) {\r\n        if (!raw) {\r\n          return hex_md5(string)\r\n        }\r\n        return raw_md5(string)\r\n      }\r\n      if (!raw) {\r\n        return hex_hmac_md5(key, string)\r\n      }\r\n      return raw_hmac_md5(key, string)\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n      define(function() {\r\n        return md5\r\n      })\r\n    } else if (typeof module === 'object' && module.exports) {\r\n      module.exports = md5\r\n    }\r\n\r\n    PhoenixCrypto.prototype.md5 = md5;\r\n  })(PhoenixCrypto);\r\n\r\n  window.PhoenixCrypto = PhoenixCrypto;\r\n})();\r\n","/**\r\n * Part of Phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\r\n * @license    GNU General Public License version 2 or later.\r\n */\r\n\r\n/**\r\n * Phoenix.Translator\r\n */\r\n(() => {\r\n  \"use strict\";\r\n\r\n  class PhoenixTranslator extends PhoenixPlugin {\r\n    static get is() { return 'Translator' }\r\n\r\n    static get proxies() {\r\n      return {\r\n        trans: 'translate',\r\n        __: 'translate',\r\n        addLanguage: 'addKey',\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.keys = {};\r\n    }\r\n\r\n    /**\r\n     * Translate a string.\r\n     *\r\n     * @param {string} text\r\n     * @param {Array}  args\r\n     * @returns {string}\r\n     */\r\n    translate(text, ...args) {\r\n      var key = this.normalize(text);\r\n\r\n      if (args.length) {\r\n        return this.sprintf(text, ...args);\r\n      }\r\n\r\n      const langs = this.phoenix.data('phoenix.languages');\r\n\r\n      if (langs[key]) {\r\n        return langs[key];\r\n      }\r\n\r\n      return text;\r\n    }\r\n\r\n    sprintf(text, ...args) {\r\n      args[0] = this.translate(text);\r\n\r\n      return sprintf.apply(sprintf, args);\r\n    }\r\n\r\n    /**\r\n     * Add language key.\r\n     *\r\n     * @param {string} key\r\n     * @param {string} value\r\n     *\r\n     * @return {Phoenix.Translator}\r\n     */\r\n    addKey(key, value) {\r\n      const data = {};\r\n      data[this.normalize(key)] = value;\r\n\r\n      this.phoenix.data('phoenix.languages', data);\r\n\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Replace all symbols to dot(.).\r\n     *\r\n     * @param {string} text\r\n     *\r\n     * @return {string}\r\n     */\r\n    normalize(text) {\r\n      return text.replace(/[^A-Z0-9]+/ig, '.');\r\n    }\r\n  }\r\n\r\n  window.PhoenixTranslator = PhoenixTranslator;\r\n})();\r\n","/**\r\n * Part of phoenix project.\r\n *\r\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\r\n * @license    __LICENSE__\r\n */\r\n\r\n(() => {\r\n  class PhoenixLegacy extends PhoenixPlugin {\r\n    static get is() {\r\n      return 'Legacy';\r\n    }\r\n\r\n    created() {\r\n      const phoenix = this.phoenix;\r\n\r\n      phoenix.Theme = phoenix.UI;\r\n\r\n      let formInited = false;\r\n      let gridInited = false;\r\n\r\n      phoenix.on('jquery.plugin.created', event => {\r\n        const debug = this.phoenix.data('windwalker.debug');\r\n\r\n        // Legacy Form polyfill\r\n        if (!formInited && event.name === 'form') {\r\n          ['delete', 'get', 'patch', 'post', 'put', 'sendDelete', 'submit'].forEach((method) => {\r\n            phoenix[method] = (...args) => {\r\n              debug ? this.constructor.warn('Phoenix', method) : null;\r\n              event.instance[method](...args);\r\n            }\r\n          });\r\n\r\n          formInited = true;\r\n        }\r\n\r\n        // Legacy Grid polyfill\r\n        if (!gridInited && event.name === 'grid') {\r\n          ['toggleFilter', 'sort', 'checkRow', 'updateRow', 'doTask', 'batch', 'copyRow', 'deleteList', 'deleteRow',\r\n            'toggleAll', 'countChecked', 'getChecked', 'hasChecked', 'reorderAll', 'reorder']\r\n            .forEach((method) => {\r\n              phoenix.Grid[method] = (...args) => {\r\n                debug ? this.constructor.warn('Phoenix.Grid', method) : null;\r\n                event.instance[method](...args);\r\n              }\r\n            });\r\n\r\n          gridInited = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    ready() {\r\n      super.ready();\r\n    }\r\n\r\n    static warn(obj, method) {\r\n      console.warn(`Calling ${obj}.${method}() is deprecated.`);\r\n    }\r\n  }\r\n\r\n  window.PhoenixLegacy = PhoenixLegacy;\r\n})();\r\n"]}