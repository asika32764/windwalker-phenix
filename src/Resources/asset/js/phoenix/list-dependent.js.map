{"version":3,"sources":["list-dependent.js"],"names":["$","nope","value","ele","dep","ListDependent","ajax","url","value_field","source","text_field","first_option","default_value","initial_load","empty_mark","hooks","before_request","after_request","$element","dependent","options","element","extend","constructor","defaultOptions","bindEvents","changeList","val","on","event","currentTarget","initial","ajaxUpdate","sourceUpdate","beforeHook","updateListElements","parseInt","console","log","afterHook","data","get","done","response","success","error","message","fail","always","items","self","textField","valueField","empty","unshift","each","option","attr","attributes","index","append","trigger","before","call","after","fn","pluginName","jQuery"],"mappings":";;;;;;AAAA;;;;;;;AAOA,CAAC,CAAC,UAASA,CAAT,EAAY;AACZ;;AAEA,MAAMC,OAAO,SAAPA,IAAO,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAqB,CAAE,CAApC;;AAEA;;;;;;;;AALY,MAYNC,aAZM;AAAA;AAAA;AAAA,0BAac;AAAE,eAAO,eAAP;AAAwB;AAbxC;AAAA;AAAA,0BAckB;AAC1B,eAAO;AACLC,gBAAM;AACJC,iBAAK,IADD;AAEJC,yBAAa;AAFT,WADD;AAKLC,kBAAQ,IALH;AAMLC,sBAAY,OANP;AAOLF,uBAAa,IAPR;AAQLG,wBAAc,IART;AASLC,yBAAe,IATV;AAULC,wBAAc,IAVT;AAWLC,sBAAY,WAXP;AAYLC,iBAAO;AACLC,4BAAgBf,IADX;AAELgB,2BAAehB;AAFV;AAZF,SAAP;AAiBD;AAhCS;;AAkCV,2BAAYiB,QAAZ,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AAAA;;AACxC,WAAKC,OAAL,GAAeH,QAAf;AACA,WAAKE,OAAL,GAAepB,EAAEsB,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,KAAKC,WAAL,CAAiBC,cAApC,EAAoDJ,OAApD,CAAf;AACA,WAAKD,SAAL,GAAiBnB,EAAEmB,SAAF,CAAjB;;AAEA,WAAKM,UAAL;;AAEA,UAAI,KAAKL,OAAL,CAAaP,YAAjB,EAA+B;AAC7B,aAAKa,UAAL,CAAgB,KAAKP,SAAL,CAAeQ,GAAf,EAAhB,EAAsC,IAAtC;AACD;AACF;;AAED;;;;;AA9CU;AAAA;AAAA,mCAiDG;AAAA;;AACX,aAAKR,SAAL,CAAeS,EAAf,CAAkB,QAAlB,EAA4B,UAACC,KAAD,EAAW;AACrC,gBAAKH,UAAL,CAAgB1B,EAAE6B,MAAMC,aAAR,EAAuBH,GAAvB,EAAhB;AACD,SAFD;AAGD;;AAED;;;;;;;AAvDU;AAAA;AAAA,iCA6DCzB,KA7DD,EA6DwB;AAAA,YAAhB6B,OAAgB,uEAAN,IAAM;;AAChC7B,gBAAQA,SAAS,KAAKiB,SAAL,CAAeQ,GAAf,EAAjB;;AAEA;AACA,YAAIzB,UAAU,EAAd,EAAkB;AAChBA,kBAAQ,KAAKkB,OAAL,CAAaN,UAArB;AACD;;AAED,YAAI,KAAKM,OAAL,CAAad,IAAb,CAAkBC,GAAtB,EAA2B;AACzB,eAAKyB,UAAL,CAAgB9B,KAAhB;AACD,SAFD,MAEO,IAAI,KAAKkB,OAAL,CAAaX,MAAjB,EAAyB;AAC9B,eAAKwB,YAAL,CAAkB/B,KAAlB,EAAyB6B,OAAzB;AACD;AACF;;AAED;;;;;;;AA5EU;AAAA;AAAA,mCAkFG7B,KAlFH,EAkF0B;AAAA,YAAhB6B,OAAgB,uEAAN,IAAM;;AAClC,YAAMtB,SAAS,KAAKW,OAAL,CAAaX,MAA5B;;AAEA,aAAKyB,UAAL,CAAgBhC,KAAhB,EAAuB,KAAKmB,OAA5B,EAAqC,KAAKF,SAA1C;;AAEA,YAAIV,OAAOP,KAAP,CAAJ,EAAmB;AACjB,eAAKiC,kBAAL,CAAwB1B,OAAOP,KAAP,CAAxB;AACD,SAFD,MAEO;AACL,eAAKiC,kBAAL,CAAwB,EAAxB;;AAEA,cAAI,CAACJ,OAAD,IAAY7B,UAAU,EAAtB,IAA4BkC,SAASlC,KAAT,MAAoB,CAApD,EAAuD;AACrDmC,oBAAQC,GAAR,CAAY,qBAAqBpC,KAArB,GAA6B,aAAzC;AACD;AACF;;AAED,aAAKqC,SAAL,CAAerC,KAAf,EAAsB,KAAKmB,OAA3B,EAAoC,KAAKF,SAAzC;AACD;;AAED;;;;;;AApGU;AAAA;AAAA,iCAyGCjB,KAzGD,EAyGQ;AAAA;;AAChB,YAAMsC,OAAO,EAAb;AACAA,aAAK,KAAKpB,OAAL,CAAad,IAAb,CAAkBE,WAAvB,IAAsCN,KAAtC;;AAEA,aAAKgC,UAAL,CAAgBhC,KAAhB,EAAuB,KAAKmB,OAA5B,EAAqC,KAAKF,SAA1C;;AAEAnB,UAAEyC,GAAF,CAAM,KAAKrB,OAAL,CAAad,IAAb,CAAkBC,GAAxB,EAA6BiC,IAA7B,EACGE,IADH,CACQ,oBAAY;AAChB,cAAIC,SAASC,OAAb,EAAsB;AACpB,mBAAKT,kBAAL,CAAwBQ,SAASH,IAAjC;AACD,WAFD,MAEO;AACLH,oBAAQQ,KAAR,CAAcF,SAASG,OAAvB;AACD;AACF,SAPH,EAOKC,IAPL,CAOU,oBAAY;AACpBV,kBAAQQ,KAAR,CAAcF,SAASG,OAAvB;AACD,SATD,EASGE,MATH,CASU,YAAM;AACd,iBAAKT,SAAL,CAAerC,KAAf,EAAsB,OAAKmB,OAA3B,EAAoC,OAAKF,SAAzC;AACD,SAXD;AAYD;;AAED;;;;;;AA7HU;AAAA;AAAA,yCAkIS8B,KAlIT,EAkIgB;AACxB,YAAMC,OAAO,IAAb;AACA,YAAMC,YAAY,KAAK/B,OAAL,CAAaV,UAA/B;AACA,YAAM0C,aAAa,KAAKhC,OAAL,CAAaZ,WAAhC;AACA0C,aAAK7B,OAAL,CAAagC,KAAb;;AAEA,YAAI,KAAKjC,OAAL,CAAaT,YAAjB,EAA+B;AAC7BsC,gBAAMK,OAAN,CAAc,EAAd;AACAL,gBAAM,CAAN,EAASE,SAAT,IAAsB,KAAK/B,OAAL,CAAaT,YAAb,CAA0BwC,SAA1B,CAAtB;AACAF,gBAAM,CAAN,EAASG,UAAT,IAAuB,KAAKhC,OAAL,CAAaT,YAAb,CAA0ByC,UAA1B,CAAvB;AACD;;AAEDpD,UAAEuD,IAAF,CAAON,KAAP,EAAc,YAAW;AACvB,cAAM/C,QAAQ,KAAKkD,UAAL,CAAd;AACA,cAAMI,SAASxD,EAAE,aAAa,KAAKmD,SAAL,CAAb,GAA+B,WAAjC,CAAf;AACAK,iBAAOC,IAAP,CAAY,OAAZ,EAAqBvD,KAArB;;AAEA,cAAI,KAAKwD,UAAT,EAAqB;AACnB1D,cAAEuD,IAAF,CAAO,KAAKG,UAAZ,EAAwB,UAASC,KAAT,EAAgB;AACtCH,qBAAOC,IAAP,CAAYE,KAAZ,EAAmB,IAAnB;AACD,aAFD;AAGD;;AAED,cAAIT,KAAK9B,OAAL,CAAaR,aAAb,IAA8BV,KAAlC,EAAyC;AACvCsD,mBAAOC,IAAP,CAAY,UAAZ,EAAwB,UAAxB;AACD;;AAEDP,eAAK7B,OAAL,CAAauC,MAAb,CAAoBJ,MAApB;AACD,SAhBD;;AAkBAN,aAAK7B,OAAL,CAAawC,OAAb,CAAqB,gBAArB;AACAX,aAAK7B,OAAL,CAAawC,OAAb,CAAqB,QAArB;AACD;;AAED;;;;;;;;;AApKU;AAAA;AAAA,iCA4KC3D,KA5KD,EA4KQmB,OA5KR,EA4KiBF,SA5KjB,EA4K4B;AACpC,YAAM2C,SAAS,KAAK1C,OAAL,CAAaL,KAAb,CAAmBC,cAAlC;;AAEA,eAAO8C,OAAOC,IAAP,CAAY,IAAZ,EAAkB7D,KAAlB,EAAyBmB,OAAzB,EAAkCF,SAAlC,CAAP;AACD;;AAED;;;;;;;;;AAlLU;AAAA;AAAA,gCA0LAjB,KA1LA,EA0LOmB,OA1LP,EA0LgBF,SA1LhB,EA0L2B;AACnC,YAAM6C,QAAQ,KAAK5C,OAAL,CAAaL,KAAb,CAAmBE,aAAjC;;AAEA,eAAO+C,MAAMD,IAAN,CAAW,IAAX,EAAiB7D,KAAjB,EAAwBmB,OAAxB,EAAiCF,SAAjC,CAAP;AACD;AA9LS;;AAAA;AAAA;;AAiMZ;;;;;;;;;;AAQAnB,IAAEiE,EAAF,CAAK5D,cAAc6D,UAAnB,IAAiC,UAAS/C,SAAT,EAAoBC,OAApB,EAA6B;AAC5D,QAAI,CAAC,KAAKoB,IAAL,CAAU,aAAanC,cAAc6D,UAArC,CAAL,EAAuD;AACrD,WAAK1B,IAAL,CAAU,aAAanC,cAAc6D,UAArC,EAAiD,IAAI7D,aAAJ,CAAkB,IAAlB,EAAwBc,SAAxB,EAAmCC,OAAnC,CAAjD;AACD;;AAED,WAAO,KAAKoB,IAAL,CAAU,aAAanC,cAAc6D,UAArC,CAAP;AACD,GAND;AAOD,CAhNA,EAgNEC,MAhNF","file":"list-dependent.js","sourcesContent":["/**\n * Part of phoenix project.\n *\n * @copyright  Copyright (C) 2017 {ORGANIZATION}. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\n;(function($) {\n  \"use strict\";\n\n  const nope = (value, ele, dep) => {};\n\n  /**\n   * Class init.\n   * @param {jQuery}        $element\n   * @param {jQuery|string} dependent\n   * @param {Object}        options\n   * @constructor\n   */\n  class ListDependent {\n    static get pluginName() { return 'listDependent' }\n    static get defaultOptions() {\n      return {\n        ajax: {\n          url: null,\n          value_field: 'value'\n        },\n        source: null,\n        text_field: 'title',\n        value_field: 'id',\n        first_option: null,\n        default_value: null,\n        initial_load: true,\n        empty_mark: '__EMPTY__',\n        hooks: {\n          before_request: nope,\n          after_request: nope\n        }\n      };\n    }\n\n    constructor($element, dependent, options) {\n      this.element = $element;\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\n      this.dependent = $(dependent);\n\n      this.bindEvents();\n\n      if (this.options.initial_load) {\n        this.changeList(this.dependent.val(), true);\n      }\n    }\n\n    /**\n     * Bind events.\n     */\n    bindEvents() {\n      this.dependent.on('change', (event) => {\n        this.changeList($(event.currentTarget).val());\n      });\n    }\n\n    /**\n     * Update the list elements.\n     *\n     * @param {*}    value\n     * @param {bool} initial\n     */\n    changeList(value, initial = null) {\n      value = value || this.dependent.val();\n\n      // Empty mark\n      if (value === '') {\n        value = this.options.empty_mark;\n      }\n\n      if (this.options.ajax.url) {\n        this.ajaxUpdate(value);\n      } else if (this.options.source) {\n        this.sourceUpdate(value, initial);\n      }\n    }\n\n    /**\n     * Update list by source.\n     *\n     * @param {string} value\n     * @param {bool}   initial\n     */\n    sourceUpdate(value, initial = null) {\n      const source = this.options.source;\n\n      this.beforeHook(value, this.element, this.dependent);\n\n      if (source[value]) {\n        this.updateListElements(source[value]);\n      } else {\n        this.updateListElements([]);\n\n        if (!initial && value !== '' && parseInt(value) !== 0) {\n          console.log('List for value: ' + value + ' not found.');\n        }\n      }\n\n      this.afterHook(value, this.element, this.dependent);\n    }\n\n    /**\n     * Do ajax.\n     *\n     * @param {string} value\n     */\n    ajaxUpdate(value) {\n      const data = {};\n      data[this.options.ajax.value_field] = value;\n\n      this.beforeHook(value, this.element, this.dependent);\n\n      $.get(this.options.ajax.url, data)\n        .done(response => {\n          if (response.success) {\n            this.updateListElements(response.data);\n          } else {\n            console.error(response.message);\n          }\n        }).fail(response => {\n        console.error(response.message);\n      }).always(() => {\n        this.afterHook(value, this.element, this.dependent);\n      });\n    }\n\n    /**\n     * Update list elements.\n     *\n     * @param {Array} items\n     */\n    updateListElements(items) {\n      const self = this;\n      const textField = this.options.text_field;\n      const valueField = this.options.value_field;\n      self.element.empty();\n\n      if (this.options.first_option) {\n        items.unshift({});\n        items[0][textField] = this.options.first_option[textField];\n        items[0][valueField] = this.options.first_option[valueField];\n      }\n\n      $.each(items, function() {\n        const value = this[valueField];\n        const option = $('<option>' + this[textField] + '</option>');\n        option.attr('value', value);\n\n        if (this.attributes) {\n          $.each(this.attributes, function(index) {\n            option.attr(index, this);\n          });\n        }\n\n        if (self.options.default_value == value) {\n          option.attr('selected', 'selected');\n        }\n\n        self.element.append(option);\n      });\n\n      self.element.trigger('chosen:updated');\n      self.element.trigger('change');\n    }\n\n    /**\n     * Before hook.\n     *\n     * @param {string} value\n     * @param {jQuery} element\n     * @param {jQuery} dependent\n     * @returns {*}\n     */\n    beforeHook(value, element, dependent) {\n      const before = this.options.hooks.before_request;\n\n      return before.call(this, value, element, dependent);\n    }\n\n    /**\n     * After hook.\n     *\n     * @param {string} value\n     * @param {jQuery} element\n     * @param {jQuery} dependent\n     * @returns {*}\n     */\n    afterHook(value, element, dependent) {\n      const after = this.options.hooks.after_request;\n\n      return after.call(this, value, element, dependent);\n    }\n  }\n\n  /**\n   * Push plugins.\n   *\n   * @param {jQuery} dependent\n   * @param {Object} options\n   *\n   * @returns {*}\n   */\n  $.fn[ListDependent.pluginName] = function(dependent, options) {\n    if (!this.data(\"phoenix.\" + ListDependent.pluginName)) {\n      this.data(\"phoenix.\" + ListDependent.pluginName, new ListDependent(this, dependent, options));\n    }\n\n    return this.data(\"phoenix.\" + ListDependent.pluginName);\n  };\n})(jQuery);\n"]}