{"version":3,"sources":["form.js"],"names":["$","PhoenixForm","form","PhoenixFormElement","PhoenixJQueryPlugin","$form","options","extend","constructor","defaultOptions","bindEvents","attr","find","on","e","trigger","currentTarget","button","$button","action","target","query","data","url","queries","method","customMethod","methodInput","length","append","val","input","each","key","value","submit","post","window","jQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOA,CAAC,UAAAA,CAAC,EAAI;AAAA,MACEC,WADF;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0BAEc;AAAE,eAAO,MAAP;AAAgB;AAFhC;AAAA;AAAA,0BAImB;AACnB,eAAO;AACLC,UAAAA,IAAI,EAAE;AADD,SAAP;AAGD;AAED;;;;;AAVE;AAAA;AAAA,0BAcsB;AAAE,eAAO,MAAP;AAAe;AAdvC;AAAA;AAAA,0BAgBuB;AAAE,eAAOC,kBAAP;AAA2B;AAEtD;;;;;AAlBE;AAAA;AAAA,0BAsB0B;AAAE,eAAO,EAAP;AAAW;AAtBvC;;AAAA;AAAA,IACsBC,mBADtB;;AAAA,MAyBED,kBAzBF;AAAA;AAAA;AA0BF;;;;;AAKA,gCAAYE,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAC1BA,MAAAA,OAAO,GAAGN,CAAC,CAACO,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,KAAKC,WAAL,CAAiBC,cAApC,EAAoDH,OAApD,CAAV;AAEA,WAAKJ,IAAL,GAAYG,KAAZ;AACA,WAAKC,OAAL,GAAeA,OAAf;AAEA,WAAKI,UAAL;AACD;;AAtCC;AAAA;AAAA,mCAwCW;AAAA;;AACX,YAAI,KAAKR,IAAL,CAAUS,IAAV,CAAe,cAAf,CAAJ,EAAoC;AAClCX,UAAAA,CAAC,CAAC,KAAKE,IAAL,CAAUS,IAAV,CAAe,cAAf,CAAD,CAAD,CAAkCC,IAAlC,CAAuC,gBAAvC,EAAyDC,EAAzD,CAA4D,OAA5D,EAAqE,UAACC,CAAD,EAAO;AAC1E,YAAA,KAAI,CAACZ,IAAL,CAAUa,OAAV,CAAkB,gBAAlB,EAAoCD,CAAC,CAACE,aAAtC;AACD,WAFD;AAGD;;AAED,aAAKd,IAAL,CAAUW,EAAV,CAAa,gBAAb,EAA+B,UAACC,CAAD,EAAIG,MAAJ,EAAe;AAC5C,cAAMC,OAAO,GAAGlB,CAAC,CAACiB,MAAD,CAAjB;AACA,cAAME,MAAM,GAAGD,OAAO,CAACP,IAAR,CAAa,aAAb,CAAf;AACA,cAAMS,MAAM,GAAGF,OAAO,CAACP,IAAR,CAAa,aAAb,KAA+B,IAA9C;AACA,cAAMU,KAAK,GAAGH,OAAO,CAACI,IAAR,CAAa,OAAb,KAAyB,EAAvC;AACAD,UAAAA,KAAK,CAAC,MAAD,CAAL,GAAgBH,OAAO,CAACP,IAAR,CAAa,WAAb,KAA6B,IAA7C;;AAEA,UAAA,KAAI,CAACQ,MAAD,CAAJ,CAAaC,MAAb,EAAqBC,KAArB;AACD,SARD;AASD;AAED;;;;;;;;;;;AA1DE;AAAA;AAAA,6BAoEKE,GApEL,EAoEUC,OApEV,EAoEmBC,MApEnB,EAoE2BC,YApE3B,EAoEyC;AACzC,YAAMxB,IAAI,GAAG,KAAKA,IAAlB;;AAEA,YAAIwB,YAAJ,EAAkB;AAChB,cAAIC,WAAW,GAAGzB,IAAI,CAACU,IAAL,CAAU,uBAAV,CAAlB;;AAEA,cAAI,CAACe,WAAW,CAACC,MAAjB,EAAyB;AACvBD,YAAAA,WAAW,GAAG3B,CAAC,CAAC,sCAAD,CAAf;AAEAE,YAAAA,IAAI,CAAC2B,MAAL,CAAYF,WAAZ;AACD;;AAEDA,UAAAA,WAAW,CAACG,GAAZ,CAAgBJ,YAAhB;AACD,SAbwC,CAezC;;;AACA,YAAIF,OAAJ,EAAa;AACX,cAAIO,KAAJ;AAEA/B,UAAAA,CAAC,CAACgC,IAAF,CAAOR,OAAP,EAAgB,UAASS,GAAT,EAAcC,KAAd,EAAqB;AACnCH,YAAAA,KAAK,GAAG7B,IAAI,CAACU,IAAL,CAAU,iBAAiBqB,GAAjB,GAAuB,IAAjC,CAAR;;AAEA,gBAAI,CAACF,KAAK,CAACH,MAAX,EAAmB;AACjBG,cAAAA,KAAK,GAAG/B,CAAC,CAAC,kBAAkBiC,GAAlB,GAAwB,kBAAzB,CAAT;AAEA/B,cAAAA,IAAI,CAAC2B,MAAL,CAAYE,KAAZ;AACD;;AAEDA,YAAAA,KAAK,CAACD,GAAN,CAAUI,KAAV;AACD,WAVD;AAWD;;AAED,YAAIX,GAAJ,EAAS;AACPrB,UAAAA,IAAI,CAACS,IAAL,CAAU,QAAV,EAAoBY,GAApB;AACD;;AAED,YAAIE,MAAJ,EAAY;AACVvB,UAAAA,IAAI,CAACS,IAAL,CAAU,QAAV,EAAoBc,MAApB;AACD;;AAEDvB,QAAAA,IAAI,CAACiC,MAAL;AAEA,eAAO,IAAP;AACD;AAED;;;;;;;;;;AAjHE;AAAA;AAAA,0BA0HEZ,GA1HF,EA0HOC,OA1HP,EA0HgBE,YA1HhB,EA0H8B;AAC9B,eAAO,KAAKS,MAAL,CAAYZ,GAAZ,EAAiBC,OAAjB,EAA0B,KAA1B,EAAiCE,YAAjC,CAAP;AACD;AAED;;;;;;;;;;AA9HE;AAAA;AAAA,2BAuIGH,GAvIH,EAuIQC,OAvIR,EAuIiBE,YAvIjB,EAuI+B;AAC/BA,QAAAA,YAAY,GAAGA,YAAY,IAAI,MAA/B;AAEA,eAAO,KAAKS,MAAL,CAAYZ,GAAZ,EAAiBC,OAAjB,EAA0B,MAA1B,EAAkCE,YAAlC,CAAP;AACD;AAED;;;;;;;;;AA7IE;AAAA;AAAA,0BAqJEH,GArJF,EAqJOC,OArJP,EAqJgB;AAChB,eAAO,KAAKY,IAAL,CAAUb,GAAV,EAAeC,OAAf,EAAwB,KAAxB,CAAP;AACD;AAED;;;;;;;;;AAzJE;AAAA;AAAA,4BAiKID,GAjKJ,EAiKSC,OAjKT,EAiKkB;AAClB,eAAO,KAAKY,IAAL,CAAUb,GAAV,EAAeC,OAAf,EAAwB,OAAxB,CAAP;AACD;AAED;;;;;;;;;AArKE;AAAA;AAAA,iCA6KSD,GA7KT,EA6KcC,OA7Kd,EA6KuB;AACvB,eAAO,KAAK,QAAL,EAAeD,GAAf,EAAoBC,OAApB,CAAP;AACD;AAED;;;;;;;;;AAjLE;AAAA;AAAA,8BAyLKD,GAzLL,EAyLUC,OAzLV,EAyLmB;AACnB,eAAO,KAAKY,IAAL,CAAUb,GAAV,EAAeC,OAAf,EAAwB,QAAxB,CAAP;AACD;AA3LC;;AAAA;AAAA;;AA8LJa,EAAAA,MAAM,CAACpC,WAAP,GAAqBA,WAArB;AACD,CA/LD,EA+LGqC,MA/LH","sourcesContent":["/**\n * Part of phoenix project.\n *\n * @copyright  Copyright (C) 2018 ${ORGANIZATION}.\n * @license    __LICENSE__\n */\n\n($ => {\n  class PhoenixForm extends PhoenixJQueryPlugin {\n    static get is() { return 'Form'; }\n\n    static get proxies() {\n      return {\n        form: 'createPlugin'\n      };\n    }\n\n    /**\n     * Plugin name.\n     * @returns {string}\n     */\n    static get pluginName() { return 'form' }\n\n    static get pluginClass() { return PhoenixFormElement }\n\n    /**\n     * Default options.\n     * @returns {Object}\n     */\n    static get defaultOptions() { return {} }\n  }\n\n  class PhoenixFormElement {\n    /**\n     * Constructor.\n     * @param {jQuery} $form\n     * @param {Object} options\n     */\n    constructor($form, options) {\n      options = $.extend(true, {}, this.constructor.defaultOptions, options);\n\n      this.form = $form;\n      this.options = options;\n\n      this.bindEvents();\n    }\n\n    bindEvents() {\n      if (this.form.attr('data-toolbar')) {\n        $(this.form.attr('data-toolbar')).find('*[data-action]').on('click', (e) => {\n          this.form.trigger('phoenix.submit', e.currentTarget);\n        });\n      }\n\n      this.form.on('phoenix.submit', (e, button) => {\n        const $button = $(button);\n        const action = $button.attr('data-action');\n        const target = $button.attr('data-target') || null;\n        const query = $button.data('query') || {};\n        query['task'] = $button.attr('data-task') || null;\n\n        this[action](target, query);\n      });\n    }\n\n    /**\n     * Make a request.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     * @param  {string} method\n     * @param  {string} customMethod\n     *\n     * @returns {boolean}\n     */\n    submit(url, queries, method, customMethod) {\n      const form = this.form;\n\n      if (customMethod) {\n        let methodInput = form.find('input[name=\"_method\"]');\n\n        if (!methodInput.length) {\n          methodInput = $('<input name=\"_method\" type=\"hidden\">');\n\n          form.append(methodInput);\n        }\n\n        methodInput.val(customMethod);\n      }\n\n      // Set queries into form.\n      if (queries) {\n        let input;\n\n        $.each(queries, function(key, value) {\n          input = form.find('input[name=\"' + key + '\"]');\n\n          if (!input.length) {\n            input = $('<input name=\"' + key + '\" type=\"hidden\">');\n\n            form.append(input);\n          }\n\n          input.val(value);\n        });\n      }\n\n      if (url) {\n        form.attr('action', url);\n      }\n\n      if (method) {\n        form.attr('method', method);\n      }\n\n      form.submit();\n\n      return true;\n    }\n\n    /**\n     * Make a GET request.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     * @param  {string} customMethod\n     *\n     * @returns {boolean}\n     */\n    get(url, queries, customMethod) {\n      return this.submit(url, queries, 'GET', customMethod);\n    }\n\n    /**\n     * Post form.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     * @param  {string} customMethod\n     *\n     * @returns {boolean}\n     */\n    post(url, queries, customMethod) {\n      customMethod = customMethod || 'POST';\n\n      return this.submit(url, queries, 'POST', customMethod);\n    }\n\n    /**\n     * Make a PUT request.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     *\n     * @returns {boolean}\n     */\n    put(url, queries) {\n      return this.post(url, queries, 'PUT');\n    }\n\n    /**\n     * Make a PATCH request.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     *\n     * @returns {boolean}\n     */\n    patch(url, queries) {\n      return this.post(url, queries, 'PATCH');\n    }\n\n    /**\n     * Make a DELETE request.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     *\n     * @returns {boolean}\n     */\n    sendDelete(url, queries) {\n      return this['delete'](url, queries);\n    }\n\n    /**\n     * Make a DELETE request.\n     *\n     * @param  {string} url\n     * @param  {Object} queries\n     *\n     * @returns {boolean}\n     */\n    delete(url, queries) {\n      return this.post(url, queries, 'DELETE');\n    }\n  }\n\n  window.PhoenixForm = PhoenixForm;\n})(jQuery);\n"],"file":"form.js"}