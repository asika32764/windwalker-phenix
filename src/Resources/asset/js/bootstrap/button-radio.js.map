{"version":3,"sources":["button-radio.js"],"names":["$","plugin","defaultOptions","selector","buttonClass","activeClass","color","green","red","blue","ButtonRadio","element","options","extend","colors","$radios","find","addClass","on","e","$btn","currentTarget","$group","parent","$input","prop","default","removeClass","attr","dispatchEvent","Event","each","$radio","$label","$text","text","hide","prepend","val","push","trigger","unique","fn","data","jQuery"],"mappings":"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","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\n(($) => {\n  \"use strict\";\n\n  const plugin = 'buttonRadio';\n\n  const defaultOptions = {\n    selector: '.btn-group .radio',\n    buttonClass: 'btn',\n    activeClass: 'active',\n    color: {\n      'default': 'btn-default btn-outline-secondary',\n      green: 'btn-success',\n      red: 'btn-danger',\n      blue: 'btn-primary'\n    }\n  };\n\n  /**\n   * Button Radio\n   *\n   * @param {HTMLElement} element\n   * @param {Object}      options\n   *\n   * @constructor\n   */\n  class ButtonRadio {\n    constructor(element, options) {\n      this.element = $(element);\n      this.options = $.extend(true, {}, defaultOptions, options);\n      let colors = [];\n\n      // Turn radios into btn-group\n      const $radios = this.element.find(this.options.selector);\n\n      options = this.options;\n\n      $radios.addClass(options.buttonClass)\n        .addClass(options.color['default']);\n\n      $radios.on('click', e => {\n        const $btn = $(e.currentTarget);\n        const $group = $btn.parent().find('.' + options.buttonClass);\n        const $input = $btn.find('input[type=radio]');\n\n        if ($input.prop('disabled') || $input.prop('readonly')) {\n          return;\n        }\n\n        if (!$input.prop('checked')) {\n          $group\n            .addClass(options.color.default)\n            .removeClass(options.activeClass)\n            .removeClass(colors);\n\n          $btn.addClass(options.activeClass).addClass($input.attr('data-color-class')).removeClass(options.color.default);\n\n          $input.prop('checked', true);\n          $input[0].dispatchEvent(new Event('change'));\n        }\n      });\n\n      $radios.each(function () {\n        const $radio = $(this);\n        const $input = $radio.find('input');\n        const $label = $radio.find('label');\n        const $text = $('<span>' + $label.text() + '</span>');\n\n        $label.hide();\n        $input.hide();\n        $radio.prepend($text);\n        $radio.removeClass('radio');\n\n        // Prepare color schema\n        let color = $input.attr('data-color-class');\n\n        if (color == null) {\n          switch ($input.val()) {\n            case '':\n              color = options.color.blue;\n              break;\n\n            case '0':\n              color = options.color.red;\n              break;\n\n            default:\n              color = options.color.green;\n              break;\n          }\n\n          $input.attr('data-color-class', color);\n        }\n\n        colors.push(color);\n\n        if ($input.prop('checked')) {\n          $radio.removeClass(options.color.default).addClass(options.activeClass).addClass(color);\n        }\n\n        if ($input.prop('disabled')) {\n          $radio.addClass('disabled');\n        }\n\n        if ($input.prop('readonly')) {\n          $radio.addClass('readonly');\n        }\n      });\n\n      $radios.parent().trigger('button-radio.loaded');\n\n      // Make color elements unique\n      colors = $.unique(colors);\n    }\n  }\n\n  /**\n   * Push to plugins.\n   *\n   * @param   {Object} options\n   *\n   * @returns {ButtonRadio}\n   */\n  $.fn[plugin] = function (options) {\n    if (!this.data('phoenix.' + plugin)) {\n      this.data('phoenix.' + plugin, new ButtonRadio(this, options));\n    }\n\n    return this.data('phoenix.' + plugin);\n  };\n})(jQuery);\n"],"file":"button-radio.js"}