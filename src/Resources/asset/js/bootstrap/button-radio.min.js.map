{"version":3,"sources":["button-radio.min.js"],"names":["$","plugin","defaultOptions","selector","buttonClass","activeClass","color","default","green","red","blue","fn","options","this","data","element","extend","$radios","find","addClass","click","btn","group","parent","input","prop","removeClass","val","trigger","each","$radio","$input","$label","$text","text","hide","prepend","jQuery"],"mappings":"CAOA,SAAUA,GAEN,aAEA,IAAIC,EAAS,cAETC,GACAC,SAAU,oBACVC,YAAa,MACbC,YAAa,SACbC,OACIC,QAAW,cACXC,MAAS,cACTC,IAAS,aACTC,KAAS,gBA0HjBV,EAAEW,GAAGV,GAAU,SAAUW,GAOrB,OALKC,KAAKC,KAAK,WAAab,IAExBY,KAAKC,KAAK,WAAab,EAAQ,IAlHrB,SAASc,EAASH,GAEhCC,KAAKE,QAAUf,EAAEe,GACjBF,KAAKD,QAAUZ,EAAEgB,QAAO,KAAUd,EAAgBU,GAGlD,IAAIK,EAAUJ,KAAKE,QAAQG,KAAKL,KAAKD,QAAQT,UAE7CS,EAAUC,KAAKD,QAEfK,EAAQE,SAASP,EAAQR,aACpBe,SAASP,EAAQN,MAAe,SAErCW,EAAQG,MAAM,WAEV,IAAIC,EAAMrB,EAAEa,MACRS,EAAQD,EAAIE,SAASL,KAAK,IAAMN,EAAQR,aACxCoB,EAAQH,EAAIH,KAAK,qBAEjBM,EAAMC,KAAK,aAAeD,EAAMC,KAAK,aAKpCD,EAAMC,KAAK,aAEZH,EAAMI,YAAYd,EAAQP,aACrBqB,YAAYd,EAAQN,MAAME,OAC1BkB,YAAYd,EAAQN,MAAMG,KAC1BiB,YAAYd,EAAQN,MAAMI,MAEZ,IAAfc,EAAMG,MAENN,EAAIF,SAASP,EAAQP,aAAac,SAASP,EAAQN,MAAMI,MAErC,GAAfc,EAAMG,MAEXN,EAAIF,SAASP,EAAQP,aAAac,SAASP,EAAQN,MAAMG,KAIzDY,EAAIF,SAASP,EAAQP,aAAac,SAASP,EAAQN,MAAME,OAG7DgB,EAAMC,KAAK,WAAW,GACtBD,EAAMI,QAAQ,aAItBX,EAAQY,KAAK,WAET,IAAIC,EAAS9B,EAAEa,MACXkB,EAASD,EAAOZ,KAAK,SACrBc,EAASF,EAAOZ,KAAK,SACrBe,EAASjC,EAAE,SAAWgC,EAAOE,OAAS,WAE1CF,EAAOG,OACPJ,EAAOI,OACPL,EAAOM,QAAQH,GACfH,EAAOJ,YAAY,SAEfK,EAAON,KAAK,aAEQ,IAAhBM,EAAOJ,MAEPG,EAAOX,SAASP,EAAQP,aAAac,SAASP,EAAQN,MAAMI,MAEvC,GAAhBqB,EAAOJ,MAEZG,EAAOX,SAASP,EAAQP,aAAac,SAASP,EAAQN,MAAMG,KAI5DqB,EAAOX,SAASP,EAAQP,aAAac,SAASP,EAAQN,MAAME,QAIhEuB,EAAON,KAAK,aAEZK,EAAOX,SAAS,YAGhBY,EAAON,KAAK,aAEZK,EAAOX,SAAS,cA8BW,CAAgBN,KAAMD,IAGlDC,KAAKC,KAAK,WAAab,IA/ItC,CAiJGoC","file":"button-radio.min.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\n(function($)\n{\n    \"use strict\";\n\n    var plugin = 'buttonRadio';\n\n    var defaultOptions = {\n        selector: '.btn-group .radio',\n        buttonClass: 'btn',\n        activeClass: 'active',\n        color: {\n            'default': 'btn-default',\n            green:   'btn-success',\n            red:     'btn-danger',\n            blue:    'btn-primary'\n        }\n    };\n\n    /**\n     * Button Radio\n     *\n     * @param {HtmlElement} element\n     * @param {Object}      options\n     *\n     * @constructor\n     */\n    var ButtonRadio = function(element, options)\n    {\n        this.element = $(element);\n        this.options = $.extend(true, {}, defaultOptions, options);\n\n        // Turn radios into btn-group\n        var $radios = this.element.find(this.options.selector);\n\n        options = this.options;\n\n        $radios.addClass(options.buttonClass)\n            .addClass(options.color['default']);\n\n        $radios.click(function()\n        {\n            var btn = $(this);\n            var group = btn.parent().find('.' + options.buttonClass);\n            var input = btn.find('input[type=radio]');\n\n            if (input.prop('disabled') || input.prop('readonly'))\n            {\n                return;\n            }\n\n            if (!input.prop('checked'))\n            {\n                group.removeClass(options.activeClass)\n                    .removeClass(options.color.green)\n                    .removeClass(options.color.red)\n                    .removeClass(options.color.blue);\n\n                if (input.val() == '')\n                {\n                    btn.addClass(options.activeClass).addClass(options.color.blue);\n                }\n                else if (input.val() == 0)\n                {\n                    btn.addClass(options.activeClass).addClass(options.color.red);\n                }\n                else\n                {\n                    btn.addClass(options.activeClass).addClass(options.color.green);\n                }\n\n                input.prop('checked', true);\n                input.trigger('change');\n            }\n        });\n\n        $radios.each(function()\n        {\n            var $radio = $(this);\n            var $input = $radio.find('input');\n            var $label = $radio.find('label');\n            var $text  = $('<span>' + $label.text() + '</span>');\n\n            $label.hide();\n            $input.hide();\n            $radio.prepend($text);\n            $radio.removeClass('radio');\n\n            if ($input.prop('checked'))\n            {\n                if ($input.val() == '')\n                {\n                    $radio.addClass(options.activeClass).addClass(options.color.blue);\n                }\n                else if ($input.val() == 0)\n                {\n                    $radio.addClass(options.activeClass).addClass(options.color.red);\n                }\n                else\n                {\n                    $radio.addClass(options.activeClass).addClass(options.color.green);\n                }\n            }\n\n            if ($input.prop('disabled'))\n            {\n                $radio.addClass('disabled');\n            }\n\n            if ($input.prop('readonly'))\n            {\n                $radio.addClass('readonly');\n            }\n        });\n\n        // TODO: Must rewrite to fix for strict mode: Octal literals are not allowed in strict mode.\n        // add color classes to chosen field based on value\n        // $('select[class^=\"chzn-color\"], select[class*=\" chzn-color\"]').on('liszt:ready', function()\n        // {\n        //     var select = $(this);\n        //     var cls = this.className.replace(/^.(chzn-color[a-z0-9-_]*)$.*/, '\\1');\n        //     var container = select.next('.chzn-container').find('.chzn-single');\n        //     container.addClass(cls).attr('rel', 'value_' + select.val());\n        //     select.on('change click', function()\n        //     {\n        //         container.attr('rel', 'value_' + select.val());\n        //     });\n        // });\n    };\n\n    /**\n     * Push to plugins.\n     *\n     * @param   {Object} options\n     *\n     * @returns {ButtonRadio}\n     */\n    $.fn[plugin] = function (options)\n    {\n        if (!this.data('phoenix.' + plugin))\n        {\n            this.data('phoenix.' + plugin, new ButtonRadio(this, options));\n        }\n\n        return this.data('phoenix.' + plugin);\n    };\n})(jQuery);\n"]}