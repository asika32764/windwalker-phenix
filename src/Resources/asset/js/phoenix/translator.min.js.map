{"version":3,"sources":["translator.min.js"],"names":["Phoenix","Translator","keys","translate","text","key","this","normalize","sprintf","args","Array","prototype","slice","call","arguments","apply","addKey","value","replace"],"mappings":"AAOA,IAAIA,SAKJ,SAAUA,GACR,cAuDCA,UAAYA,aArDLC,YACNC,QASAC,UAAW,SAASC,GAClB,IAAIC,EAAMC,KAAKC,UAAUH,GAEzB,OAAIE,KAAKJ,KAAKG,GACLC,KAAKJ,KAAKG,GAGZD,GAGTI,QAAS,SAASJ,GAChB,IAAIK,EAAOC,MAAMC,UAAUC,MAAMC,KAAKC,WAItC,OAFAL,EAAK,GAAKH,KAAKH,UAAUC,GAElBI,QAAQO,MAAMP,QAASC,IAWhCO,OAAQ,SAASX,EAAKY,GAGpB,OAFAX,KAAKJ,KAAKI,KAAKC,UAAUF,IAAQY,EAE1BX,MAUTC,UAAW,SAASH,GAClB,OAAOA,EAAKc,QAAQ,eAAgB,OArD1C","file":"translator.min.js","sourcesContent":["/**\n * Part of Phoenix project.\n *\n * @copyright  Copyright (C) 2016 LYRASOFT. All rights reserved.\n * @license    GNU General Public License version 2 or later.\n */\n\nvar Phoenix;\n\n/**\n * Phoenix.Translator\n */\n(function(Phoenix) {\n  \"use strict\";\n\n  Phoenix.Translator = {\n    keys: {},\n\n    /**\n     * Translate a string.\n     *\n     * @param {string} text\n     *\n     * @returns {string}\n     */\n    translate: function(text) {\n      var key = this.normalize(text);\n\n      if (this.keys[key]) {\n        return this.keys[key];\n      }\n\n      return text;\n    },\n\n    sprintf: function(text) {\n      var args = Array.prototype.slice.call(arguments);\n\n      args[0] = this.translate(text);\n\n      return sprintf.apply(sprintf, args);\n    },\n\n    /**\n     * Add language key.\n     *\n     * @param {string} key\n     * @param {string} value\n     *\n     * @return {Phoenix.Translator}\n     */\n    addKey: function(key, value) {\n      this.keys[this.normalize(key)] = value;\n\n      return this;\n    },\n\n    /**\n     * Replace all symbols to dot(.).\n     *\n     * @param {string} text\n     *\n     * @return {string}\n     */\n    normalize: function(text) {\n      return text.replace(/[^A-Z0-9]+/ig, '.');\n    }\n  };\n})(Phoenix || (Phoenix = {}));\n"]}